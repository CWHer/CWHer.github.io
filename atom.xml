<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>魍魉的小窝</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-06-15T13:34:27.249Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>CWHer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>洛谷P1471 方差</title>
    <link href="http://yoursite.com/2018/06/15/%E6%B4%9B%E8%B0%B7P1471-%E6%96%B9%E5%B7%AE/"/>
    <id>http://yoursite.com/2018/06/15/洛谷P1471-方差/</id>
    <published>2018-06-15T12:25:08.000Z</published>
    <updated>2018-06-15T13:34:27.249Z</updated>
    
    <content type="html"><![CDATA[<p>区间修改，区间查询，基本可以用线段树维护，难就难在方差<br>将方差的计算展开</p><script type="math/tex; mode=display">\frac{\sum_{i=1}^{n} \left ( a_{i}-\bar{a} \right )^{2}}{n}= \frac{\sum_{i=1}^{n} a_{i}^{2}-2\bar{a}\sum_{i=1}^{n}a_{i}+n\bar{a}^{2}}{n}= -\bar{a}^{2}+\frac{\sum_{i=1}^{n}a_{i}^{2}}{n}</script><p>对于区间加法</p><script type="math/tex; mode=display">\sum_{i=l}^{r}\left ( a_{i}+x \right )^{2}= \sum_{i=l}^{r}a_{i}^{2}+2x\sum_{i=l}^{r}a_{i}+\left ( r-l+1 \right )*x^{2}</script><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100050</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps=<span class="number">1e-8</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,ql,qr;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span><span class="keyword">double</span> val,sum,c;&#125; t[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">sqr</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123;<span class="keyword">return</span> x*x;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l==r) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;t[o].val);</span><br><span class="line">        t[o].sum=sqr(t[o].val);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    build(o&lt;&lt;<span class="number">1</span>,l,mid);</span><br><span class="line">    build(o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">    t[o].val=t[o&lt;&lt;<span class="number">1</span>].val+t[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].val;</span><br><span class="line">    t[o].sum=t[o&lt;&lt;<span class="number">1</span>].sum+t[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> x=t[o].c;t[o].c=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>; </span><br><span class="line">    t[o&lt;&lt;<span class="number">1</span>].sum+=(mid-l+<span class="number">1</span>)*sqr(x)+<span class="number">2</span>*x*t[o&lt;&lt;<span class="number">1</span>].val;</span><br><span class="line">    t[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].sum+=(r-mid)*sqr(x)+<span class="number">2</span>*x*t[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].val;</span><br><span class="line">    t[o&lt;&lt;<span class="number">1</span>].val+=(mid-l+<span class="number">1</span>)*x;</span><br><span class="line">    t[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].val+=(r-mid)*x;</span><br><span class="line">    t[o&lt;&lt;<span class="number">1</span>].c+=x,t[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].c+=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ql&lt;=l&amp;&amp;r&lt;=qr) </span><br><span class="line">    &#123;</span><br><span class="line">        t[o].sum+=sqr(x)*(r-l+<span class="number">1</span>)+<span class="number">2</span>*x*t[o].val;</span><br><span class="line">        t[o].val+=(r-l+<span class="number">1</span>)*x;t[o].c+=x;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">fabs</span>(t[o].c)&gt;eps) pushdown(o,l,r);</span><br><span class="line">    <span class="keyword">if</span> (ql&lt;=mid) update(o&lt;&lt;<span class="number">1</span>,l,mid,x);</span><br><span class="line">    <span class="keyword">if</span> (qr&gt;mid) update(o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x);</span><br><span class="line">    t[o].val=t[o&lt;&lt;<span class="number">1</span>].val+t[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].val;</span><br><span class="line">    t[o].sum=t[o&lt;&lt;<span class="number">1</span>].sum+t[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ask</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ql&lt;=l&amp;&amp;r&lt;=qr) <span class="keyword">return</span> t[o].val;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;<span class="keyword">double</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">fabs</span>(t[o].c)&gt;eps) pushdown(o,l,r);</span><br><span class="line">    <span class="keyword">if</span> (ql&lt;=mid) ret+=ask(o&lt;&lt;<span class="number">1</span>,l,mid);</span><br><span class="line">    <span class="keyword">if</span> (qr&gt;mid) ret+=ask(o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ql&lt;=l&amp;&amp;r&lt;=qr) <span class="keyword">return</span> t[o].sum;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;<span class="keyword">double</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">fabs</span>(t[o].c)&gt;eps) pushdown(o,l,r);</span><br><span class="line">    <span class="keyword">if</span> (ql&lt;=mid) ret+=query(o&lt;&lt;<span class="number">1</span>,l,mid);</span><br><span class="line">    <span class="keyword">if</span> (qr&gt;mid) ret+=query(o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    build(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> opt;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;opt,&amp;ql,&amp;qr);</span><br><span class="line">        <span class="keyword">if</span> (opt==<span class="number">1</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">double</span> x;<span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;x);</span><br><span class="line">            update(<span class="number">1</span>,<span class="number">1</span>,n,x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (opt==<span class="number">2</span>) <span class="built_in">printf</span>(<span class="string">"%.4lf\n"</span>,ask(<span class="number">1</span>,<span class="number">1</span>,n)/(qr-ql+<span class="number">1</span>));</span><br><span class="line">        <span class="keyword">if</span> (opt==<span class="number">3</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">double</span> x=ask(<span class="number">1</span>,<span class="number">1</span>,n)/(qr-ql+<span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%.4lf\n"</span>,-sqr(x)+query(<span class="number">1</span>,<span class="number">1</span>,n)/(qr-ql+<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;区间修改，区间查询，基本可以用线段树维护，难就难在方差&lt;br&gt;将方差的计算展开&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\frac{\sum_{i=1}^{n} \left ( a_{i}-\bar{a} \right )^{2}}{n}= \frac{\sum_{i=1}^{n} a_{i}^{2}-2\bar{a}\sum_{i=1}^{n}a_{i}+n\bar{a}^{2}}{n}= -\bar{a}^{2}+\frac{\sum_{i=1}^{n}a_{i}^{2}}{n}&lt;/script&gt;&lt;p&gt;对于区间加法&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\sum_{i=l}^{r}\left ( a_{i}+x \right )^{2}= \sum_{i=l}^{r}a_{i}^{2}+2x\sum_{i=l}^{r}a_{i}+\left ( r-l+1 \right )*x^{2}&lt;/script&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="线段树" scheme="http://yoursite.com/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>[ZJOI2006]书架</title>
    <link href="http://yoursite.com/2018/06/13/ZJOI2006-%E4%B9%A6%E6%9E%B6/"/>
    <id>http://yoursite.com/2018/06/13/ZJOI2006-书架/</id>
    <published>2018-06-13T14:32:28.000Z</published>
    <updated>2018-06-15T13:34:47.689Z</updated>
    
    <content type="html"><![CDATA[<p>一看题目就有一种平衡树的气息。<br>给每本书一个val来维护相对位置<br>再用一个pos[]数组记录下编号为x的位置pos[x]<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">1</span>&lt;&lt;<span class="number">30</span>,N=<span class="number">200050</span>;</span><br><span class="line"><span class="keyword">int</span> rt=<span class="number">0</span>,cnt=<span class="number">0</span>,n,m,pos[N],w[N],L,R;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> ((ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&amp;&amp;ch!=<span class="string">'-'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) &#123;t=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) &#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span><span class="keyword">int</span> ch[<span class="number">2</span>],fa,rec,val,sz;&#125;t[N];</span><br><span class="line"><span class="keyword">namespace</span> Splay</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> o)</span> </span>&#123;t[o].sz=t[t[o].ch[<span class="number">0</span>]].sz+t[t[o].ch[<span class="number">1</span>]].sz+<span class="number">1</span>;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">maintain</span><span class="params">(<span class="keyword">int</span> o)</span> </span>&#123;pos[t[o].rec]=o;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> y=t[x].fa,z=t[y].fa,k=t[y].ch[<span class="number">1</span>]==x;</span><br><span class="line">        t[z].ch[t[z].ch[<span class="number">1</span>]==y]=x,t[x].fa=z;</span><br><span class="line">        t[y].ch[k]=t[x].ch[k^<span class="number">1</span>],t[t[x].ch[k^<span class="number">1</span>]].fa=y;</span><br><span class="line">        t[x].ch[k^<span class="number">1</span>]=y,t[y].fa=x;</span><br><span class="line">        calc(y),calc(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> to)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (t[x].fa!=to)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> y=t[x].fa,z=t[y].fa;</span><br><span class="line">            <span class="keyword">if</span> (z!=to) (t[y].ch[<span class="number">0</span>]==x)^(t[z].ch[<span class="number">0</span>]==y)?rotate(x):rotate(y);</span><br><span class="line">            rotate(x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!to) rt=x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> &amp;o,<span class="keyword">int</span> fa,<span class="keyword">int</span> x,<span class="keyword">int</span> idx)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!o)</span><br><span class="line">        &#123;</span><br><span class="line">            o=++cnt; </span><br><span class="line">            t[o].val=x,t[o].fa=fa;</span><br><span class="line">            t[o].sz=<span class="number">1</span>;</span><br><span class="line">            t[o].rec=idx;</span><br><span class="line">            pos[idx]=o;</span><br><span class="line">            splay(o,<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        t[o].sz++;</span><br><span class="line">        ins(t[o].ch[x&gt;t[o].val],o,x,idx);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> o=rt;</span><br><span class="line">        <span class="keyword">while</span> (t[o].ch[x&gt;t[o].val]&amp;&amp;x!=t[o].val) o=t[o].ch[x&gt;t[o].val];</span><br><span class="line">        splay(o,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">next</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> opt)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        find(x);</span><br><span class="line">        <span class="keyword">if</span> ((t[rt].val&gt;x&amp;&amp;opt)||(t[rt].val&lt;x&amp;&amp;!opt)) <span class="keyword">return</span> rt;</span><br><span class="line">        <span class="keyword">int</span> o=t[rt].ch[opt];</span><br><span class="line">        <span class="keyword">while</span> (t[o].ch[opt^<span class="number">1</span>]) o=t[o].ch[opt^<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">return</span> o;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> pre=next(x,<span class="number">0</span>),nxt=next(x,<span class="number">1</span>);</span><br><span class="line">        splay(pre,<span class="number">0</span>),splay(nxt,pre);</span><br><span class="line">        <span class="keyword">int</span> o=t[nxt].ch[<span class="number">0</span>];</span><br><span class="line">    t[nxt].ch[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    calc(nxt);calc(pre);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">K_th</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!o) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (k&lt;=t[t[o].ch[<span class="number">0</span>]].sz)</span><br><span class="line">            <span class="keyword">return</span> K_th(t[o].ch[<span class="number">0</span>],k);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (k&gt;t[t[o].ch[<span class="number">0</span>]].sz+<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> K_th(t[o].ch[<span class="number">1</span>],k-t[t[o].ch[<span class="number">0</span>]].sz<span class="number">-1</span>);</span><br><span class="line">        splay(o,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> t[o].rec;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Splay;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> f)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!f) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (f&lt;<span class="number">0</span>) f++;</span><br><span class="line">    <span class="keyword">int</span> nxt=next(t[pos[x]].val,f);</span><br><span class="line">    swap(t[nxt].rec,t[pos[x]].rec);</span><br><span class="line">    maintain(pos[x]),maintain(nxt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L=<span class="number">1</span>,R=n=read(),m=read();</span><br><span class="line">    ins(rt,<span class="number">0</span>,INF,<span class="number">0</span>),ins(rt,<span class="number">0</span>,-INF,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) ins(rt,<span class="number">0</span>,i,read());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> str[<span class="number">20</span>];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,str);</span><br><span class="line">        <span class="keyword">int</span> x=read();</span><br><span class="line">        <span class="keyword">if</span> (str[<span class="number">0</span>]==<span class="string">'T'</span>) del(t[pos[x]].val),ins(rt,<span class="number">0</span>,--L,x);</span><br><span class="line">        <span class="keyword">if</span> (str[<span class="number">0</span>]==<span class="string">'B'</span>) del(t[pos[x]].val),ins(rt,<span class="number">0</span>,++R,x);</span><br><span class="line">        <span class="keyword">if</span> (str[<span class="number">0</span>]==<span class="string">'I'</span>) insert(x,read());</span><br><span class="line">        <span class="keyword">if</span> (str[<span class="number">0</span>]==<span class="string">'A'</span>) find(t[pos[x]].val),<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,t[t[rt].ch[<span class="number">0</span>]].sz<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">if</span> (str[<span class="number">0</span>]==<span class="string">'Q'</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,K_th(rt,x+<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一看题目就有一种平衡树的气息。&lt;br&gt;给每本书一个val来维护相对位置&lt;br&gt;再用一个pos[]数组记录下编号为x的位置pos[x]&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="平衡树" scheme="http://yoursite.com/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>[POI2011]ROT-Tree Rotations</title>
    <link href="http://yoursite.com/2018/06/13/POI2011-ROT-Tree-Rotations/"/>
    <id>http://yoursite.com/2018/06/13/POI2011-ROT-Tree-Rotations/</id>
    <published>2018-06-13T14:31:51.000Z</published>
    <updated>2018-06-15T13:34:36.243Z</updated>
    
    <content type="html"><![CDATA[<p>对于每个节点分别求左-右，右-左的逆序对，将较小的加入答案<br>原来思路：枚举个数较少的节点的每个数，二分求答案<br>看完题解发现可以用线段树合并。新技能get<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">400050</span>;</span><br><span class="line"><span class="keyword">int</span> cnt,st,ch[N][<span class="number">2</span>],w[N],rt[N],n;</span><br><span class="line"><span class="keyword">int</span> idx,ls[N*<span class="number">20</span>],rs[N*<span class="number">20</span>],sum[N*<span class="number">20</span>];</span><br><span class="line">LL ans,f,g;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> &amp;o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    o=++cnt;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;w[o]);</span><br><span class="line">    <span class="keyword">if</span> (!w[o]) dfs(ch[o][<span class="number">0</span>]),dfs(ch[o][<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> &amp;o,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    o=++idx;</span><br><span class="line">    <span class="keyword">if</span> (l==r) &#123;sum[o]=<span class="number">1</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    k&lt;=mid?build(ls[o],l,mid,k):build(rs[o],mid+<span class="number">1</span>,r,k);</span><br><span class="line">    sum[o]=sum[ls[o]]+sum[rs[o]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!u||!v) <span class="keyword">return</span> v+u;</span><br><span class="line">    f+=(LL)sum[rs[u]]*sum[ls[v]];</span><br><span class="line">    g+=(LL)sum[ls[u]]*sum[rs[v]];</span><br><span class="line">    <span class="keyword">int</span> o=++idx;</span><br><span class="line">    ls[o]=merge(ls[u],ls[v]);</span><br><span class="line">    rs[o]=merge(rs[u],rs[v]);</span><br><span class="line">    sum[o]=sum[ls[o]]+sum[rs[o]];</span><br><span class="line">    <span class="keyword">return</span> o;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!o) <span class="keyword">return</span>;</span><br><span class="line">    calc(ch[o][<span class="number">0</span>]),calc(ch[o][<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span> (!w[o]) </span><br><span class="line">    &#123;</span><br><span class="line">        f=g=<span class="number">0</span>;</span><br><span class="line">        rt[o]=merge(rt[ch[o][<span class="number">0</span>]],rt[ch[o][<span class="number">1</span>]]);</span><br><span class="line">        ans+=min(f,g);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    dfs(st);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">        <span class="keyword">if</span> (w[i]) build(rt[i],<span class="number">1</span>,n,w[i]);</span><br><span class="line">    calc(st);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于每个节点分别求左-右，右-左的逆序对，将较小的加入答案&lt;br&gt;原来思路：枚举个数较少的节点的每个数，二分求答案&lt;br&gt;看完题解发现可以用线段树合并。新技能get&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="线段树" scheme="http://yoursite.com/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>[ZJOI2006]皇帝的烦恼</title>
    <link href="http://yoursite.com/2018/06/13/ZJOI2006-%E7%9A%87%E5%B8%9D%E7%9A%84%E7%83%A6%E6%81%BC/"/>
    <id>http://yoursite.com/2018/06/13/ZJOI2006-皇帝的烦恼/</id>
    <published>2018-06-13T14:29:57.000Z</published>
    <updated>2018-06-15T13:34:52.683Z</updated>
    
    <content type="html"><![CDATA[<p>二分+dp<br>dp不是很好想<br>f记录与第一个位置相同个数的最大值<br>g记录与第一个位置相同个数的最小值<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">20050</span>;</span><br><span class="line"><span class="keyword">int</span> n,maxs,sum=<span class="number">0</span>,w[N],f[N],g[N];<span class="comment">//f&gt;&gt;max g&gt;&gt;min</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    f[<span class="number">1</span>]=g[<span class="number">1</span>]=w[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        f[i]=min(w[<span class="number">1</span>]-g[i<span class="number">-1</span>],w[i]);  </span><br><span class="line">        g[i]=max(<span class="number">0</span>,w[i]-(k-w[i<span class="number">-1</span>]-w[<span class="number">1</span>]+f[i<span class="number">-1</span>]));  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> !g[n];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;w[i]),sum+=w[i];</span><br><span class="line">    maxs=w[<span class="number">1</span>]+w[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++) maxs=max(maxs,w[i]+w[i+<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span> (!(n&amp;<span class="number">1</span>)) &#123;<span class="built_in">printf</span>(<span class="string">"%d"</span>,maxs);<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">    <span class="keyword">int</span> L=maxs,R=sum;</span><br><span class="line">    <span class="keyword">while</span> (L&lt;R)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(L+R)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (check(mid))</span><br><span class="line">            R=mid;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            L=mid+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,L);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;二分+dp&lt;br&gt;dp不是很好想&lt;br&gt;f记录与第一个位置相同个数的最大值&lt;br&gt;g记录与第一个位置相同个数的最小值&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="二分答案" scheme="http://yoursite.com/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
      <category term="动态规划" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>Splay模板</title>
    <link href="http://yoursite.com/2018/06/11/Splay/"/>
    <id>http://yoursite.com/2018/06/11/Splay/</id>
    <published>2018-06-11T07:57:52.000Z</published>
    <updated>2018-06-15T13:34:41.938Z</updated>
    
    <content type="html"><![CDATA[<p>优化了一下之前Splay<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">1</span>&lt;&lt;<span class="number">30</span>,N=<span class="number">100050</span>;</span><br><span class="line"><span class="keyword">int</span> rt=<span class="number">0</span>,cnt=<span class="number">0</span>,n;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> ((ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&amp;&amp;ch!=<span class="string">'-'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) &#123;t=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) &#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span><span class="keyword">int</span> ch[<span class="number">2</span>],fa,rec,val,sz;&#125;t[N];</span><br><span class="line"><span class="keyword">namespace</span> Splay</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> o)</span> </span>&#123;t[o].sz=t[t[o].ch[<span class="number">0</span>]].sz+t[t[o].ch[<span class="number">1</span>]].sz+t[o].rec;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> y=t[x].fa,z=t[y].fa,k=t[y].ch[<span class="number">1</span>]==x;</span><br><span class="line">t[z].ch[t[z].ch[<span class="number">1</span>]==y]=x,t[x].fa=z;</span><br><span class="line">t[y].ch[k]=t[x].ch[k^<span class="number">1</span>],t[t[x].ch[k^<span class="number">1</span>]].fa=y;</span><br><span class="line">t[x].ch[k^<span class="number">1</span>]=y,t[y].fa=x;</span><br><span class="line">calc(y),calc(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> to)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (t[x].fa!=to)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y=t[x].fa,z=t[y].fa;</span><br><span class="line"><span class="keyword">if</span> (z!=to) (t[y].ch[<span class="number">0</span>]==x)^(t[z].ch[<span class="number">0</span>]==y)?rotate(x):rotate(y);</span><br><span class="line">rotate(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!to) rt=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> &amp;o,<span class="keyword">int</span> fa,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!o)</span><br><span class="line">&#123;</span><br><span class="line">o=++cnt; </span><br><span class="line">t[o].val=x,t[o].fa=fa;</span><br><span class="line">t[o].sz=t[o].rec=<span class="number">1</span>;</span><br><span class="line">splay(o,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">t[o].sz++;</span><br><span class="line"><span class="keyword">if</span> (x==t[o].val) &#123;t[o].rec++;<span class="keyword">return</span>;&#125;</span><br><span class="line">ins(t[o].ch[x&gt;t[o].val],o,x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> o=rt;</span><br><span class="line"><span class="keyword">while</span> (t[o].ch[x&gt;t[o].val]&amp;&amp;x!=t[o].val) o=t[o].ch[x&gt;t[o].val];</span><br><span class="line">splay(o,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">next</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> opt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">find(x);</span><br><span class="line"><span class="keyword">if</span> ((t[rt].val&gt;x&amp;&amp;opt)||(t[rt].val&lt;x&amp;&amp;!opt)) <span class="keyword">return</span> rt;</span><br><span class="line"><span class="keyword">int</span> o=t[rt].ch[opt];</span><br><span class="line"><span class="keyword">while</span> (t[o].ch[opt^<span class="number">1</span>]) o=t[o].ch[opt^<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> o;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> pre=next(x,<span class="number">0</span>),nxt=next(x,<span class="number">1</span>);</span><br><span class="line">splay(pre,<span class="number">0</span>),splay(nxt,pre);</span><br><span class="line"><span class="keyword">int</span> o=t[nxt].ch[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span> (t[o].rec&gt;<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">t[o].rec--;</span><br><span class="line">splay(o,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> t[nxt].ch[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">K_th</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!o) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (k&lt;=t[t[o].ch[<span class="number">0</span>]].sz)</span><br><span class="line">    <span class="keyword">return</span> K_th(t[o].ch[<span class="number">0</span>],k);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (k&gt;t[t[o].ch[<span class="number">0</span>]].sz+t[o].rec)</span><br><span class="line">    <span class="keyword">return</span> K_th(t[o].ch[<span class="number">1</span>],k-t[t[o].ch[<span class="number">0</span>]].sz-t[o].rec);</span><br><span class="line">splay(o,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> t[o].val;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Splay;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">ins(rt,<span class="number">0</span>,INF),ins(rt,<span class="number">0</span>,-INF);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> opt=read(),x=read();</span><br><span class="line"><span class="keyword">if</span> (opt==<span class="number">1</span>) ins(rt,<span class="number">0</span>,x);</span><br><span class="line"><span class="keyword">if</span> (opt==<span class="number">2</span>) del(x);</span><br><span class="line"><span class="keyword">if</span> (opt==<span class="number">3</span>) find(x),<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,t[t[rt].ch[<span class="number">0</span>]].sz);</span><br><span class="line"><span class="keyword">if</span> (opt==<span class="number">4</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,K_th(rt,x+<span class="number">1</span>));</span><br><span class="line"><span class="keyword">if</span> (opt==<span class="number">5</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,t[next(x,<span class="number">0</span>)].val);</span><br><span class="line"><span class="keyword">if</span> (opt==<span class="number">6</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,t[next(x,<span class="number">1</span>)].val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;优化了一下之前Splay&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="平衡树" scheme="http://yoursite.com/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
</feed>
