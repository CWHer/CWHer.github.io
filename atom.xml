<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>魍魉的小窝</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-07-27T12:43:55.063Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>CWHer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[NOIP2009]靶形数独</title>
    <link href="http://yoursite.com/2018/07/27/NOIP2009-%E9%9D%B6%E5%BD%A2%E6%95%B0%E7%8B%AC/"/>
    <id>http://yoursite.com/2018/07/27/NOIP2009-靶形数独/</id>
    <published>2018-07-27T12:40:20.000Z</published>
    <updated>2018-07-27T12:43:55.063Z</updated>
    
    <content type="html"><![CDATA[<p><em>x</em>，<em>y</em>，<em>z</em> 分别记录行，列和九宫格内已填数的集合<br>每次选可填数最少的格子进行扩展<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> n=<span class="number">9</span>,N=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> score[N][N]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">                       &#123;<span class="number">0</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>&#125;,</span><br><span class="line">                       &#123;<span class="number">0</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">6</span>&#125;,</span><br><span class="line">                       &#123;<span class="number">0</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>&#125;,</span><br><span class="line">                       &#123;<span class="number">0</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>&#125;,</span><br><span class="line">                       &#123;<span class="number">0</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>&#125;,</span><br><span class="line">                       &#123;<span class="number">0</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>&#125;,</span><br><span class="line">                       &#123;<span class="number">0</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>&#125;,</span><br><span class="line">                       &#123;<span class="number">0</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">6</span>&#125;,</span><br><span class="line">                       &#123;<span class="number">0</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>,cnt=<span class="number">0</span>,w[N][N],x[N],y[N],z[N],idx[<span class="number">1</span>&lt;&lt;N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">F</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span>&#123;<span class="keyword">return</span> (u<span class="number">-1</span>)/<span class="number">3</span>*<span class="number">3</span>+(v+<span class="number">2</span>)/<span class="number">3</span>;&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            ret=ret+w[i][j]*score[i][j];</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (cnt==n*n)</span><br><span class="line">    &#123;</span><br><span class="line">        ans=max(ans,calc());</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> u,v,sz=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) <span class="keyword">if</span> (!w[i][j])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> s=x[i]|y[j]|z[F(i,j)];</span><br><span class="line">            <span class="keyword">if</span> (idx[s]&lt;=idx[sz]) u=i,v=j,sz=s;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span> ((sz&gt;&gt;(i<span class="number">-1</span>))&amp;<span class="number">1</span>^<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            w[u][v]=i,cnt++;</span><br><span class="line">            x[u]|=<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>);</span><br><span class="line">            y[v]|=<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>);</span><br><span class="line">            z[F(u,v)]|=<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>);</span><br><span class="line">            dfs();</span><br><span class="line">            x[u]^=<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>);</span><br><span class="line">            y[v]^=<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>);</span><br><span class="line">            z[F(u,v)]^=<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>);</span><br><span class="line">            w[u][v]=<span class="number">0</span>,cnt--;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;w[i][j]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;(<span class="number">1</span>&lt;&lt;n);s++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            idx[s]+=(s&gt;&gt;(i<span class="number">-1</span>))&amp;<span class="number">1</span>^<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) <span class="keyword">if</span> (w[i][j])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> s=<span class="number">1</span>&lt;&lt;(w[i][j]<span class="number">-1</span>);</span><br><span class="line">            <span class="keyword">if</span> ((x[i]|y[j]|z[F(i,j)])&amp;s)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; </span><br><span class="line">            x[i]|=s,y[j]|=s;</span><br><span class="line">            z[F(i,j)]|=s,cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">    dfs();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans?ans:<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;x&lt;/em&gt;，&lt;em&gt;y&lt;/em&gt;，&lt;em&gt;z&lt;/em&gt; 分别记录行，列和九宫格内已填数的集合&lt;br&gt;每次选可填数最少的格子进行扩展&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="搜索" scheme="http://yoursite.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>[HAOI2008]硬币购物</title>
    <link href="http://yoursite.com/2018/07/27/HAOI2008-%E7%A1%AC%E5%B8%81%E8%B4%AD%E7%89%A9/"/>
    <id>http://yoursite.com/2018/07/27/HAOI2008-硬币购物/</id>
    <published>2018-07-27T12:26:32.000Z</published>
    <updated>2018-07-27T12:39:09.977Z</updated>
    
    <content type="html"><![CDATA[<p>没有限制就是一个完全背包<br>考虑仅有一个<em>c</em> 的硬币限制为<em>d</em> 枚<br>正难则反，易得<script type="math/tex">dp\left [ val \right ]</script>为全部方案数<br>而不合法的方案使用<em>c</em> 的个数肯定为<em>d+1</em>，<em>d+2</em>..<br>假设<em>c</em> 强制选<em>d+1</em> 个，则现在所有的方案均为不合法的，也就是<script type="math/tex">dp\left [ val-\left ( d+1 \right )*c \right ]</script><br>对于多个硬币，只需容斥即可<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100050</span>,n=<span class="number">4</span>;</span><br><span class="line"><span class="keyword">int</span> c[N],w[N],f[N],val;</span><br><span class="line">LL dp[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dp[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;N-c[i];j++)</span><br><span class="line">            dp[j]+=dp[j-c[i]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) c[i]=read();</span><br><span class="line">    <span class="keyword">int</span> T=read();</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) w[i]=read();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) f[i]=(w[i]+<span class="number">1</span>)*c[i];</span><br><span class="line">        <span class="keyword">int</span> val=read();</span><br><span class="line">        LL ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;(<span class="number">1</span>&lt;&lt;n);s++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> num=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">                <span class="keyword">if</span> ((s&gt;&gt;(i<span class="number">-1</span>))&amp;<span class="number">1</span>) num+=f[i],t*=<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">if</span> (num&lt;=val) ans+=dp[val-num]*t;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;没有限制就是一个完全背包&lt;br&gt;考虑仅有一个&lt;em&gt;c&lt;/em&gt; 的硬币限制为&lt;em&gt;d&lt;/em&gt; 枚&lt;br&gt;正难则反，易得&lt;script type=&quot;math/tex&quot;&gt;dp\left [ val \right ]&lt;/script&gt;为全部方案数&lt;br&gt;而不合法的方案使用&lt;em&gt;c&lt;/em&gt; 的个数肯定为&lt;em&gt;d+1&lt;/em&gt;，&lt;em&gt;d+2&lt;/em&gt;..&lt;br&gt;假设&lt;em&gt;c&lt;/em&gt; 强制选&lt;em&gt;d+1&lt;/em&gt; 个，则现在所有的方案均为不合法的，也就是&lt;script type=&quot;math/tex&quot;&gt;dp\left [ val-\left ( d+1 \right )*c \right ]&lt;/script&gt;&lt;br&gt;对于多个硬币，只需容斥即可&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
      <category term="背包" scheme="http://yoursite.com/tags/%E8%83%8C%E5%8C%85/"/>
    
      <category term="容斥" scheme="http://yoursite.com/tags/%E5%AE%B9%E6%96%A5/"/>
    
  </entry>
  
  <entry>
    <title>可持久化数组</title>
    <link href="http://yoursite.com/2018/07/27/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E6%95%B0%E7%BB%84/"/>
    <id>http://yoursite.com/2018/07/27/可持久化数组/</id>
    <published>2018-07-27T12:24:04.000Z</published>
    <updated>2018-07-27T12:25:53.964Z</updated>
    
    <content type="html"><![CDATA[<p>用可持久化线段树实现<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000050</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,w[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> Persistable_SGT</span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span><span class="keyword">int</span> l,r,val;&#125; t[N*<span class="number">25</span>];</span><br><span class="line">    <span class="keyword">int</span> rt[N],cnt=<span class="number">0</span>,pos;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> &amp;o,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        o=++cnt;</span><br><span class="line">        <span class="keyword">if</span> (l==r) &#123;t[o].val=w[r];<span class="keyword">return</span>;&#125;</span><br><span class="line">        <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        build(t[o].l,l,mid);</span><br><span class="line">        build(t[o].r,mid+<span class="number">1</span>,r);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> &amp;o,<span class="keyword">int</span> pre,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        t[o=++cnt]=t[pre];</span><br><span class="line">        <span class="keyword">if</span> (l==r) &#123;t[o].val=x;<span class="keyword">return</span>;&#125;</span><br><span class="line">        <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (pos&lt;=mid) insert(t[o].l,t[pre].l,l,mid,x);</span><br><span class="line">        <span class="keyword">if</span> (pos&gt;mid) insert(t[o].r,t[pre].r,mid+<span class="number">1</span>,r,x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l==r) <span class="keyword">return</span> t[o].val;</span><br><span class="line">        <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (pos&lt;=mid) <span class="keyword">return</span> query(t[o].l,l,mid);</span><br><span class="line">        <span class="keyword">if</span> (pos&gt;mid) <span class="keyword">return</span> query(t[o].r,mid+<span class="number">1</span>,r);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Persistable_SGT;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) w[i]=read();</span><br><span class="line">    build(rt[<span class="number">0</span>],<span class="number">1</span>,n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> pre=read(),opt=read();</span><br><span class="line">        pos=read();</span><br><span class="line">        <span class="keyword">if</span> (opt==<span class="number">1</span>) insert(rt[i],rt[pre],<span class="number">1</span>,n,read());</span><br><span class="line">        <span class="keyword">if</span> (opt==<span class="number">2</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,query(rt[i]=rt[pre],<span class="number">1</span>,n));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用可持久化线段树实现&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="线段树" scheme="http://yoursite.com/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
      <category term="可持久化" scheme="http://yoursite.com/tags/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Gauss消元</title>
    <link href="http://yoursite.com/2018/07/27/Gauss%E6%B6%88%E5%85%83/"/>
    <id>http://yoursite.com/2018/07/27/Gauss消元/</id>
    <published>2018-07-27T12:19:45.000Z</published>
    <updated>2018-07-27T12:22:33.893Z</updated>
    
    <content type="html"><![CDATA[<p>消元形成倒三角<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">105</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps=<span class="number">1e-8</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> f[N][N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Gauss</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">fabs</span>(f[j][i])&gt;<span class="built_in">fabs</span>(f[t][i])) t=j;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=n+<span class="number">1</span>;j++) swap(f[i][j],f[t][j]);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">fabs</span>(f[i][i])&lt;eps) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"No Solution"</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">double</span> t=f[j][i]/f[i][i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;=n+<span class="number">1</span>;k++)</span><br><span class="line">                f[j][k]-=f[i][k]*t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            f[i][n+<span class="number">1</span>]-=f[j][n+<span class="number">1</span>]*f[i][j];</span><br><span class="line">        f[i][n+<span class="number">1</span>]/=f[i][i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n+<span class="number">1</span>;j++) f[i][j]=read();</span><br><span class="line">    Gauss();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>,f[i][n+<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;消元形成倒三角&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="Gauss" scheme="http://yoursite.com/tags/Gauss/"/>
    
  </entry>
  
  <entry>
    <title>自适应辛普森法</title>
    <link href="http://yoursite.com/2018/07/27/%E8%87%AA%E9%80%82%E5%BA%94%E8%BE%9B%E6%99%AE%E6%A3%AE%E6%B3%95/"/>
    <id>http://yoursite.com/2018/07/27/自适应辛普森法/</id>
    <published>2018-07-27T12:13:30.000Z</published>
    <updated>2018-07-27T12:18:58.879Z</updated>
    
    <content type="html"><![CDATA[<p><del>证明省略</del></p><script type="math/tex; mode=display">\int_{a}^{b}f\left ( x \right )dx\approx \frac{b-a}{6}\left [ f\left ( a \right ) +4f\left ( \frac{a+b}{2} \right )+f\left ( b \right )\right ]</script><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps=<span class="number">1e-10</span>;</span><br><span class="line"><span class="keyword">double</span> a,b,c,d;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">F</span><span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (c*x+d)/(a*x+b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">simpson</span><span class="params">(<span class="keyword">double</span> l,<span class="keyword">double</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> mid=(l+r)/<span class="number">2.0</span>;</span><br><span class="line">    <span class="keyword">return</span> (F(l)+F(mid)*<span class="number">4.0</span>+F(r))*(r-l)/<span class="number">6.0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ASR</span><span class="params">(<span class="keyword">double</span> l,<span class="keyword">double</span> r,<span class="keyword">double</span> ans)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> mid=(l+r)/<span class="number">2.0</span>;</span><br><span class="line">    <span class="keyword">double</span> L=simpson(l,mid);</span><br><span class="line">    <span class="keyword">double</span> R=simpson(mid,r);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">fabs</span>(L+R-ans)&lt;eps)</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> ASR(l,mid,L)+ASR(mid,r,R);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> ql,qr;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf%lf"</span>,&amp;a,&amp;b,&amp;c,&amp;d);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;ql,&amp;qr);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.6lf"</span>,ASR(ql,qr,simpson(ql,qr)));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;证明省略&lt;/del&gt;&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\int_{a}^{b}f\left ( x \right )dx\approx \frac{b-a}{6}\left [ f\left ( a \right ) +4f\left ( \frac{a+b}{2} \right )+f\left ( b \right )\right ]&lt;/script&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="微积分" scheme="http://yoursite.com/tags/%E5%BE%AE%E7%A7%AF%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>二分图匹配</title>
    <link href="http://yoursite.com/2018/07/27/%E4%BA%8C%E5%88%86%E5%9B%BE%E5%8C%B9%E9%85%8D/"/>
    <id>http://yoursite.com/2018/07/27/二分图匹配/</id>
    <published>2018-07-27T12:10:50.000Z</published>
    <updated>2018-07-27T12:12:41.644Z</updated>
    
    <content type="html"><![CDATA[<p><em>Hungary</em> 算法<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1050</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,T,cnt=<span class="number">0</span>,used[N],c[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> ((ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&amp;&amp;ch!=<span class="string">'-'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) &#123;t=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) &#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[o].size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span>  to=e[o][i];</span><br><span class="line">        <span class="keyword">if</span> (used[to]) <span class="keyword">continue</span>;</span><br><span class="line">        used[to]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (!c[to]||find(c[to]))</span><br><span class="line">        &#123;</span><br><span class="line">            c[to]=o;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read(),T=read();</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">        <span class="keyword">if</span> (u&gt;n||v&gt;m) <span class="keyword">continue</span>;</span><br><span class="line">        e[u].push_back(v);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(used,<span class="number">0</span>,<span class="keyword">sizeof</span>(used));</span><br><span class="line">        cnt+=find(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,cnt);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;Hungary&lt;/em&gt; 算法&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="二分图" scheme="http://yoursite.com/tags/%E4%BA%8C%E5%88%86%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>[NOIP2012]疫情控制</title>
    <link href="http://yoursite.com/2018/07/27/NOIP2012-%E7%96%AB%E6%83%85%E6%8E%A7%E5%88%B6/"/>
    <id>http://yoursite.com/2018/07/27/NOIP2012-疫情控制/</id>
    <published>2018-07-27T11:53:27.000Z</published>
    <updated>2018-07-27T12:10:15.695Z</updated>
    
    <content type="html"><![CDATA[<p>无法有效<del>（不会）</del>直接计算，考虑二分答案</p><p>对于一个二分的<em>k</em><br>显然尽可能地向上移动军队最优<br>然而问题并没有这么简单<br>因为根节点不能覆盖<br>所以当一棵子树有多支军队，而其他子树没有时<br>简单地贪心就会出错</p><p>需要考虑军队在子树之间的转移<br>记录所有能在子树间转移的军队的剩余路程和所有需要封锁的子树<br>在寻找未被封锁的子树时，需要转移的军队并不能参与封锁<br>从大到小贪心地考虑所有要封锁的子树</p><ul><li>优先选择已在该子树且剩余距离最小的军队</li><li>否则选择当前能够使用的军队</li></ul><p>细节很多<del>（调了很久）</del><br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">50050</span>,rt=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> LL INF=<span class="number">1L</span>L&lt;&lt;<span class="number">50</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span><span class="keyword">int</span> id;LL val;&#125; A[N],B[N];</span><br><span class="line"><span class="keyword">int</span> n,f[N],dep[N],v[N],idx,cnt;</span><br><span class="line"><span class="keyword">int</span> m,w[N],pos[N],used[N];</span><br><span class="line"><span class="keyword">int</span> <span class="built_in">log</span>[N],fa[N][<span class="number">20</span>];</span><br><span class="line">LL d[N][<span class="number">20</span>],c[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[N],g[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;<span class="keyword">return</span> a.val&lt;b.val;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[u].push_back(v);</span><br><span class="line">    g[u].push_back(val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span> o,LL val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="built_in">log</span>[dep[o]];i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        <span class="keyword">if</span> (d[o][i]&lt;=val&amp;&amp;fa[o][i]&gt;rt) </span><br><span class="line">            val-=d[o][i],o=fa[o][i];</span><br><span class="line">    c[k]=val-d[o][<span class="number">0</span>],pos[k]=o;</span><br><span class="line">    <span class="keyword">if</span> (!v[o]||c[k]&lt;c[v[o]]) v[o]=k;</span><br><span class="line">    f[o]=fa[o][<span class="number">0</span>]==rt?<span class="number">0</span>:<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (f[o]) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (e[o].size()==<span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[o].size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[o][i];</span><br><span class="line">        <span class="keyword">if</span> (dep[to]&gt;dep[o])</span><br><span class="line">        &#123;</span><br><span class="line">            calc(to);</span><br><span class="line">            flag&amp;=f[to];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    f[o]=flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(LL val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) f[i]=v[i]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) used[i]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) update(i,w[i],val);</span><br><span class="line">    calc(rt),idx=cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (f[rt]) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[rt].size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[rt][i];</span><br><span class="line">        <span class="keyword">if</span> (!f[to]) A[++idx]=(node)&#123;to,d[to][<span class="number">0</span>]&#125;;</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) </span><br><span class="line">        <span class="keyword">if</span> (fa[pos[i]][<span class="number">0</span>]==rt)</span><br><span class="line">            B[++cnt]=(node)&#123;i,c[i]&#125;;</span><br><span class="line">    sort(A+<span class="number">1</span>,A+idx+<span class="number">1</span>,cmp);</span><br><span class="line">    sort(B+<span class="number">1</span>,B+cnt+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=idx,j=cnt;i&gt;<span class="number">0</span>;i--)</span><br><span class="line">        <span class="keyword">if</span> (v[A[i].id]&amp;&amp;!used[v[A[i].id]]) </span><br><span class="line">            used[v[A[i].id]]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (used[B[j].id]&amp;&amp;j&gt;<span class="number">0</span>) j--;</span><br><span class="line">            used[B[j].id]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (A[i].val&lt;=B[j].val) j--;<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="built_in">log</span>[dep[o]];i++)</span><br><span class="line">    &#123;</span><br><span class="line">        fa[o][i]=fa[fa[o][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">        d[o][i]=d[o][i<span class="number">-1</span>]+d[fa[o][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[o].size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[o][i];</span><br><span class="line">        <span class="keyword">if</span> (!dep[to])</span><br><span class="line">        &#123;</span><br><span class="line">            fa[to][<span class="number">0</span>]=o;</span><br><span class="line">            d[to][<span class="number">0</span>]=g[o][i];</span><br><span class="line">            dep[to]=dep[o]+<span class="number">1</span>;</span><br><span class="line">            dfs(to);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">log</span>[i]=<span class="built_in">log</span>[i<span class="number">-1</span>]+(<span class="number">1</span>&lt;&lt;<span class="built_in">log</span>[i<span class="number">-1</span>]==i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">        <span class="keyword">int</span> val=read();</span><br><span class="line">        add(u,v,val);</span><br><span class="line">        add(v,u,val);</span><br><span class="line">    &#125;</span><br><span class="line">    m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) w[i]=read();</span><br><span class="line">    dep[rt]=<span class="number">1</span>,dfs(rt);</span><br><span class="line">    LL L=<span class="number">0</span>,R=INF;</span><br><span class="line">    <span class="keyword">while</span> (L&lt;R)</span><br><span class="line">    &#123;</span><br><span class="line">        LL mid=(L+R)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (check(mid))</span><br><span class="line">            R=mid;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            L=mid+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,R==INF?<span class="number">-1</span>:R);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无法有效&lt;del&gt;（不会）&lt;/del&gt;直接计算，考虑二分答案&lt;/p&gt;
&lt;p&gt;对于一个二分的&lt;em&gt;k&lt;/em&gt;&lt;br&gt;显然尽可能地向上移动军队最优&lt;br&gt;然而问题并没有这么简单&lt;br&gt;因为根节点不能覆盖&lt;br&gt;所以当一棵子树有多支军队，而其他子树没有时&lt;br&gt;简单地贪心就会出错&lt;/p&gt;
&lt;p&gt;需要考虑军队在子树之间的转移&lt;br&gt;记录所有能在子树间转移的军队的剩余路程和所有需要封锁的子树&lt;br&gt;在寻找未被封锁的子树时，需要转移的军队并不能参与封锁&lt;br&gt;从大到小贪心地考虑所有要封锁的子树&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优先选择已在该子树且剩余距离最小的军队&lt;/li&gt;
&lt;li&gt;否则选择当前能够使用的军队&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;细节很多&lt;del&gt;（调了很久）&lt;/del&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="贪心" scheme="http://yoursite.com/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="倍增" scheme="http://yoursite.com/tags/%E5%80%8D%E5%A2%9E/"/>
    
      <category term="二分答案" scheme="http://yoursite.com/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P3943 星空</title>
    <link href="http://yoursite.com/2018/07/27/%E6%B4%9B%E8%B0%B7P3943-%E6%98%9F%E7%A9%BA/"/>
    <id>http://yoursite.com/2018/07/27/洛谷P3943-星空/</id>
    <published>2018-07-27T11:21:27.000Z</published>
    <updated>2018-07-27T11:49:09.181Z</updated>
    
    <content type="html"><![CDATA[<p><del>看题解系列</del></p><p>首先是异或差分<del>（其实我也不知道叫什么）</del><br>定义<em>f</em> 为异或数组</p><script type="math/tex; mode=display">f\left [ i \right ]=w\left [ i \right ]\  xor \ w\left [ i+1 \right ]</script><p>表示<script type="math/tex">w\left [ i \right ]\</script> 与<script type="math/tex">\ w\left [ i+1 \right ]</script> 是否相同<br><em>f</em> 数组中至多有 <script type="math/tex">2k</script> 个 <em>1</em> ，且肯定是偶数个<br>当<em>f</em> 数组全部为<em>0</em> 时，灯全部点亮<br>对于一段连续序列进行翻转，<del>显然</del>只需要修改<script type="math/tex">f\left [ l-1 \right ]</script>，<script type="math/tex">f\left [ r \right ]</script><br>这个操作等价于对某个元素进行移动<br>当两个<em>1</em> 相遇时会消除<br>于是问题等价于求所有<em>1</em> 消除的代价<br>对于任意两个<em>1</em> 消除的代价，可用完全背包求<br>将长度为<em>len</em> 的操作看成<em>len</em> 和<em>-len</em> 两种<br>最后状压所有<em>1</em> </p><script type="math/tex; mode=display">dp\left [ s' \right ]=min\left \{ dp\left [ s \right ] +cost\left [ i,j \right ]\right \}\left ( i\notin s,j\notin s \right )</script><p>乍一看枚举<em>i</em> ，<em>j</em> 复杂度<script type="math/tex">O\left ( 2^{N}N^{2} \right )</script><br>但实际上其中一个并不用枚举，确定任意一个<em>i</em> 之后枚举<em>j</em> 即可<br>因此复杂度<script type="math/tex">O\left ( 2^{N}N \right )</script><br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">18</span>,M=<span class="number">40050</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">25</span>;</span><br><span class="line"><span class="keyword">int</span> n,k,m,dp[<span class="number">1</span>&lt;&lt;N],d[M],idx[<span class="number">1</span>&lt;&lt;N];</span><br><span class="line"><span class="keyword">int</span> pos[M],cnt=<span class="number">0</span>,w[M],f[M],v[M];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read()+<span class="number">1</span>,k=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++) w[read()]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) v[i]=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) f[i]=w[i]^w[i+<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) </span><br><span class="line">        <span class="keyword">if</span> (f[i]) pos[++cnt]=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) d[i]=INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=v[i];j&lt;=n;j++)</span><br><span class="line">            d[j]=min(d[j],d[j-v[i]]+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=n-v[i];j&gt;=<span class="number">0</span>;j--)</span><br><span class="line">            d[j]=min(d[j],d[j+v[i]]+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">1</span>;s&lt;(<span class="number">1</span>&lt;&lt;cnt);s++) dp[s]=INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;(<span class="number">1</span>&lt;&lt;cnt);s++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++) idx[s]+=(s&gt;&gt;(i<span class="number">-1</span>))&amp;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">1</span>,s=<span class="number">0</span>;s&lt;(<span class="number">1</span>&lt;&lt;cnt);s++,x=<span class="number">1</span>) <span class="keyword">if</span> (idx[s]&amp;<span class="number">1</span>^<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> ((s&gt;&gt;(x<span class="number">-1</span>))&amp;<span class="number">1</span>) x++;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=x+<span class="number">1</span>;i&lt;=cnt;i++) <span class="keyword">if</span> ((s&gt;&gt;(i<span class="number">-1</span>))^<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">if</span> (i!=x&amp;&amp;d[pos[i]-pos[x]]!=INF)</span><br><span class="line">                dp[s|(<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>))|(<span class="number">1</span>&lt;&lt;(x<span class="number">-1</span>))]=min(dp[s|(<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>))|(<span class="number">1</span>&lt;&lt;(x<span class="number">-1</span>))],dp[s]+d[pos[i]-pos[x]]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp[(<span class="number">1</span>&lt;&lt;cnt)<span class="number">-1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;看题解系列&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;首先是异或差分&lt;del&gt;（其实我也不知道叫什么）&lt;/del&gt;&lt;br&gt;定义&lt;em&gt;f&lt;/em&gt; 为异或数组&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
f\left [ i \right ]=w\left [ i \right ]\  xor \ w\left [ i+1 \right ]&lt;/script&gt;&lt;p&gt;表示&lt;script type=&quot;math/tex&quot;&gt;w\left [ i \right ]\&lt;/script&gt; 与&lt;script type=&quot;math/tex&quot;&gt;\ w\left [ i+1 \right ]&lt;/script&gt; 是否相同&lt;br&gt;&lt;em&gt;f&lt;/em&gt; 数组中至多有 &lt;script type=&quot;math/tex&quot;&gt;2k&lt;/script&gt; 个 &lt;em&gt;1&lt;/em&gt; ，且肯定是偶数个&lt;br&gt;当&lt;em&gt;f&lt;/em&gt; 数组全部为&lt;em&gt;0&lt;/em&gt; 时，灯全部点亮&lt;br&gt;对于一段连续序列进行翻转，&lt;del&gt;显然&lt;/del&gt;只需要修改&lt;script type=&quot;math/tex&quot;&gt;f\left [ l-1 \right ]&lt;/script&gt;，&lt;script type=&quot;math/tex&quot;&gt;f\left [ r \right ]&lt;/script&gt;&lt;br&gt;这个操作等价于对某个元素进行移动&lt;br&gt;当两个&lt;em&gt;1&lt;/em&gt; 相遇时会消除&lt;br&gt;于是问题等价于求所有&lt;em&gt;1&lt;/em&gt; 消除的代价&lt;br&gt;对于任意两个&lt;em&gt;1&lt;/em&gt; 消除的代价，可用完全背包求&lt;br&gt;将长度为&lt;em&gt;len&lt;/em&gt; 的操作看成&lt;em&gt;len&lt;/em&gt; 和&lt;em&gt;-len&lt;/em&gt; 两种&lt;br&gt;最后状压所有&lt;em&gt;1&lt;/em&gt; &lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [ s&#39; \right ]=min\left \{ dp\left [ s \right ] +cost\left [ i,j \right ]\right \}\left ( i\notin s,j\notin s \right )&lt;/script&gt;&lt;p&gt;乍一看枚举&lt;em&gt;i&lt;/em&gt; ，&lt;em&gt;j&lt;/em&gt; 复杂度&lt;script type=&quot;math/tex&quot;&gt;O\left ( 2^{N}N^{2} \right )&lt;/script&gt;&lt;br&gt;但实际上其中一个并不用枚举，确定任意一个&lt;em&gt;i&lt;/em&gt; 之后枚举&lt;em&gt;j&lt;/em&gt; 即可&lt;br&gt;因此复杂度&lt;script type=&quot;math/tex&quot;&gt;O\left ( 2^{N}N \right )&lt;/script&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
      <category term="背包" scheme="http://yoursite.com/tags/%E8%83%8C%E5%8C%85/"/>
    
      <category term="状态压缩" scheme="http://yoursite.com/tags/%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9/"/>
    
      <category term="差分" scheme="http://yoursite.com/tags/%E5%B7%AE%E5%88%86/"/>
    
      <category term="异或" scheme="http://yoursite.com/tags/%E5%BC%82%E6%88%96/"/>
    
  </entry>
  
  <entry>
    <title>Lucas定理</title>
    <link href="http://yoursite.com/2018/07/26/Lucas%E5%AE%9A%E7%90%86/"/>
    <id>http://yoursite.com/2018/07/26/Lucas定理/</id>
    <published>2018-07-26T12:44:36.000Z</published>
    <updated>2018-07-26T12:52:55.309Z</updated>
    
    <content type="html"><![CDATA[<p><del>证明省略</del></p><script type="math/tex; mode=display">Lucas\left ( m,n,p \right )=C\left ( m\%p,n\%p \right )*Lucas\left ( \left \lfloor \frac{m}{p}\right  \rfloor ,\left \lfloor \frac{n}{p} \right \rfloor ,p \right )</script><script type="math/tex; mode=display">Lucas\left ( m,0,p \right )=1</script><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">200050</span>;</span><br><span class="line">LL fact[N];</span><br><span class="line"><span class="keyword">int</span> n,m,mod;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fact[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n+m;i++) </span><br><span class="line">        fact[i]=fact[i<span class="number">-1</span>]*i%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">pow</span><span class="params">(LL a,LL b,LL mod)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL ret=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (b&amp;<span class="number">1</span>) ret=ret*a%mod;</span><br><span class="line">        a=a*a%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">C</span><span class="params">(LL m,LL n,LL mod)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (m&lt;n) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> fact[m]*<span class="built_in">pow</span>(fact[n]*fact[m-n]%mod,mod<span class="number">-2</span>,mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">Lucas</span><span class="params">(LL m,LL n,LL mod)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!n) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> Lucas(m/mod,n/mod,mod)*C(m%mod,n%mod,mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T=read();</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        n=read(),m=read();</span><br><span class="line">        mod=read();</span><br><span class="line">        init();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,Lucas(n+m,m,mod));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;证明省略&lt;/del&gt;&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
Lucas\left ( m,n,p \right )=C\left ( m\%p,n\%p \right )*Lucas\left ( \left \lfloor \frac{m}{p}\right  \rfloor ,\left \lfloor \frac{n}{p} \right \rfloor ,p \right )&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
Lucas\left ( m,0,p \right )=1&lt;/script&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="组合数学" scheme="http://yoursite.com/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>拉格朗日插值</title>
    <link href="http://yoursite.com/2018/07/26/%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%8F%92%E5%80%BC/"/>
    <id>http://yoursite.com/2018/07/26/拉格朗日插值/</id>
    <published>2018-07-26T12:36:41.000Z</published>
    <updated>2018-07-26T12:43:19.709Z</updated>
    
    <content type="html"><![CDATA[<p><del>证明省略</del></p><script type="math/tex; mode=display">f\left (x  \right )=\sum_{i=1}^{n+1}y_i\prod_{j\neq i}\frac{\left ( x-x_{j} \right )}{\left (x_{i}-x_{j}  \right )}</script><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">2050</span>;</span><br><span class="line">LL n,x,a[N],b[N],ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">pow</span><span class="params">(LL a,LL b,LL mod)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL ret=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (b&amp;<span class="number">1</span>) ret=ret*a%mod;</span><br><span class="line">        a=a*a%mod; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),x=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) a[i]=read(),b[i]=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        LL A=b[i],B=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) <span class="keyword">if</span> (i!=j)</span><br><span class="line">        &#123;</span><br><span class="line">            A=A*(x-a[j])%mod;</span><br><span class="line">            B=B*(a[i]-a[j])%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        ans=(ans+A*<span class="built_in">pow</span>(B,mod<span class="number">-2</span>,mod))%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(ans%mod+mod)%mod);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;证明省略&lt;/del&gt;&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
f\left (x  \right )=\sum_{i=1}^{n+1}y_i\prod_{j\neq i}\frac{\left ( x-x_{j} \right )}{\left (x_{i}-x_{j}  \right )}&lt;/script&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="组合数学" scheme="http://yoursite.com/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P4755 Beautiful Pair</title>
    <link href="http://yoursite.com/2018/07/26/%E6%B4%9B%E8%B0%B7P4755-Beautiful-Pair/"/>
    <id>http://yoursite.com/2018/07/26/洛谷P4755-Beautiful-Pair/</id>
    <published>2018-07-26T11:59:34.000Z</published>
    <updated>2018-07-26T12:34:40.228Z</updated>
    
    <content type="html"><![CDATA[<p>对于一个<script type="math/tex">\left ( L,R \right )</script>的区间<br>若其中最大值位置为<em>k</em><br>所有可行解可以分为三类</p><ul><li><em>i</em>，<em>j</em> 在<em>k</em> 的两边</li><li><em>i，k</em> 或者<em>k，j</em></li><li><script type="math/tex">\left ( L,k-1 \right ),\left ( k+1,R \right )</script>区间内</li></ul><p>对于最后一种递归计算即可</p><p>对于第二种只需统计<em>1</em> 的个数</p><p>对于第一种<br>若<script type="math/tex">\left ( L,k-1 \right ),\left ( k+1,R \right )</script>均已升序排序<br>枚举其中一个区间<br>则另一个区间中可以匹配的元素单调递减<br>因此可以在线性时间内完成统计<br>至于怎么对<script type="math/tex">\left ( L,k-1 \right ),\left ( k+1,R \right )</script>进行排序，归并即可</p><p>最优复杂度<script type="math/tex">O\left ( NlogN \right )</script><br><del>然而只要一组升序的数据就能卡成<script type="math/tex">O\left ( N^{2}\right)</script></del><br><a id="more"></a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">200050</span>;</span><br><span class="line"><span class="keyword">int</span> n,pos[N][<span class="number">25</span>],<span class="built_in">log</span>[N];</span><br><span class="line">LL ans=<span class="number">0</span>,w[N],t[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (w[x]&gt;w[y]) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">if</span> (w[y]&gt;w[x]) <span class="keyword">return</span> y;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">abs</span>(mid-x)&lt;<span class="built_in">abs</span>(mid-y)?x:y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="built_in">log</span>[r-l+<span class="number">1</span>]<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> get(pos[l][k],pos[r-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k],l,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> k,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>,i,j;</span><br><span class="line">    <span class="keyword">for</span>(i=l,j=k+<span class="number">1</span>;i&lt;k,j&lt;=r;)</span><br><span class="line">        t[++cnt]=w[i]&lt;w[j]?w[i++]:w[j++];</span><br><span class="line">    <span class="keyword">for</span>(;i&lt;k;) t[++cnt]=w[i++];</span><br><span class="line">    <span class="keyword">for</span>(;j&lt;=r;) t[++cnt]=w[j++];</span><br><span class="line">    t[++cnt]=w[k];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++) w[i]=t[i-l+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l&gt;=r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> k=find(l,r);</span><br><span class="line">    calc(l,k<span class="number">-1</span>);</span><br><span class="line">    calc(k+<span class="number">1</span>,r);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;k;i++) ans+=w[i]==<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=k+<span class="number">1</span>;i&lt;=r;i++) ans+=w[i]==<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l,j=r;i&lt;k;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (j&gt;k&amp;&amp;w[i]*w[j]&gt;w[k]) j--;</span><br><span class="line">        ans+=j-k;</span><br><span class="line">    &#125;</span><br><span class="line">    merge(l,k,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">log</span>[i]=<span class="built_in">log</span>[i<span class="number">-1</span>]+(<span class="number">1</span>&lt;&lt;<span class="built_in">log</span>[i<span class="number">-1</span>]==i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) pos[i][<span class="number">0</span>]=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="built_in">log</span>[n];j++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i+(<span class="number">1</span>&lt;&lt;j)<span class="number">-1</span>&lt;=n;i++)</span><br><span class="line">            pos[i][j]=get(pos[i][j<span class="number">-1</span>],pos[i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))][j<span class="number">-1</span>],i,i+(<span class="number">1</span>&lt;&lt;j)<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) w[i]=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) ans+=w[i]==<span class="number">1</span>;</span><br><span class="line">    init();</span><br><span class="line">    calc(<span class="number">1</span>,n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于一个&lt;script type=&quot;math/tex&quot;&gt;\left ( L,R \right )&lt;/script&gt;的区间&lt;br&gt;若其中最大值位置为&lt;em&gt;k&lt;/em&gt;&lt;br&gt;所有可行解可以分为三类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;i&lt;/em&gt;，&lt;em&gt;j&lt;/em&gt; 在&lt;em&gt;k&lt;/em&gt; 的两边&lt;/li&gt;
&lt;li&gt;&lt;em&gt;i，k&lt;/em&gt; 或者&lt;em&gt;k，j&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;\left ( L,k-1 \right ),\left ( k+1,R \right )&lt;/script&gt;区间内&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于最后一种递归计算即可&lt;/p&gt;
&lt;p&gt;对于第二种只需统计&lt;em&gt;1&lt;/em&gt; 的个数&lt;/p&gt;
&lt;p&gt;对于第一种&lt;br&gt;若&lt;script type=&quot;math/tex&quot;&gt;\left ( L,k-1 \right ),\left ( k+1,R \right )&lt;/script&gt;均已升序排序&lt;br&gt;枚举其中一个区间&lt;br&gt;则另一个区间中可以匹配的元素单调递减&lt;br&gt;因此可以在线性时间内完成统计&lt;br&gt;至于怎么对&lt;script type=&quot;math/tex&quot;&gt;\left ( L,k-1 \right ),\left ( k+1,R \right )&lt;/script&gt;进行排序，归并即可&lt;/p&gt;
&lt;p&gt;最优复杂度&lt;script type=&quot;math/tex&quot;&gt;O\left ( NlogN \right )&lt;/script&gt;&lt;br&gt;&lt;del&gt;然而只要一组升序的数据就能卡成&lt;script type=&quot;math/tex&quot;&gt;O\left ( N^{2}\right)&lt;/script&gt;&lt;/del&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="分治" scheme="http://yoursite.com/tags/%E5%88%86%E6%B2%BB/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P1613 跑路</title>
    <link href="http://yoursite.com/2018/07/26/%E6%B4%9B%E8%B0%B7P1613-%E8%B7%91%E8%B7%AF/"/>
    <id>http://yoursite.com/2018/07/26/洛谷P1613-跑路/</id>
    <published>2018-07-26T11:48:48.000Z</published>
    <updated>2018-07-26T11:57:08.224Z</updated>
    
    <content type="html"><![CDATA[<p>很巧妙的一道题</p><p>设<script type="math/tex">f\left [ i \right ]\left [ u \right ]\left [ v \right ]</script>为<em>u</em> 到<em>v</em> 之间是否存在长度为<script type="math/tex">2^{i}</script>的路</p><script type="math/tex; mode=display">f\left [ i \right ]\left [ u \right ]\left [ v \right ]=f\left [ i -1\right ]\left [ u \right ]\left [ k \right ]\ and \f\left [ i -1\right ]\left [ k \right ]\left [ v \right ]</script><p>设<script type="math/tex">d\left [  u\right ]\left [v  \right ]</script>为<em>u</em> 到<em>v</em> 需要的时间</p><script type="math/tex; mode=display">\exists f\left [ i \right ]\left [ u \right ]\left [ v \right ]=1,d\left [  u\right ]\left [v  \right ]=1</script><p>最后跑一遍<em>Floyd</em> 即可<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">55</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">25</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,d[N][N],f[N][N][N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Floyd</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) </span><br><span class="line">                d[i][j]=min(d[i][j],d[i][k]+d[k][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">        f[<span class="number">0</span>][u][v]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">1</span>;u&lt;=n;u++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> v=<span class="number">1</span>;v&lt;=n;v++) </span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++) </span><br><span class="line">                    <span class="keyword">if</span> (f[i<span class="number">-1</span>][u][k]&amp;&amp;f[i<span class="number">-1</span>][k][v]) f[i][u][v]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) d[i][j]=INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">1</span>;u&lt;=n;u++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> v=<span class="number">1</span>;v&lt;=n;v++) </span><br><span class="line">                <span class="keyword">if</span> (f[i][u][v]) d[u][v]=f[i][u][v];</span><br><span class="line">    Floyd();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,d[<span class="number">1</span>][n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很巧妙的一道题&lt;/p&gt;
&lt;p&gt;设&lt;script type=&quot;math/tex&quot;&gt;f\left [ i \right ]\left [ u \right ]\left [ v \right ]&lt;/script&gt;为&lt;em&gt;u&lt;/em&gt; 到&lt;em&gt;v&lt;/em&gt; 之间是否存在长度为&lt;script type=&quot;math/tex&quot;&gt;2^{i}&lt;/script&gt;的路&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
f\left [ i \right ]\left [ u \right ]\left [ v \right ]=f\left [ i -1\right ]\left [ u \right ]\left [ k \right ]\ and \
f\left [ i -1\right ]\left [ k \right ]\left [ v \right ]&lt;/script&gt;&lt;p&gt;设&lt;script type=&quot;math/tex&quot;&gt;d\left [  u\right ]\left [v  \right ]&lt;/script&gt;为&lt;em&gt;u&lt;/em&gt; 到&lt;em&gt;v&lt;/em&gt; 需要的时间&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\exists f\left [ i \right ]\left [ u \right ]\left [ v \right ]=1,d\left [  u\right ]\left [v  \right ]=1&lt;/script&gt;&lt;p&gt;最后跑一遍&lt;em&gt;Floyd&lt;/em&gt; 即可&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="倍增" scheme="http://yoursite.com/tags/%E5%80%8D%E5%A2%9E/"/>
    
      <category term="最短路" scheme="http://yoursite.com/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>[NOIP2012]国王游戏</title>
    <link href="http://yoursite.com/2018/07/26/NOIP2012-%E5%9B%BD%E7%8E%8B%E6%B8%B8%E6%88%8F/"/>
    <id>http://yoursite.com/2018/07/26/NOIP2012-国王游戏/</id>
    <published>2018-07-26T11:24:20.000Z</published>
    <updated>2018-07-27T12:09:51.696Z</updated>
    
    <content type="html"><![CDATA[<p>考虑第<em>i</em> 个和第<em>i+1</em> 个位置</p><script type="math/tex; mode=display">max\left \{ \frac{pre}{R_{i}} \frac{pre*L_{i}}{R_{i+1}}  \right \}</script><p>交换之后则为</p><script type="math/tex; mode=display">max\left \{  \frac{pre}{R_{i+1}} , \frac{pre*L_{i+1}}{R_{i}} \right \}</script><p>其他人的并没有改变<br>提取<em>pre</em></p><script type="math/tex; mode=display">max\left \{  \frac{1}{R_{i}} , \frac{L_{i}}{R_{i+1}} \right \}\quad \quad \quad max\left \{ \frac{1}{R_{i+1}},\frac{L_{i+1}}{R_{i}}  \right \}</script><p>同乘<script type="math/tex">R_{i}*R_{i+1}</script></p><script type="math/tex; mode=display">max\left \{  R_{i+1} , L_{i}R_{i} \right \}\quad \quad \quad max\left \{ R_{i}, L_{i+1}R_{i+1}  \right \}</script><p><em>L,R</em> 均为正整数</p><script type="math/tex; mode=display">R_{i}< L_{i}R_{i} \quad \quad \quad R_{i+1}< L_{i+1}R_{i+1}</script><script type="math/tex; mode=display">L_{i}R_{i} \quad \quad \quad  L_{i+1}R_{i+1}</script><p>因此将<script type="math/tex">L*R</script>较小的放在前面更优</p><p><del>人生苦短，我用Python</del><br><a id="more"></a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">n = int(input())</span><br><span class="line">x, y = map(int, input().split())</span><br><span class="line">w = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, n):</span><br><span class="line">    L, R = map(int, input().split())</span><br><span class="line">    w.append(&#123;<span class="string">"L"</span>: L, <span class="string">"R"</span>: R, <span class="string">"val"</span>: L * R&#125;)</span><br><span class="line">w.sort(key=<span class="keyword">lambda</span> node: node[<span class="string">"val"</span>])</span><br><span class="line">cnt = x</span><br><span class="line">ans = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, n):</span><br><span class="line">    ans = max(ans, cnt // w[i][<span class="string">"R"</span>])</span><br><span class="line">    cnt *= w[i][<span class="string">"L"</span>]</span><br><span class="line">print(<span class="string">"%d"</span> % ans, end=<span class="string">""</span>)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;考虑第&lt;em&gt;i&lt;/em&gt; 个和第&lt;em&gt;i+1&lt;/em&gt; 个位置&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
max\left \{ \frac{pre}{R_{i}} \frac{pre*L_{i}}{R_{i+1}}  \right \}&lt;/script&gt;&lt;p&gt;交换之后则为&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
max\left \{  \frac{pre}{R_{i+1}} , \frac{pre*L_{i+1}}{R_{i}} \right \}&lt;/script&gt;&lt;p&gt;其他人的并没有改变&lt;br&gt;提取&lt;em&gt;pre&lt;/em&gt;&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
max\left \{  \frac{1}{R_{i}} , \frac{L_{i}}{R_{i+1}} \right \}\quad \quad \quad max\left \{ \frac{1}{R_{i+1}},\frac{L_{i+1}}{R_{i}}  \right \}&lt;/script&gt;&lt;p&gt;同乘&lt;script type=&quot;math/tex&quot;&gt;R_{i}*R_{i+1}&lt;/script&gt;&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
max\left \{  R_{i+1} , L_{i}R_{i} \right \}\quad \quad \quad max\left \{ R_{i}, L_{i+1}R_{i+1}  \right \}&lt;/script&gt;&lt;p&gt;&lt;em&gt;L,R&lt;/em&gt; 均为正整数&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
R_{i}&lt; L_{i}R_{i} \quad \quad \quad R_{i+1}&lt; L_{i+1}R_{i+1}&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
L_{i}R_{i} \quad \quad \quad  L_{i+1}R_{i+1}&lt;/script&gt;&lt;p&gt;因此将&lt;script type=&quot;math/tex&quot;&gt;L*R&lt;/script&gt;较小的放在前面更优&lt;/p&gt;
&lt;p&gt;&lt;del&gt;人生苦短，我用Python&lt;/del&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="贪心" scheme="http://yoursite.com/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="高精度" scheme="http://yoursite.com/tags/%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>POJ2411 Mondriaan&#39;s Dream</title>
    <link href="http://yoursite.com/2018/07/22/POJ2411-Mondriaan-s-Dream/"/>
    <id>http://yoursite.com/2018/07/22/POJ2411-Mondriaan-s-Dream/</id>
    <published>2018-07-22T12:09:20.000Z</published>
    <updated>2018-07-22T12:40:11.464Z</updated>
    
    <content type="html"><![CDATA[<p>经典的状压DP题，解法很多<br>这里讲下状压轮廓线的做法<br><img src="/2018/07/22/POJ2411-Mondriaan-s-Dream/mtrx.jpg" alt="Mtrx"><br><em>s</em> 从大到小保存<br>若<script type="math/tex">s_{5}=0</script>，必须要竖放一个<br>否则可以横放也可以不放<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">18</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line">LL dp[<span class="number">2</span>][<span class="number">1</span>&lt;&lt;N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">get</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'.'</span>&amp;&amp;ch!=<span class="string">'x'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (n=read(),m=read())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (n&lt;m) swap(n,m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;(<span class="number">1</span>&lt;&lt;m);s++) dp[<span class="number">0</span>][s]=<span class="number">0</span>;</span><br><span class="line">        dp[<span class="number">0</span>][(<span class="number">1</span>&lt;&lt;m)<span class="number">-1</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,now=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++,now^=<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;(<span class="number">1</span>&lt;&lt;m);s++) dp[now][s]=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;(<span class="number">1</span>&lt;&lt;m);s++)</span><br><span class="line">                    <span class="keyword">if</span> (!(s&gt;&gt;(m<span class="number">-1</span>))&amp;<span class="number">1</span>)</span><br><span class="line">                        dp[now][(s&lt;&lt;<span class="number">1</span>)|<span class="number">1</span>]+=dp[now^<span class="number">1</span>][s];</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        dp[now][(s&lt;&lt;<span class="number">1</span>)&amp;((<span class="number">1</span>&lt;&lt;m)<span class="number">-1</span>)]+=dp[now^<span class="number">1</span>][s];</span><br><span class="line">                        <span class="keyword">if</span> (j&gt;=<span class="number">2</span>&amp;&amp;!(s&amp;<span class="number">1</span>))</span><br><span class="line">                            dp[now][((s&lt;&lt;<span class="number">1</span>)|<span class="number">3</span>)&amp;((<span class="number">1</span>&lt;&lt;m)<span class="number">-1</span>)]+=dp[now^<span class="number">1</span>][s];</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;    </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,dp[(n*m)&amp;<span class="number">1</span>][(<span class="number">1</span>&lt;&lt;m)<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经典的状压DP题，解法很多&lt;br&gt;这里讲下状压轮廓线的做法&lt;br&gt;&lt;img src=&quot;/2018/07/22/POJ2411-Mondriaan-s-Dream/mtrx.jpg&quot; alt=&quot;Mtrx&quot;&gt;&lt;br&gt;&lt;em&gt;s&lt;/em&gt; 从大到小保存&lt;br&gt;若&lt;script type=&quot;math/tex&quot;&gt;s_{5}=0&lt;/script&gt;，必须要竖放一个&lt;br&gt;否则可以横放也可以不放&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
      <category term="状态压缩" scheme="http://yoursite.com/tags/%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9/"/>
    
  </entry>
  
  <entry>
    <title>[ZJOI2012]灾难</title>
    <link href="http://yoursite.com/2018/07/22/ZJOI2012-%E7%81%BE%E9%9A%BE/"/>
    <id>http://yoursite.com/2018/07/22/ZJOI2012-灾难/</id>
    <published>2018-07-22T11:57:48.000Z</published>
    <updated>2018-07-22T12:04:44.672Z</updated>
    
    <content type="html"><![CDATA[<p><del>支配树的证明我意会了一下，并不会证</del><br>这里稍微理一下DAG中支配树的构造</p><ul><li>拓扑排序</li><li>对于每个点，求其所有入边的LCA，将其作为LCA的儿子</li></ul><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100050</span>,rt=<span class="number">0</span>;;</span><br><span class="line"><span class="keyword">int</span> n,w[N],d[N],<span class="built_in">log</span>[N],dep[N],sz[N],fa[N][<span class="number">25</span>];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[N],f[N],g[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCA</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (dep[u]&lt;dep[v]) swap(u,v);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="built_in">log</span>[dep[u]];i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        <span class="keyword">if</span> (((dep[u]-dep[v])&gt;&gt;i)&amp;<span class="number">1</span>) u=fa[u][i];</span><br><span class="line">    <span class="keyword">if</span> (u==v) <span class="keyword">return</span> u;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="built_in">log</span>[dep[u]];i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        <span class="keyword">if</span> (fa[u][i]!=fa[v][i])</span><br><span class="line">            u=fa[u][i],v=fa[v][i];</span><br><span class="line">    <span class="keyword">return</span> fa[u][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> pre=f[o][<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;f[o].size();i++)</span><br><span class="line">        pre=LCA(pre,f[o][i]);</span><br><span class="line">    g[pre].push_back(o);</span><br><span class="line">    dep[o]=dep[pre]+<span class="number">1</span>;</span><br><span class="line">    fa[o][<span class="number">0</span>]=pre;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="built_in">log</span>[dep[o]];i++)</span><br><span class="line">        fa[o][i]=fa[fa[o][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sz[o]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;g[o].size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=g[o][i];</span><br><span class="line">        dfs(to);</span><br><span class="line">        sz[o]+=sz[to];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">        <span class="built_in">log</span>[i]=<span class="built_in">log</span>[i<span class="number">-1</span>]+(<span class="number">1</span>&lt;&lt;<span class="built_in">log</span>[i<span class="number">-1</span>]==i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> x,i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (x=read())</span><br><span class="line">        &#123;</span><br><span class="line">            e[x].push_back(i);</span><br><span class="line">            f[i].push_back(x);</span><br><span class="line">            d[i]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span> (!d[i]) </span><br><span class="line">        &#123;</span><br><span class="line">            f[i].push_back(rt);</span><br><span class="line">            Q.push(i);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;e[x].size();k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[x][k];</span><br><span class="line">            <span class="keyword">if</span> (--d[to]==<span class="number">0</span>) Q.push(to);</span><br><span class="line">        &#125;</span><br><span class="line">        find(x),Q.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(rt);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sz[i]<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;支配树的证明我意会了一下，并不会证&lt;/del&gt;&lt;br&gt;这里稍微理一下DAG中支配树的构造&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;拓扑排序&lt;/li&gt;
&lt;li&gt;对于每个点，求其所有入边的LCA，将其作为LCA的儿子&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="倍增" scheme="http://yoursite.com/tags/%E5%80%8D%E5%A2%9E/"/>
    
      <category term="支配树" scheme="http://yoursite.com/tags/%E6%94%AF%E9%85%8D%E6%A0%91/"/>
    
      <category term="LCA" scheme="http://yoursite.com/tags/LCA/"/>
    
  </entry>
  
  <entry>
    <title>[NOI2005]聪聪与可可</title>
    <link href="http://yoursite.com/2018/07/22/NOI2005-%E8%81%AA%E8%81%AA%E4%B8%8E%E5%8F%AF%E5%8F%AF/"/>
    <id>http://yoursite.com/2018/07/22/NOI2005-聪聪与可可/</id>
    <published>2018-07-22T11:42:48.000Z</published>
    <updated>2018-07-22T11:56:05.814Z</updated>
    
    <content type="html"><![CDATA[<p>首先预处理出可可在点<em>s</em> ，聪聪在点<em>i</em> 时，聪聪的下一步<br>对每个<em>s</em> 做一遍单源最短路，枚举所有点<em>i</em> 的出边，选择其中距离较短且序号较小的点作为下一步<br>设<script type="math/tex">p\left[u\right]\left[v\right]</script>为聪聪在点<em>u</em> 可可在点<em>v</em> 的期望步数</p><ul><li><em>u=v</em> ，<script type="math/tex">p\left[u\right]\left[v\right]=0</script></li><li>当前回合能抓到，<script type="math/tex">p\left[u\right]\left[v\right]=1</script></li><li>其他情况<br>设<em>x</em> 为聪聪下一步<script type="math/tex; mode=display">p\left[u\right]\left[v\right]=\sum\frac{p\left[x\right]\left[to\right]}{k+1}+\frac{p\left[x\right]\left[v\right]}{k+1}+1</script></li></ul><p>记忆优化搜索即可<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1050</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">30</span>;</span><br><span class="line"><span class="keyword">int</span> st,ed,n,m,nxt[N][N],f[N][N];</span><br><span class="line"><span class="keyword">int</span> inq[N],d[N];</span><br><span class="line"><span class="keyword">double</span> dp[N][N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[N];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) d[i]=INF;</span><br><span class="line">    d[s]=<span class="number">0</span>,inq[s]=<span class="number">1</span>,Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();</span><br><span class="line">        inq[x]=<span class="number">0</span>,Q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[x].size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[x][i];</span><br><span class="line">            <span class="keyword">if</span> (d[x]+<span class="number">1</span>&lt;d[to])</span><br><span class="line">            &#123;</span><br><span class="line">                d[to]=d[x]+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (!inq[to]) Q.push(to),inq[to]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="keyword">if</span> (i!=s)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;e[i].size();j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[i][j];</span><br><span class="line">            <span class="keyword">if</span> (!nxt[i][s]||d[to]&lt;d[nxt[i][s]]) nxt[i][s]=to;</span><br><span class="line">            <span class="keyword">if</span> (d[to]==d[nxt[i][s]]&amp;&amp;to&lt;nxt[i][s]) nxt[i][s]=to;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (f[u][v]) <span class="keyword">return</span> dp[u][v];</span><br><span class="line">    <span class="keyword">if</span> (u==v) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (nxt[u][v]==v) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> x=nxt[nxt[u][v]][v];</span><br><span class="line">    <span class="keyword">if</span> (x==v) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[v].size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[v][i];</span><br><span class="line">        dp[u][v]+=dfs(x,to)/(<span class="number">1</span>+e[v].size());</span><br><span class="line">    &#125;</span><br><span class="line">    dp[u][v]+=dfs(x,v)/(<span class="number">1</span>+e[v].size())+<span class="number">1</span>;</span><br><span class="line">    f[u][v]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> dp[u][v];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    st=read(),ed=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">        e[u].push_back(v);</span><br><span class="line">        e[v].push_back(u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) SPFA(i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.3lf\n"</span>,dfs(st,ed));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先预处理出可可在点&lt;em&gt;s&lt;/em&gt; ，聪聪在点&lt;em&gt;i&lt;/em&gt; 时，聪聪的下一步&lt;br&gt;对每个&lt;em&gt;s&lt;/em&gt; 做一遍单源最短路，枚举所有点&lt;em&gt;i&lt;/em&gt; 的出边，选择其中距离较短且序号较小的点作为下一步&lt;br&gt;设&lt;script type=&quot;math/tex&quot;&gt;p\left[u\right]\left[v\right]&lt;/script&gt;为聪聪在点&lt;em&gt;u&lt;/em&gt; 可可在点&lt;em&gt;v&lt;/em&gt; 的期望步数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;u=v&lt;/em&gt; ，&lt;script type=&quot;math/tex&quot;&gt;p\left[u\right]\left[v\right]=0&lt;/script&gt;&lt;/li&gt;
&lt;li&gt;当前回合能抓到，&lt;script type=&quot;math/tex&quot;&gt;p\left[u\right]\left[v\right]=1&lt;/script&gt;&lt;/li&gt;
&lt;li&gt;其他情况&lt;br&gt;设&lt;em&gt;x&lt;/em&gt; 为聪聪下一步&lt;script type=&quot;math/tex; mode=display&quot;&gt;
p\left[u\right]\left[v\right]=\sum\frac{p\left[x\right]\left[to\right]}{k+1}+\frac{p\left[x\right]\left[v\right]}{k+1}+1&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;记忆优化搜索即可&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="概率" scheme="http://yoursite.com/tags/%E6%A6%82%E7%8E%87/"/>
    
      <category term="图论" scheme="http://yoursite.com/tags/%E5%9B%BE%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>[SCOI2005]最大子矩阵</title>
    <link href="http://yoursite.com/2018/07/22/SCOI2005-%E6%9C%80%E5%A4%A7%E5%AD%90%E7%9F%A9%E9%98%B5/"/>
    <id>http://yoursite.com/2018/07/22/SCOI2005-最大子矩阵/</id>
    <published>2018-07-22T11:26:11.000Z</published>
    <updated>2018-07-22T12:06:30.371Z</updated>
    
    <content type="html"><![CDATA[<p>观察到<em>m</em> 比较小<br>考虑记录每行所有状态</p><ul><li><p><em>m=1</em><br><em>dp</em> 数组记录第<em>i</em> 行，放了<em>j</em> 个，当前行放<em>1</em> 不放<em>0</em></p><script type="math/tex; mode=display">dp\left[i\right]\left[j\right]\left[0\right]=max\left(  dp\left[i-1\right]\left[j\right]\left[0\right] ,dp\left[i-1\right]\left[j\right]\left[1\right]\right)</script><script type="math/tex; mode=display">dp\left[i\right]\left[j\right]\left[1\right]=max\left( dp\left[i-1\right]\left[j\right]\left[1\right] ,dp\left[i-1\right]\left[j-1\right]\left[0\right] ,dp\left[i-1\right]\left[j-1\right]\left[1\right]   \right)+w\left[i\right]\left[1\right]</script></li><li><p><em>m=2</em><br><em>0</em> 表示两格均不放<br><em>1</em> 表示放左边<br><em>2</em> 表示放右边<br><em>3</em> 表示两格均有，且为两格个矩形<br><em>4</em> 表示两格均有，且为一个矩形<br>转移方程因为空间问题<del>（懒）</del>，请看代码</p></li></ul><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">105</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">25</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,k,w[N][N],dp[N][N][<span class="number">5</span>];<span class="comment">// None L R 2 1</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=k;j++)</span><br><span class="line">            dp[i][j][<span class="number">0</span>]=dp[i][j][<span class="number">1</span>]=-INF;</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=k;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            dp[i][j][<span class="number">0</span>]=max(dp[i<span class="number">-1</span>][j][<span class="number">1</span>],dp[i<span class="number">-1</span>][j][<span class="number">0</span>]);</span><br><span class="line">            dp[i][j][<span class="number">1</span>]=dp[i<span class="number">-1</span>][j][<span class="number">1</span>]+w[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (j&gt;<span class="number">0</span>)</span><br><span class="line">                dp[i][j][<span class="number">1</span>]=max(dp[i][j][<span class="number">1</span>],max(dp[i<span class="number">-1</span>][j<span class="number">-1</span>][<span class="number">1</span>],dp[i<span class="number">-1</span>][j<span class="number">-1</span>][<span class="number">0</span>])+w[i][<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=-INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=k;i++)</span><br><span class="line">        ans=max(ans,max(dp[n][i][<span class="number">0</span>],dp[n][i][<span class="number">1</span>]));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=k;j++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;<span class="number">5</span>;s++) dp[i][j][s]=-INF;</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=k;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;<span class="number">5</span>;s++) dp[i][j][<span class="number">0</span>]=max(dp[i][j][<span class="number">0</span>],dp[i<span class="number">-1</span>][j][s]);</span><br><span class="line">            dp[i][j][<span class="number">1</span>]=max(dp[i<span class="number">-1</span>][j][<span class="number">1</span>],dp[i<span class="number">-1</span>][j][<span class="number">3</span>])+w[i][<span class="number">1</span>];</span><br><span class="line">            dp[i][j][<span class="number">2</span>]=max(dp[i<span class="number">-1</span>][j][<span class="number">2</span>],dp[i<span class="number">-1</span>][j][<span class="number">3</span>])+w[i][<span class="number">2</span>];</span><br><span class="line">            dp[i][j][<span class="number">3</span>]=dp[i<span class="number">-1</span>][j][<span class="number">3</span>]+w[i][<span class="number">1</span>]+w[i][<span class="number">2</span>];</span><br><span class="line">            dp[i][j][<span class="number">4</span>]=dp[i<span class="number">-1</span>][j][<span class="number">4</span>]+w[i][<span class="number">1</span>]+w[i][<span class="number">2</span>];</span><br><span class="line">            <span class="keyword">if</span> (j&gt;<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;<span class="number">5</span>;s++) dp[i][j][<span class="number">1</span>]=max(dp[i][j][<span class="number">1</span>],dp[i<span class="number">-1</span>][j<span class="number">-1</span>][s]+w[i][<span class="number">1</span>]);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;<span class="number">5</span>;s++) dp[i][j][<span class="number">2</span>]=max(dp[i][j][<span class="number">2</span>],dp[i<span class="number">-1</span>][j<span class="number">-1</span>][s]+w[i][<span class="number">2</span>]);</span><br><span class="line">                dp[i][j][<span class="number">3</span>]=max(dp[i][j][<span class="number">3</span>],max(dp[i<span class="number">-1</span>][j<span class="number">-1</span>][<span class="number">3</span>],max(dp[i<span class="number">-1</span>][j<span class="number">-1</span>][<span class="number">1</span>],dp[i<span class="number">-1</span>][j<span class="number">-1</span>][<span class="number">2</span>]))+w[i][<span class="number">1</span>]+w[i][<span class="number">2</span>]);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;<span class="number">5</span>;s++) dp[i][j][<span class="number">4</span>]=max(dp[i][j][<span class="number">4</span>],dp[i<span class="number">-1</span>][j<span class="number">-1</span>][s]+w[i][<span class="number">1</span>]+w[i][<span class="number">2</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (j&gt;=<span class="number">2</span>)</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;<span class="number">5</span>;s++) dp[i][j][<span class="number">3</span>]=max(dp[i][j][<span class="number">3</span>],dp[i<span class="number">-1</span>][j<span class="number">-2</span>][s]+w[i][<span class="number">1</span>]+w[i][<span class="number">2</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=-INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=k;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;<span class="number">5</span>;s++) </span><br><span class="line">            ans=max(ans,dp[n][i][s]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read(),k=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++) w[i][j]=read();</span><br><span class="line">    <span class="keyword">if</span> (m==<span class="number">1</span>) calc();<span class="keyword">else</span> solve();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;观察到&lt;em&gt;m&lt;/em&gt; 比较小&lt;br&gt;考虑记录每行所有状态&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;m=1&lt;/em&gt;&lt;br&gt;&lt;em&gt;dp&lt;/em&gt; 数组记录第&lt;em&gt;i&lt;/em&gt; 行，放了&lt;em&gt;j&lt;/em&gt; 个，当前行放&lt;em&gt;1&lt;/em&gt; 不放&lt;em&gt;0&lt;/em&gt;&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left[i\right]\left[j\right]\left[0\right]=max\left(  dp\left[i-1\right]\left[j\right]\left[0\right] ,dp\left[i-1\right]\left[j\right]\left[1\right]\right)&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left[i\right]\left[j\right]\left[1\right]=max\left( dp\left[i-1\right]\left[j\right]\left[1\right] ,dp\left[i-1\right]\left[j-1\right]\left[0\right] ,dp\left[i-1\right]\left[j-1\right]\left[1\right]   \right)+w\left[i\right]\left[1\right]&lt;/script&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;m=2&lt;/em&gt;&lt;br&gt;&lt;em&gt;0&lt;/em&gt; 表示两格均不放&lt;br&gt;&lt;em&gt;1&lt;/em&gt; 表示放左边&lt;br&gt;&lt;em&gt;2&lt;/em&gt; 表示放右边&lt;br&gt;&lt;em&gt;3&lt;/em&gt; 表示两格均有，且为两格个矩形&lt;br&gt;&lt;em&gt;4&lt;/em&gt; 表示两格均有，且为一个矩形&lt;br&gt;转移方程因为空间问题&lt;del&gt;（懒）&lt;/del&gt;，请看代码&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>[CQOI2017]小Q的棋盘</title>
    <link href="http://yoursite.com/2018/07/22/CQOI2017-%E5%B0%8FQ%E7%9A%84%E6%A3%8B%E7%9B%98/"/>
    <id>http://yoursite.com/2018/07/22/CQOI2017-小Q的棋盘/</id>
    <published>2018-07-22T11:05:22.000Z</published>
    <updated>2018-07-22T12:36:11.440Z</updated>
    
    <content type="html"><![CDATA[<p><em>f</em> 记录第<em>i</em> 个点，访问<em>j</em> 条边，且返回<em>i</em> 点，经过的最大格点数量<br><em>g</em> 则记录不返回的</p><script type="math/tex; mode=display">f\left[i\right]\left[j\right]=max\left\{ f\left[i\right]\left[k\right]+f\left[to\right]\left[j-k-2\right]\right\}\left ( to\in i_{son} \right )</script><p>不在该子节点一去不回头</p><script type="math/tex; mode=display">g\left[i\right]\left[j\right]=max\left\{ g\left[i\right]\left[k\right]+f\left[to\right]\left[j-k-2\right]\right\}\left ( to\in i_{son} \right )</script><p>在该子节点一去不回头</p><script type="math/tex; mode=display">g\left[i\right]\left[j\right]=max\left\{ f\left[i\right]\left[k\right]+g\left[to\right]\left[j-k-1\right]\right\}\left ( to\in i_{son} \right )</script><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">200</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,f[N][N],g[N][N];<span class="comment">//f:ret g:no</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    f[o][<span class="number">0</span>]=g[o][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;e[o].size();k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[o][k];</span><br><span class="line">        <span class="keyword">if</span> (to==fa) <span class="keyword">continue</span>; </span><br><span class="line">        dfs(to,o);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=m;i&gt;<span class="number">0</span>;i--)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (i-j<span class="number">-2</span>&gt;=<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    f[o][i]=max(f[o][i],f[to][j]+f[o][i-j<span class="number">-2</span>]);</span><br><span class="line">                    g[o][i]=max(g[o][i],f[to][j]+g[o][i-j<span class="number">-2</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">                g[o][i]=max(g[o][i],g[to][j]+f[o][i-j<span class="number">-1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        f[o][i]=max(f[o][i],f[o][i<span class="number">-1</span>]),</span><br><span class="line">        g[o][i]=max(g[o][i],g[o][i<span class="number">-1</span>]);</span><br><span class="line">    &#125;     </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u,v;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</span><br><span class="line">        e[u].push_back(v);</span><br><span class="line">        e[v].push_back(u);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,g[<span class="number">0</span>][m]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;f&lt;/em&gt; 记录第&lt;em&gt;i&lt;/em&gt; 个点，访问&lt;em&gt;j&lt;/em&gt; 条边，且返回&lt;em&gt;i&lt;/em&gt; 点，经过的最大格点数量&lt;br&gt;&lt;em&gt;g&lt;/em&gt; 则记录不返回的&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
f\left[i\right]\left[j\right]=max\left\{ f\left[i\right]\left[k\right]+f\left[to\right]\left[j-k-2\right]\right\}\left ( to\in i_{son} \right )&lt;/script&gt;&lt;p&gt;不在该子节点一去不回头&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
g\left[i\right]\left[j\right]=max\left\{ g\left[i\right]\left[k\right]+f\left[to\right]\left[j-k-2\right]\right\}\left ( to\in i_{son} \right )&lt;/script&gt;&lt;p&gt;在该子节点一去不回头&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
g\left[i\right]\left[j\right]=max\left\{ f\left[i\right]\left[k\right]+g\left[to\right]\left[j-k-1\right]\right\}\left ( to\in i_{son} \right )&lt;/script&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
      <category term="树形结构" scheme="http://yoursite.com/tags/%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84/"/>
    
      <category term="背包" scheme="http://yoursite.com/tags/%E8%83%8C%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>[HNOI2001]求正整数</title>
    <link href="http://yoursite.com/2018/07/22/HNOI2001-%E6%B1%82%E6%AD%A3%E6%95%B4%E6%95%B0/"/>
    <id>http://yoursite.com/2018/07/22/HNOI2001-求正整数/</id>
    <published>2018-07-22T10:35:54.000Z</published>
    <updated>2018-07-22T10:53:46.020Z</updated>
    
    <content type="html"><![CDATA[<p>设<script type="math/tex">N=\prod p_{i}^{a_{i}}</script><br>则<em>N</em> 的约数个数为<script type="math/tex">\prod \left( a_{i}+1 \right)</script><br>题目中<em>n</em> 最大值为50000，因此<em>N</em> 的质因子不超过16个<br>为了方便保存状态用了<em>dfs</em><br>当然搜索不可能用高精度，于是取对数保存<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">20</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">30</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> p[]=&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">17</span>,<span class="number">19</span>,<span class="number">23</span>,<span class="number">29</span>,<span class="number">31</span>,<span class="number">37</span>,<span class="number">41</span>,<span class="number">43</span>,<span class="number">47</span>,<span class="number">53</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> w[N],c[N],n;</span><br><span class="line"><span class="keyword">double</span> f=INF;</span><br><span class="line"><span class="keyword">namespace</span> NUM</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> LEN=<span class="number">50000</span>,mod=<span class="number">1e8</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Num</span>&#123;</span>LL M[LEN],len;&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(Num &amp;a)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;LEN;i++) a.M[i]=<span class="number">0</span>;</span><br><span class="line">        a.M[a.len=<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">mul</span><span class="params">(Num &amp;a,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> d=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;a.len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            a.M[i]=a.M[i]*x+d;</span><br><span class="line">            d=a.M[i]/mod;</span><br><span class="line">            a.M[i]%=mod;</span><br><span class="line">        &#125;</span><br><span class="line">        a.M[a.len]=a.M[a.len]*x+d;</span><br><span class="line">        <span class="keyword">while</span> (a.M[a.len]&gt;=mod)</span><br><span class="line">        &#123;</span><br><span class="line">            a.M[a.len+<span class="number">1</span>]=a.M[a.len]/mod;</span><br><span class="line">            a.M[a.len++]%=mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(Num a)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld"</span>,a.M[a.len]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=a.len<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--) </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%.8lld"</span>,a.M[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span> x,<span class="keyword">double</span> now)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (k&gt;=<span class="number">16</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (now&gt;f) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (x==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (now&lt;f)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">16</span>;i++) c[i]=w[i];</span><br><span class="line">            f=now;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i*i&lt;=x;i++)</span><br><span class="line">        <span class="keyword">if</span> (x%i==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i*i!=x) </span><br><span class="line">            &#123;</span><br><span class="line">                w[k]=x/i<span class="number">-1</span>;</span><br><span class="line">                dfs(k+<span class="number">1</span>,i,now+(x/i<span class="number">-1</span>)*<span class="built_in">log</span>(p[k]));</span><br><span class="line">                w[k]=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (i!=<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                w[k]=i<span class="number">-1</span>;</span><br><span class="line">                dfs(k+<span class="number">1</span>,x/i,now+(i<span class="number">-1</span>)*<span class="built_in">log</span>(p[k]));</span><br><span class="line">                w[k]=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> NUM;</span><br><span class="line">Num ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    dfs(<span class="number">0</span>,n,<span class="number">0</span>);</span><br><span class="line">    init(ans);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">16</span>;i++)</span><br><span class="line">        <span class="keyword">while</span> (c[i]--) mul(ans,p[i]);</span><br><span class="line">    print(ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;设&lt;script type=&quot;math/tex&quot;&gt;N=\prod p_{i}^{a_{i}}&lt;/script&gt;&lt;br&gt;则&lt;em&gt;N&lt;/em&gt; 的约数个数为&lt;script type=&quot;math/tex&quot;&gt;\prod \left( a_{i}+1 \right)&lt;/script&gt;&lt;br&gt;题目中&lt;em&gt;n&lt;/em&gt; 最大值为50000，因此&lt;em&gt;N&lt;/em&gt; 的质因子不超过16个&lt;br&gt;为了方便保存状态用了&lt;em&gt;dfs&lt;/em&gt;&lt;br&gt;当然搜索不可能用高精度，于是取对数保存&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="搜索" scheme="http://yoursite.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="数论" scheme="http://yoursite.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="高精度" scheme="http://yoursite.com/tags/%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>[ZJOI2007]棋盘制作</title>
    <link href="http://yoursite.com/2018/07/20/ZJOI2007-%E6%A3%8B%E7%9B%98%E5%88%B6%E4%BD%9C/"/>
    <id>http://yoursite.com/2018/07/20/ZJOI2007-棋盘制作/</id>
    <published>2018-07-20T12:16:27.000Z</published>
    <updated>2018-07-22T12:05:20.447Z</updated>
    
    <content type="html"><![CDATA[<p>对于图上所有的棋盘一定属于以下两种类型：</p><ul><li><p>黑格行列奇偶性相同，白格不同</p></li><li><p>白格行列奇偶性相同，黑格不同</p></li></ul><p>分两类讨论<br>每次翻转一部分棋盘的颜色<br>然后问题就变成了求全<em>1</em> 的最大正方形和最大矩形<br>参考<a href="https://cwher.github.io/2018/07/20/洛谷P1736-创意吃鱼法" target="_blank" rel="noopener">洛谷P1736 创意吃鱼法</a>，<a href="https://cwher.github.io/2018/07/20/洛谷P4147-玉蟾宫" target="_blank" rel="noopener">洛谷P4147-玉蟾宫</a><br><a id="more"></a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">2050</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span><span class="keyword">int</span> val,sz;&#125;;</span><br><span class="line"><span class="built_in">stack</span>&lt;node&gt; S;</span><br><span class="line"><span class="keyword">int</span> n,m,s1,s2,L[N][N],U[N][N],dp[N][N],w[N][N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">    <span class="built_in">memset</span>(L,<span class="number">0</span>,<span class="keyword">sizeof</span>(L));</span><br><span class="line">    <span class="built_in">memset</span>(U,<span class="number">0</span>,<span class="keyword">sizeof</span>(U));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            L[i][j]=w[i][j]?L[i][j<span class="number">-1</span>]+<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            U[i][j]=w[i][j]?U[i<span class="number">-1</span>][j]+<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++) <span class="keyword">if</span> (w[i][j])</span><br><span class="line">            s1=max(s1,dp[i][j]=min(dp[i<span class="number">-1</span>][j<span class="number">-1</span>],min(L[i][j<span class="number">-1</span>],U[i<span class="number">-1</span>][j]))+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    calc();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m/<span class="number">2</span>;j++) swap(w[i][j],w[i][m-j+<span class="number">1</span>]);</span><br><span class="line">    calc();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> sz=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (!S.empty()&amp;&amp;U[i][j]&lt;=S.top().val)</span><br><span class="line">            &#123;</span><br><span class="line">                sz+=S.top().sz;</span><br><span class="line">                s2=max(s2,sz*S.top().val);</span><br><span class="line">                S.pop();</span><br><span class="line">            &#125;</span><br><span class="line">            S.push((node)&#123;U[i][j],sz+<span class="number">1</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> sz=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (!S.empty())</span><br><span class="line">        &#123;</span><br><span class="line">            sz+=S.top().sz;</span><br><span class="line">            s2=max(s2,sz*S.top().val);</span><br><span class="line">            S.pop();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++) w[i][j]=((i+j)&amp;<span class="number">1</span>)^read();</span><br><span class="line">    solve();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++) w[i][j]^=<span class="number">1</span>;</span><br><span class="line">    solve();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n%d"</span>,s1*s1,s2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于图上所有的棋盘一定属于以下两种类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;黑格行列奇偶性相同，白格不同&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;白格行列奇偶性相同，黑格不同&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;分两类讨论&lt;br&gt;每次翻转一部分棋盘的颜色&lt;br&gt;然后问题就变成了求全&lt;em&gt;1&lt;/em&gt; 的最大正方形和最大矩形&lt;br&gt;参考&lt;a href=&quot;https://cwher.github.io/2018/07/20/洛谷P1736-创意吃鱼法&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;洛谷P1736 创意吃鱼法&lt;/a&gt;，&lt;a href=&quot;https://cwher.github.io/2018/07/20/洛谷P4147-玉蟾宫&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;洛谷P4147-玉蟾宫&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
      <category term="栈" scheme="http://yoursite.com/tags/%E6%A0%88/"/>
    
  </entry>
  
</feed>
