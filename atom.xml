<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>魍魉的小窝</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-07-15T10:36:28.234Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>CWHer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>洛谷P2801 教主的魔法</title>
    <link href="http://yoursite.com/2018/07/15/%E6%B4%9B%E8%B0%B7P2801-%E6%95%99%E4%B8%BB%E7%9A%84%E9%AD%94%E6%B3%95/"/>
    <id>http://yoursite.com/2018/07/15/洛谷P2801-教主的魔法/</id>
    <published>2018-07-15T10:23:14.000Z</published>
    <updated>2018-07-15T10:36:28.234Z</updated>
    
    <content type="html"><![CDATA[<p>想了好久发现套不了数据结构。<br>然后看了看数据范围用了分块。<br>分成<script type="math/tex">\sqrt{n }</script>个块，块内保持有序<br>对于<em>M</em> 操作，覆盖整块就打标记，否则暴力更新并重新排序<br>对于<em>A</em> 操作，覆盖整块就二分查找，否则暴力查找<br>复杂度<script type="math/tex">O\left ( QlogN \sqrt{N} \right )</script><br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1050</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,num,c[N][N],id[N][N],w[N],st[N],ed[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> ((ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&amp;&amp;ch!=<span class="string">'-'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) &#123;t=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) &#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">get</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (!((<span class="string">'a'</span>&lt;=ch&amp;&amp;ch&lt;=<span class="string">'z'</span>)||(<span class="string">'A'</span>&lt;=ch&amp;&amp;ch&lt;=<span class="string">'Z'</span>))) ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qsort</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=l,j=r,mid=c[k][id[k][(l+r)&gt;&gt;<span class="number">1</span>]];</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (c[k][id[k][i]]&lt;mid) i++;</span><br><span class="line">        <span class="keyword">while</span> (c[k][id[k][j]]&gt;mid) j--;</span><br><span class="line">        <span class="keyword">if</span> (i&lt;=j) swap(id[k][i],id[k][j]),i++,j--;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">while</span> (i&lt;=j);</span><br><span class="line">    <span class="keyword">if</span> (i&lt;r) qsort(k,i,r);</span><br><span class="line">    <span class="keyword">if</span> (l&lt;j) qsort(k,l,j);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> L=<span class="number">1</span>,R=ed[k]-st[k]+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (L&lt;R)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(L+R)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (c[k][id[k][mid]]+w[k]&lt;x)</span><br><span class="line">            L=mid+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            R=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (L+R)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    num=<span class="built_in">sqrt</span>(n)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=num;i++) st[i]=n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,cnt=<span class="number">0</span>;i&lt;=n;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        st[i/num]=min(st[i/num],i);</span><br><span class="line">        ed[i/num]=max(ed[i/num],i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        c[i/num][i-st[i/num]+<span class="number">1</span>]=read();</span><br><span class="line">        id[i/num][i-st[i/num]+<span class="number">1</span>]=i-st[i/num]+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=num;i++) qsort(i,<span class="number">1</span>,ed[i]-st[i]+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> opt=get();</span><br><span class="line">        <span class="keyword">int</span> ql=read(),qr=read(),x=read();</span><br><span class="line">        <span class="keyword">if</span> (opt==<span class="string">'M'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=ql;i&lt;=min(qr,ed[ql/num]);i++) c[i/num][i-st[i/num]+<span class="number">1</span>]+=x;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=ql/num+<span class="number">1</span>;i&lt;qr/num;i++) w[i]+=x;</span><br><span class="line">            <span class="keyword">if</span> (ql/num!=qr/num) </span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=st[qr/num];i&lt;=qr;i++) c[i/num][i-st[i/num]+<span class="number">1</span>]+=x;</span><br><span class="line">            qsort(ql/num,<span class="number">1</span>,ed[ql/num]-st[ql/num]+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (ql/num!=qr/num) qsort(qr/num,<span class="number">1</span>,ed[qr/num]-st[qr/num]+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=ql;i&lt;=min(qr,ed[ql/num]);i++) </span><br><span class="line">                <span class="keyword">if</span> (c[i/num][i-st[i/num]+<span class="number">1</span>]+w[i/num]&gt;=x) ans++;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=ql/num+<span class="number">1</span>;i&lt;qr/num;i++) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (c[i][id[i][ed[i]-st[i]+<span class="number">1</span>]]+w[i]&lt;x) <span class="keyword">continue</span>;</span><br><span class="line">                ans+=(ed[i]-st[i]+<span class="number">1</span>)-find(i,x)+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (ql/num!=qr/num)</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=st[qr/num];i&lt;=qr;i++) </span><br><span class="line">                    <span class="keyword">if</span> (c[i/num][i-st[i/num]+<span class="number">1</span>]+w[i/num]&gt;=x) ans++;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;想了好久发现套不了数据结构。&lt;br&gt;然后看了看数据范围用了分块。&lt;br&gt;分成&lt;script type=&quot;math/tex&quot;&gt;\sqrt{n }&lt;/script&gt;个块，块内保持有序&lt;br&gt;对于&lt;em&gt;M&lt;/em&gt; 操作，覆盖整块就打标记，否则暴力更新并重新排序&lt;br&gt;对于&lt;em&gt;A&lt;/em&gt; 操作，覆盖整块就二分查找，否则暴力查找&lt;br&gt;复杂度&lt;script type=&quot;math/tex&quot;&gt;O\left ( QlogN \sqrt{N} \right )&lt;/script&gt;&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="分块" scheme="http://yoursite.com/tags/%E5%88%86%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>[CQOI2007]余数求和</title>
    <link href="http://yoursite.com/2018/07/15/CQOI2007-%E4%BD%99%E6%95%B0%E6%B1%82%E5%92%8C/"/>
    <id>http://yoursite.com/2018/07/15/CQOI2007-余数求和/</id>
    <published>2018-07-15T10:06:58.000Z</published>
    <updated>2018-07-15T10:21:30.451Z</updated>
    
    <content type="html"><![CDATA[<script type="math/tex; mode=display">k\ mod \ i=k-\left \lfloor \frac{k}{i} \right \rfloor*i</script><script type="math/tex; mode=display">\sum_{i=1}^{n}k \ mod \ i=\sum_{i=1}^{n}\left ( k-\left \lfloor \frac{k}{i} \right \rfloor*i \right )=nk-\sum_{i=1}^{n}\left ( \left \lfloor \frac{k}{i} \right \rfloor*i \right )</script><p>分块求解即可<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">LL n,k,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;n,&amp;k);</span><br><span class="line">    LL sz=<span class="built_in">sqrt</span>(k);</span><br><span class="line">    <span class="keyword">for</span>(LL i=<span class="number">1</span>;k/i&gt;sz;i++) ans-=i*(k/i);</span><br><span class="line">    <span class="keyword">for</span>(LL i=sz;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        LL L=k/(i+<span class="number">1</span>)+<span class="number">1</span>,R=min(n,k/i);</span><br><span class="line">        ans-=(L+R)*(R-L+<span class="number">1</span>)/<span class="number">2</span>*i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans+n*k);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;math/tex; mode=display&quot;&gt;
k\ mod \ i=k-\left \lfloor \frac{k}{i} \right \rfloor*i&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\sum_{i=1}^{n}k \ mod \ i=\sum_{i=1}^{n}\left ( k-\left \lfloor \frac{k}{i} \right \rfloor*i \right )=nk-\sum_{i=1}^{n}\left ( \left \lfloor \frac{k}{i} \right \rfloor*i \right )&lt;/script&gt;&lt;p&gt;分块求解即可&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="数论" scheme="http://yoursite.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="分块" scheme="http://yoursite.com/tags/%E5%88%86%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P1108 低价购买</title>
    <link href="http://yoursite.com/2018/07/13/%E6%B4%9B%E8%B0%B7P1108-%E4%BD%8E%E4%BB%B7%E8%B4%AD%E4%B9%B0/"/>
    <id>http://yoursite.com/2018/07/13/洛谷P1108-低价购买/</id>
    <published>2018-07-13T12:42:45.000Z</published>
    <updated>2018-07-13T12:55:18.048Z</updated>
    
    <content type="html"><![CDATA[<p><em>dp</em> 数组记录方案数，<em>f</em> 数组记录购买次数</p><script type="math/tex; mode=display">dp\left [ i \right ]=\sum_{j=1}^{i-1}dp\left [ j \right ] \ \ \ \left  ( f\left [ j \right ]+1=f\left [ i \right ] ,w\left [ j \right ]<w\left [ i \right ]\right )</script><p>同时去重</p><script type="math/tex; mode=display">dp\left [ j \right ]=0 \ \ \left ( j< i,f\left [ i \right ] = f\left [ j \right ],w\left [ i \right ] = w\left [ j \right ]\right )</script><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">5050</span>;</span><br><span class="line"><span class="keyword">int</span> n,w[N],dp[N],f[N],maxs,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;w[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) dp[i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;j++)</span><br><span class="line">            <span class="keyword">if</span> (w[j]&gt;w[i]) dp[i]=max(dp[i],dp[j]+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) maxs=max(dp[i],maxs);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d "</span>,maxs);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">        <span class="keyword">if</span> (dp[i]==<span class="number">1</span>) f[i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (dp[j]+<span class="number">1</span>==dp[i]&amp;&amp;w[i]&lt;w[j]) f[i]+=f[j];</span><br><span class="line">            <span class="keyword">if</span> (dp[i]==dp[j]&amp;&amp;w[i]==w[j]) f[j]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span> (dp[i]==maxs) ans+=f[i];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;dp&lt;/em&gt; 数组记录方案数，&lt;em&gt;f&lt;/em&gt; 数组记录购买次数&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [ i \right ]=\sum_{j=1}^{i-1}dp\left [ j \right ] \ \ \ \left  ( f\left [ j \right ]+1=f\left [ i \right ] ,w\left [ j \right ]&lt;w\left [ i \right ]\right )&lt;/script&gt;&lt;p&gt;同时去重&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [ j \right ]=0 \ \ \left ( j&lt; i,f\left [ i \right ] = f\left [ j \right ],w\left [ i \right ] = w\left [ j \right ]\right )&lt;/script&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="动态规划" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>[TJOI2015]线性代数</title>
    <link href="http://yoursite.com/2018/07/13/TJOI2015-%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
    <id>http://yoursite.com/2018/07/13/TJOI2015-线性代数/</id>
    <published>2018-07-13T12:25:32.000Z</published>
    <updated>2018-07-13T12:58:32.517Z</updated>
    
    <content type="html"><![CDATA[<p><del>首先要看得懂题目</del><br>同时取<em>A</em> 中的<em>i,j</em> 两点可获得<script type="math/tex">b\left [ i \right ]\left [j \right ]+b\left [ j \right ]\left [i \right ]</script>，但要减去<script type="math/tex">c\left [ i \right ]+c\left [ j \right ]</script><br>记<script type="math/tex">edge\left \{ u,v,capacity,cost \right \}</script>为一条从<em>u</em> 到<em>v</em> 的，流量为<em>cap</em> 的，费用为<em>cost</em> 的弧与反弧<br>转化成最小割<br>对于<em>B</em> 中每个二元组<script type="math/tex">\left ( i,j \right )</script>，连边<script type="math/tex">edge\left \{ S,\left ( i,j \right ), b\left [ i \right ]\left [j \right ]+b\left [ j \right ]\left [i \right ]\right \}</script>，<script type="math/tex">edge\left \{ \left ( i,j \right ),i, INF\right \}</script>和<script type="math/tex">edge\left \{ \left ( i,j \right ),j, INF\right \}</script><br><em>i= j</em> 的情况需要特殊处理<br>对于<em>C</em> 中的第<em>k</em> 个元素，连边<script type="math/tex">edge\left \{ k,T, c\left [ k \right ]\right \}</script></p><p>关于网络流，应该在这里就要暂告一段落了<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M=<span class="number">500050</span>,N=<span class="number">1005</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">25</span>;</span><br><span class="line"><span class="keyword">int</span> n,sum=<span class="number">0</span>,st,ed,w[N][N],c[N];</span><br><span class="line"><span class="keyword">int</span> head[N*N],cnt=<span class="number">0</span>,d[N*N],cur[N*N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span><span class="keyword">int</span> to,next,flow,cap;&#125; e[M&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">F</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;<span class="keyword">return</span> (x<span class="number">-1</span>)*n+y;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> cap)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[cnt].next=head[u];</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">    e[cnt].to=v;</span><br><span class="line">    e[cnt++].cap=cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty()) Q.pop();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*n+n+<span class="number">2</span>;i++) d[i]=<span class="number">0</span>;</span><br><span class="line">    d[s]=<span class="number">1</span>,Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty()&amp;&amp;!d[t])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();Q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];~i;i=e[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">            <span class="keyword">if</span> (e[i].flow&lt;e[i].cap&amp;&amp;!d[to])</span><br><span class="line">            &#123;</span><br><span class="line">                d[to]=d[x]+<span class="number">1</span>;</span><br><span class="line">                Q.push(to);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> d[t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> t,<span class="keyword">int</span> flow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!flow||x==t) <span class="keyword">return</span> flow;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>,new_flow;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> &amp;i=cur[x];~i&amp;&amp;flow;i=e[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">        <span class="keyword">if</span> (d[x]+<span class="number">1</span>==d[to])</span><br><span class="line">        &#123;</span><br><span class="line">            new_flow=dfs(to,t,min(flow,e[i].cap-e[i].flow));</span><br><span class="line">            e[i].flow+=new_flow;</span><br><span class="line">            e[i^<span class="number">1</span>].flow-=new_flow;</span><br><span class="line">            ret+=new_flow;</span><br><span class="line">            flow-=new_flow;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Dinic</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (bfs(s,t))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*n+n+<span class="number">2</span>;i++) cur[i]=head[i];</span><br><span class="line">        ret+=dfs(s,t,INF);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) </span><br><span class="line">            sum+=w[i][j]=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) c[i]=read();</span><br><span class="line">    st=n*n+n+<span class="number">1</span>,ed=st+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*n+n+<span class="number">2</span>;i++) head[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            add(st,F(i,j),w[i][j]+w[j][i]);</span><br><span class="line">            add(F(i,j),st,<span class="number">0</span>);</span><br><span class="line">            add(F(i,j),n*n+i,INF);</span><br><span class="line">            add(n*n+i,F(i,j),<span class="number">0</span>);</span><br><span class="line">            add(F(i,j),n*n+j,INF);</span><br><span class="line">            add(n*n+j,F(i,j),<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        add(st,F(i,i),w[i][i]);</span><br><span class="line">        add(F(i,i),st,<span class="number">0</span>);</span><br><span class="line">        add(F(i,i),n*n+i,INF);</span><br><span class="line">        add(n*n+i,F(i,i),<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        add(n*n+i,ed,c[i]);</span><br><span class="line">        add(ed,n*n+i,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum-Dinic(st,ed));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;首先要看得懂题目&lt;/del&gt;&lt;br&gt;同时取&lt;em&gt;A&lt;/em&gt; 中的&lt;em&gt;i,j&lt;/em&gt; 两点可获得&lt;script type=&quot;math/tex&quot;&gt;b\left [ i \right ]\left [j \right ]+b\left [ j \right ]\left [i \right ]&lt;/script&gt;，但要减去&lt;script type=&quot;math/tex&quot;&gt;c\left [ i \right ]+c\left [ j \right ]&lt;/script&gt;&lt;br&gt;记&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ u,v,capacity,cost \right \}&lt;/script&gt;为一条从&lt;em&gt;u&lt;/em&gt; 到&lt;em&gt;v&lt;/em&gt; 的，流量为&lt;em&gt;cap&lt;/em&gt; 的，费用为&lt;em&gt;cost&lt;/em&gt; 的弧与反弧&lt;br&gt;转化成最小割&lt;br&gt;对于&lt;em&gt;B&lt;/em&gt; 中每个二元组&lt;script type=&quot;math/tex&quot;&gt;\left ( i,j \right )&lt;/script&gt;，连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ S,\left ( i,j \right ), b\left [ i \right ]\left [j \right ]+b\left [ j \right ]\left [i \right ]\right \}&lt;/script&gt;，&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ \left ( i,j \right ),i, INF\right \}&lt;/script&gt;和&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ \left ( i,j \right ),j, INF\right \}&lt;/script&gt;&lt;br&gt;&lt;em&gt;i= j&lt;/em&gt; 的情况需要特殊处理&lt;br&gt;对于&lt;em&gt;C&lt;/em&gt; 中的第&lt;em&gt;k&lt;/em&gt; 个元素，连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ k,T, c\left [ k \right ]\right \}&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;关于网络流，应该在这里就要暂告一段落了&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="最小割" scheme="http://yoursite.com/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P3355 骑士共存问题</title>
    <link href="http://yoursite.com/2018/07/13/%E6%B4%9B%E8%B0%B7P3355-%E9%AA%91%E5%A3%AB%E5%85%B1%E5%AD%98%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/07/13/洛谷P3355-骑士共存问题/</id>
    <published>2018-07-13T12:16:17.000Z</published>
    <updated>2018-07-13T12:24:58.743Z</updated>
    
    <content type="html"><![CDATA[<p>和上一题一样的套路<br>最多骑士数=总骑士数-最少拿走的骑士数<br>二染色之后构图<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">205</span>,M=<span class="number">800000</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">25</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dx[]=&#123;<span class="number">-2</span>,<span class="number">-2</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dy[]=&#123;<span class="number">1</span>,<span class="number">-1</span>,<span class="number">2</span>,<span class="number">-2</span>,<span class="number">2</span>,<span class="number">-2</span>,<span class="number">1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n,m,st,ed,used[N][N],head[N*N],cnt=<span class="number">0</span>,cur[N*N],d[N*N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span><span class="keyword">int</span> to,next,cap,flow;&#125; e[M];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">F</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;<span class="keyword">return</span> n*(x<span class="number">-1</span>)+y;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> cap)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[cnt].next=head[u];</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">    e[cnt].to=v;</span><br><span class="line">    e[cnt++].cap=cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty()) Q.pop();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*n+<span class="number">2</span>;i++) d[i]=<span class="number">0</span>;</span><br><span class="line">    d[s]=<span class="number">1</span>,Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty()&amp;&amp;!d[t])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();Q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];~i;i=e[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">            <span class="keyword">if</span> (e[i].flow&lt;e[i].cap&amp;&amp;!d[to])</span><br><span class="line">            &#123;</span><br><span class="line">                d[to]=d[x]+<span class="number">1</span>;</span><br><span class="line">                Q.push(to);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> d[t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> t,<span class="keyword">int</span> flow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!flow||x==t) <span class="keyword">return</span> flow;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>,new_flow;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span>&amp; i=cur[x];~i&amp;&amp;flow;i=e[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">        <span class="keyword">if</span> (d[x]+<span class="number">1</span>==d[to])</span><br><span class="line">        &#123;</span><br><span class="line">            new_flow=dfs(to,t,min(flow,e[i].cap-e[i].flow));</span><br><span class="line">            e[i].flow+=new_flow;</span><br><span class="line">            e[i^<span class="number">1</span>].flow-=new_flow;</span><br><span class="line">            ret+=new_flow;</span><br><span class="line">            flow-=new_flow;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Dinic</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (bfs(s,t))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*n+<span class="number">2</span>;i++) cur[i]=head[i];</span><br><span class="line">        ret+=dfs(s,t,INF);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=read(),y=read();</span><br><span class="line">        used[x][y]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    st=n*n+<span class="number">1</span>,ed=n*n+<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*n+<span class="number">2</span>;i++) head[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) <span class="keyword">if</span> (!used[i][j])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> idx=F(i,j);</span><br><span class="line">            <span class="keyword">if</span> ((i+j)&amp;<span class="number">1</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                add(st,idx,<span class="number">1</span>),add(idx,st,<span class="number">0</span>);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">8</span>;k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> x=i+dx[k],y=j+dy[k];</span><br><span class="line">                    <span class="keyword">if</span> (<span class="number">0</span>&lt;x&amp;&amp;x&lt;=n&amp;&amp;<span class="number">0</span>&lt;y&amp;&amp;y&lt;=n)</span><br><span class="line">                        <span class="keyword">if</span> (!used[x][y])</span><br><span class="line">                        &#123;</span><br><span class="line">                            add(idx,F(x,y),INF);</span><br><span class="line">                            add(F(x,y),idx,<span class="number">0</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> add(idx,ed,<span class="number">1</span>),add(ed,idx,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,n*n-m-Dinic(st,ed));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;和上一题一样的套路&lt;br&gt;最多骑士数=总骑士数-最少拿走的骑士数&lt;br&gt;二染色之后构图&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="最小割" scheme="http://yoursite.com/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P2774 方格取数问题</title>
    <link href="http://yoursite.com/2018/07/13/%E6%B4%9B%E8%B0%B7P2774-%E6%96%B9%E6%A0%BC%E5%8F%96%E6%95%B0%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/07/13/洛谷P2774-方格取数问题/</id>
    <published>2018-07-13T12:10:05.000Z</published>
    <updated>2018-07-13T12:04:08.140Z</updated>
    
    <content type="html"><![CDATA[<p>最大和=全局和-舍弃和，而舍弃和=最小割=最大流<br>记<script type="math/tex">edge\left \{ u,v,capacity,cost \right \}​</script>为一条从<em>u</em> 到<em>v</em> 的，流量为<em>cap</em> 的，费用为<em>cost</em> 的弧与反弧<br>将图二染色<br>对于每个黑点<em>u</em> ，连边 <script type="math/tex">edge\left \{ S,u,w\left [ u \right ] \right \}</script><br>对于每个白点<em>v</em> ，连边<script type="math/tex">edge\left \{ v,T,w\left [ v \right ] \right \}</script><br>对于每个黑点<em>u</em> ，像周围白点<em>v</em> 连边<script type="math/tex">edge\left \{ u,v,INF \right \}</script><br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">105</span>,M=<span class="number">100000</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">30</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dx[]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dy[]=&#123;<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n,m,st,ed,sum=<span class="number">0</span>,w[N][N];</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>,head[N*N],d[N*N],cur[N*N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span><span class="keyword">int</span> to,next,flow,cap;&#125; e[M&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">F</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;<span class="keyword">return</span> m*(x<span class="number">-1</span>)+y;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> cap)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[cnt].next=head[u];</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">    e[cnt].to=v;</span><br><span class="line">    e[cnt++].cap=cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty()) Q.pop();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*m+<span class="number">2</span>;i++) d[i]=<span class="number">0</span>;</span><br><span class="line">    d[s]=<span class="number">1</span>,Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();Q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];~i;i=e[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">            <span class="keyword">if</span> (e[i].flow&lt;e[i].cap&amp;&amp;!d[to])</span><br><span class="line">            &#123;</span><br><span class="line">                d[to]=d[x]+<span class="number">1</span>;</span><br><span class="line">                Q.push(to);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> d[t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> t,<span class="keyword">int</span> flow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!flow||x==t) <span class="keyword">return</span> flow;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>,new_flow;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> &amp;i=cur[x];~i&amp;&amp;flow;i=e[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">        <span class="keyword">if</span> (d[x]+<span class="number">1</span>==d[to])</span><br><span class="line">        &#123;</span><br><span class="line">            new_flow=dfs(to,t,min(flow,e[i].cap-e[i].flow));</span><br><span class="line">            e[i].flow+=new_flow;</span><br><span class="line">            e[i^<span class="number">1</span>].flow-=new_flow;</span><br><span class="line">            ret+=new_flow;</span><br><span class="line">            flow-=new_flow;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Dinic</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (bfs(s,t))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*m+<span class="number">2</span>;i++) cur[i]=head[i];</span><br><span class="line">        ret+=dfs(s,t,INF);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++) </span><br><span class="line">            sum+=w[i][j]=read();</span><br><span class="line">    st=n*m+<span class="number">1</span>,ed=st+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*m+<span class="number">2</span>;i++) head[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="keyword">if</span> ((i+j)&amp;<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                add(st,F(i,j),w[i][j]);</span><br><span class="line">                add(F(i,j),st,<span class="number">0</span>);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">4</span>;k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> x=i+dx[k],y=j+dy[k];</span><br><span class="line">                    <span class="keyword">if</span> (<span class="number">0</span>&lt;x&amp;&amp;x&lt;=n&amp;&amp;<span class="number">0</span>&lt;y&amp;&amp;y&lt;=m)</span><br><span class="line">                    &#123;</span><br><span class="line">                        add(F(i,j),F(x,y),INF);</span><br><span class="line">                        add(F(x,y),F(i,j),<span class="number">0</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                add(F(i,j),ed,w[i][j]);</span><br><span class="line">                add(ed,F(i,j),<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum-Dinic(st,ed));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最大和=全局和-舍弃和，而舍弃和=最小割=最大流&lt;br&gt;记&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ u,v,capacity,cost \right \}​&lt;/script&gt;为一条从&lt;em&gt;u&lt;/em&gt; 到&lt;em&gt;v&lt;/em&gt; 的，流量为&lt;em&gt;cap&lt;/em&gt; 的，费用为&lt;em&gt;cost&lt;/em&gt; 的弧与反弧&lt;br&gt;将图二染色&lt;br&gt;对于每个黑点&lt;em&gt;u&lt;/em&gt; ，连边 &lt;script type=&quot;math/tex&quot;&gt;edge\left \{ S,u,w\left [ u \right ] \right \}&lt;/script&gt;&lt;br&gt;对于每个白点&lt;em&gt;v&lt;/em&gt; ，连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ v,T,w\left [ v \right ] \right \}&lt;/script&gt;&lt;br&gt;对于每个黑点&lt;em&gt;u&lt;/em&gt; ，像周围白点&lt;em&gt;v&lt;/em&gt; 连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ u,v,INF \right \}&lt;/script&gt;&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="最小割" scheme="http://yoursite.com/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P4014 分配问题</title>
    <link href="http://yoursite.com/2018/07/13/%E6%B4%9B%E8%B0%B7P4014-%E5%88%86%E9%85%8D%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/07/13/洛谷P4014-分配问题/</id>
    <published>2018-07-13T12:03:53.000Z</published>
    <updated>2018-07-13T12:26:53.865Z</updated>
    
    <content type="html"><![CDATA[<p>记<script type="math/tex">edge\left \{ u,v,capacity,cost \right \}</script>为一条从<em>u</em> 到<em>v</em> 的，流量为<em>cap</em> 的，费用为<em>cost</em> 的弧与反弧<br>源点向每件工作连边<script type="math/tex">edge\left \{ S,x,1,0 \right \}</script><br><del>按惯例人当做两个用</del>，第<em>k</em> 个人连边<script type="math/tex">edge\left \{ k,k+n,1,0 \right \}</script>，<script type="math/tex">edge\left \{ k+n,T,INF,0 \right \}</script><br>每件工作<em>x</em> 向第<em>k</em> 个人连边<script type="math/tex">edge\left \{ x,k,1,c\left [ x \right ]\left [ k \right ] \right \}</script><br>跑一遍MCMF，边权取反再跑一遍<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">505</span>,M=<span class="number">100000</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">30</span>;</span><br><span class="line"><span class="keyword">int</span> n,st,ed,w[N][N],cost;</span><br><span class="line"><span class="keyword">int</span> head[N],pre[N],c[N],cnt=<span class="number">0</span>,d[N],inq[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span><span class="keyword">int</span> to,next,cap,flow,cost;&#125; e[M&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> cap,<span class="keyword">int</span> cost)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[cnt].next=head[u];</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">    e[cnt].to=v;</span><br><span class="line">    e[cnt].cost=cost;</span><br><span class="line">    e[cnt++].cap=cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*<span class="number">3</span>+<span class="number">2</span>;i++) d[i]=INF,c[i]=<span class="number">0</span>;</span><br><span class="line">    d[s]=<span class="number">0</span>,c[s]=INF,Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();</span><br><span class="line">        Q.pop(),inq[x]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];~i;i=e[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[i].to,cost=e[i].cost;</span><br><span class="line">            <span class="keyword">if</span> (e[i].flow&lt;e[i].cap&amp;&amp;d[x]+cost&lt;d[to])</span><br><span class="line">            &#123;</span><br><span class="line">                d[to]=d[x]+cost;</span><br><span class="line">                c[to]=min(c[x],e[i].cap-e[i].flow);</span><br><span class="line">                pre[to]=i;</span><br><span class="line">                <span class="keyword">if</span> (!inq[to]) Q.push(to),inq[to]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c[t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> to,<span class="keyword">int</span> flow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x;i!=to;i=e[pre[i]^<span class="number">1</span>].to)</span><br><span class="line">    &#123;</span><br><span class="line">        e[pre[i]].flow+=flow;</span><br><span class="line">        e[pre[i]^<span class="number">1</span>].flow-=flow;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MCMF</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cost=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>,new_flow;</span><br><span class="line">    <span class="keyword">while</span> (new_flow=SPFA(s,t))</span><br><span class="line">    &#123;</span><br><span class="line">        ret+=new_flow;</span><br><span class="line">        cost+=new_flow*d[t];</span><br><span class="line">        update(t,s,new_flow);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) w[i][j]=read();</span><br><span class="line">    st=n*<span class="number">3</span>+<span class="number">1</span>,ed=st+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*<span class="number">3</span>+<span class="number">2</span>;i++) head[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) add(st,i,<span class="number">1</span>,<span class="number">0</span>),add(i,st,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            add(j,i+n,<span class="number">1</span>,w[i][j]);</span><br><span class="line">            add(i+n,j,<span class="number">0</span>,-w[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n+<span class="number">1</span>;i&lt;=n*<span class="number">2</span>;i++) add(i,i+n,<span class="number">1</span>,<span class="number">0</span>),add(i+n,i,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n*<span class="number">2</span>+<span class="number">1</span>;i&lt;=n*<span class="number">3</span>;i++) add(i,ed,INF,<span class="number">0</span>),add(ed,i,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    MCMF(st,ed);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,cost);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*<span class="number">3</span>+<span class="number">2</span>;i++) head[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) add(st,i,<span class="number">1</span>,<span class="number">0</span>),add(i,st,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            add(j,i+n,<span class="number">1</span>,-w[i][j]);</span><br><span class="line">            add(i+n,j,<span class="number">0</span>,w[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n+<span class="number">1</span>;i&lt;=n*<span class="number">2</span>;i++) add(i,i+n,<span class="number">1</span>,<span class="number">0</span>),add(i+n,i,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n*<span class="number">2</span>+<span class="number">1</span>;i&lt;=n*<span class="number">3</span>;i++) add(i,ed,INF,<span class="number">0</span>),add(ed,i,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    MCMF(st,ed);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,-cost);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ u,v,capacity,cost \right \}&lt;/script&gt;为一条从&lt;em&gt;u&lt;/em&gt; 到&lt;em&gt;v&lt;/em&gt; 的，流量为&lt;em&gt;cap&lt;/em&gt; 的，费用为&lt;em&gt;cost&lt;/em&gt; 的弧与反弧&lt;br&gt;源点向每件工作连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ S,x,1,0 \right \}&lt;/script&gt;&lt;br&gt;&lt;del&gt;按惯例人当做两个用&lt;/del&gt;，第&lt;em&gt;k&lt;/em&gt; 个人连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ k,k+n,1,0 \right \}&lt;/script&gt;，&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ k+n,T,INF,0 \right \}&lt;/script&gt;&lt;br&gt;每件工作&lt;em&gt;x&lt;/em&gt; 向第&lt;em&gt;k&lt;/em&gt; 个人连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ x,k,1,c\left [ x \right ]\left [ k \right ] \right \}&lt;/script&gt;&lt;br&gt;跑一遍MCMF，边权取反再跑一遍&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="费用流" scheme="http://yoursite.com/tags/%E8%B4%B9%E7%94%A8%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P1175 表达式的转换</title>
    <link href="http://yoursite.com/2018/07/13/%E6%B4%9B%E8%B0%B7P1175-%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E8%BD%AC%E6%8D%A2/"/>
    <id>http://yoursite.com/2018/07/13/洛谷P1175-表达式的转换/</id>
    <published>2018-07-13T11:46:47.000Z</published>
    <updated>2018-07-13T12:04:15.499Z</updated>
    
    <content type="html"><![CDATA[<p>优化了一下之前的代码<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">200</span>;</span><br><span class="line"><span class="keyword">char</span> str[N],expr[N];</span><br><span class="line"><span class="keyword">int</span> n,len,idx[N],cnt=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">char</span>&gt; opt;</span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt; num;</span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;::iterator it;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    idx[<span class="string">'+'</span>]=idx[<span class="string">'-'</span>]=<span class="number">1</span>;</span><br><span class="line">    idx[<span class="string">'*'</span>]=idx[<span class="string">'/'</span>]=<span class="number">2</span>;</span><br><span class="line">    idx[<span class="string">'^'</span>]=<span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">trans</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'0'</span>&lt;=str[i]&amp;&amp;str[i]&lt;=<span class="string">'9'</span>)</span><br><span class="line">            expr[++cnt]=str[i];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!idx[str[i]])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (str[i]==<span class="string">'('</span>) opt.push(str[i]);</span><br><span class="line">                <span class="keyword">if</span> (str[i]==<span class="string">')'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">while</span> (opt.top()!=<span class="string">'('</span>)</span><br><span class="line">                        expr[++cnt]=opt.top(),opt.pop();</span><br><span class="line">                    opt.pop();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">while</span> (!opt.empty()&amp;&amp;idx[opt.top()]&gt;=idx[str[i]]) </span><br><span class="line">                    expr[++cnt]=opt.top(),opt.pop();</span><br><span class="line">                opt.push(str[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (!opt.empty()) expr[++cnt]=opt.top(),opt.pop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(it=num.begin();it!=num.end();it++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d%c"</span>,*it,k&gt;cnt?<span class="string">'\n'</span>:<span class="string">' '</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=k;i&lt;=cnt;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c%c"</span>,expr[i],i==cnt?<span class="string">'\n'</span>:<span class="string">' '</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pow</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (b&amp;<span class="number">1</span>) ret*=a;</span><br><span class="line">        a*=a,b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,str+<span class="number">1</span>);</span><br><span class="line">    len=<span class="built_in">strlen</span>(str+<span class="number">1</span>);</span><br><span class="line">    trans();</span><br><span class="line">    print(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'0'</span>&lt;=expr[i]&amp;&amp;expr[i]&lt;=<span class="string">'9'</span>)</span><br><span class="line">            num.push_back(expr[i]-<span class="string">'0'</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> b=num.back();num.pop_back();</span><br><span class="line">            <span class="keyword">int</span> a=num.back();num.pop_back();</span><br><span class="line">            <span class="keyword">switch</span> (expr[i])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'+'</span>:num.push_back(a+b);<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'-'</span>:num.push_back(a-b);<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'*'</span>:num.push_back(a*b);<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'/'</span>:num.push_back(a/b);<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:num.push_back(<span class="built_in">pow</span>(a,b));</span><br><span class="line">            &#125;</span><br><span class="line">            print(i+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;优化了一下之前的代码&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="栈" scheme="http://yoursite.com/tags/%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P4015 运输问题</title>
    <link href="http://yoursite.com/2018/07/10/%E6%B4%9B%E8%B0%B7P4015-%E8%BF%90%E8%BE%93%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/07/10/洛谷P4015-运输问题/</id>
    <published>2018-07-10T12:28:44.000Z</published>
    <updated>2018-07-13T10:26:06.779Z</updated>
    
    <content type="html"><![CDATA[<p>记<script type="math/tex">edge\left \{ u,v,capacity,cost \right \}</script>为一条从<em>u</em> 到<em>v</em> 的，流量为<em>cap</em> 的，费用为<em>cost</em> 的弧与反弧<br>对于每个仓库连边<script type="math/tex">edge\left \{ S,x,u\left [ x \right ],0 \right \}</script><br>对于每个零售店连边<script type="math/tex">edge\left \{ x+n,T,v\left [ x \right ],0 \right \}</script><br>仓库<em>i</em> 向零售店<em>j</em> 连边<script type="math/tex">edge\left \{ i,j+n,INF,c\left [ i \right ]\left [ j \right ] \right \}</script><br>跑一边<em>S</em> 到<em>T</em> 的MCMF，cost为最小运输费用<br>边权取负，再跑一边<em>S</em> 到<em>T</em> 的MCMF，-cost为最大运输费用<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M=<span class="number">10000</span>,N=<span class="number">205</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">30</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,st,ed,u[N],v[N],val[N][N];</span><br><span class="line"><span class="keyword">int</span> head[N],cnt=<span class="number">0</span>,pre[N],d[N],c[N],cost=<span class="number">0</span>,inq[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span><span class="keyword">int</span> to,next,flow,cap,cost;&#125; e[M&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> cap,<span class="keyword">int</span> cost)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[cnt].next=head[u];</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">    e[cnt].to=v;</span><br><span class="line">    e[cnt].cost=cost;</span><br><span class="line">    e[cnt++].cap=cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> to,<span class="keyword">int</span> flow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x;i!=to;i=e[pre[i]^<span class="number">1</span>].to)</span><br><span class="line">    &#123;</span><br><span class="line">        e[pre[i]].flow+=flow;</span><br><span class="line">        e[pre[i]^<span class="number">1</span>].flow-=flow;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n+m+<span class="number">2</span>;i++) d[i]=INF,c[i]=<span class="number">0</span>;</span><br><span class="line">    d[s]=<span class="number">0</span>,c[s]=INF,Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();</span><br><span class="line">        Q.pop(),inq[x]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];~i;i=e[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[i].to,cost=e[i].cost;</span><br><span class="line">            <span class="keyword">if</span> (e[i].flow&lt;e[i].cap&amp;&amp;d[x]+cost&lt;d[to])</span><br><span class="line">            &#123;</span><br><span class="line">            d[to]=d[x]+cost;</span><br><span class="line">                pre[to]=i;</span><br><span class="line">                c[to]=min(c[x],e[i].cap-e[i].flow);</span><br><span class="line">                <span class="keyword">if</span> (!inq[to]) Q.push(to),inq[to]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c[t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MCMF</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cost=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>,new_flow;</span><br><span class="line">    <span class="keyword">while</span> (new_flow=SPFA(s,t))</span><br><span class="line">    &#123;</span><br><span class="line">        ret+=new_flow;</span><br><span class="line">        cost+=new_flow*d[t];</span><br><span class="line">        update(t,s,new_flow);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    st=n+m+<span class="number">1</span>,ed=st+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n+m+<span class="number">2</span>;i++) head[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    u[i]=read();</span><br><span class="line">    add(st,i,u[i],<span class="number">0</span>);</span><br><span class="line">    add(i,st,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v[i]=read();</span><br><span class="line">        add(i+n,ed,v[i],<span class="number">0</span>);</span><br><span class="line">        add(ed,i+n,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            val[i][j]=read();</span><br><span class="line">            add(i,j+n,INF,val[i][j]);</span><br><span class="line">            add(j+n,i,<span class="number">0</span>,-val[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    MCMF(st,ed);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,cost);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n+m+<span class="number">2</span>;i++) head[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    add(st,i,u[i],<span class="number">0</span>);</span><br><span class="line">    add(i,st,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        add(i+n,ed,v[i],<span class="number">0</span>);</span><br><span class="line">        add(ed,i+n,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            add(i,j+n,INF,-val[i][j]);</span><br><span class="line">            add(j+n,i,<span class="number">0</span>,val[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    MCMF(st,ed);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,-cost);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ u,v,capacity,cost \right \}&lt;/script&gt;为一条从&lt;em&gt;u&lt;/em&gt; 到&lt;em&gt;v&lt;/em&gt; 的，流量为&lt;em&gt;cap&lt;/em&gt; 的，费用为&lt;em&gt;cost&lt;/em&gt; 的弧与反弧&lt;br&gt;对于每个仓库连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ S,x,u\left [ x \right ],0 \right \}&lt;/script&gt;&lt;br&gt;对于每个零售店连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ x+n,T,v\left [ x \right ],0 \right \}&lt;/script&gt;&lt;br&gt;仓库&lt;em&gt;i&lt;/em&gt; 向零售店&lt;em&gt;j&lt;/em&gt; 连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ i,j+n,INF,c\left [ i \right ]\left [ j \right ] \right \}&lt;/script&gt;&lt;br&gt;跑一边&lt;em&gt;S&lt;/em&gt; 到&lt;em&gt;T&lt;/em&gt; 的MCMF，cost为最小运输费用&lt;br&gt;边权取负，再跑一边&lt;em&gt;S&lt;/em&gt; 到&lt;em&gt;T&lt;/em&gt; 的MCMF，-cost为最大运输费用&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="网络流" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P4016 负载平衡问题</title>
    <link href="http://yoursite.com/2018/07/10/%E6%B4%9B%E8%B0%B7P4016-%E8%B4%9F%E8%BD%BD%E5%B9%B3%E8%A1%A1%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/07/10/洛谷P4016-负载平衡问题/</id>
    <published>2018-07-10T12:27:10.000Z</published>
    <updated>2018-07-13T10:26:31.973Z</updated>
    
    <content type="html"><![CDATA[<p>这题的另一种做法（<a href="https://cwher.github.io/2018/07/10/HAOI2008-糖果传递/#more" target="_blank" rel="noopener">传送门</a>）<br>记<script type="math/tex">edge\left \{ u,v,capacity,cost \right \}</script>为一条从<em>u</em> 到<em>v</em> 的，流量为<em>cap</em> 的，费用为<em>cost</em> 的弧与反弧<br>记<em>ave</em> 为平均值<br>对于每个点x<br>若<script type="math/tex">w\left [ x \right ]-ave>0</script>，则连边<script type="math/tex">edge\left \{ S,x,w\left [ x \right ]-ave,0 \right \}</script><br>若<script type="math/tex">w\left [ x \right ]-ave<0</script>，则连边<script type="math/tex">edge\left \{ x,T,ave-w\left [ x \right ],0 \right \}</script><br>每个点向左向右连边<script type="math/tex">edge\left \{ x,to,INF,1 \right \}</script><br>跑一边MCMF，<em>cost</em> 就是最少搬运量<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int M=5000,N=105,INF=1&lt;&lt;25;</span><br><span class="line">int n,w[N],sum=0,st,ed,head[N],cnt=0,pre[N],d[N],c[N],cost=0,inq[N];</span><br><span class="line">struct edge&#123;int to,next,flow,cap,cost;&#125; e[M&lt;&lt;1];</span><br><span class="line">queue&lt;int&gt; Q;</span><br><span class="line">inline int read()</span><br><span class="line">&#123;</span><br><span class="line">    register int x=0,t=1;</span><br><span class="line">    register char ch=getchar();</span><br><span class="line">    while (ch!=&apos;-&apos;&amp;&amp;(ch&lt;&apos;0&apos;||ch&gt;&apos;9&apos;)) ch=getchar();</span><br><span class="line">    if (ch==&apos;-&apos;) t=-1,ch=getchar();</span><br><span class="line">    while (ch&gt;=&apos;0&apos;&amp;&amp;ch&lt;=&apos;9&apos;) x=x*10+ch-48,ch=getchar();</span><br><span class="line">    return x*t;</span><br><span class="line">&#125;</span><br><span class="line">void add(int u,int v,int cap,int cost)</span><br><span class="line">&#123;</span><br><span class="line">    e[cnt].next=head[u];</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">    e[cnt].to=v;</span><br><span class="line">    e[cnt].cost=cost;</span><br><span class="line">    e[cnt++].cap=cap;</span><br><span class="line">&#125;</span><br><span class="line">void update(int x,int to,int flow)</span><br><span class="line">&#123;</span><br><span class="line">    for(int i=x;i!=to;i=e[pre[i]^1].to)</span><br><span class="line">    &#123;</span><br><span class="line">        e[pre[i]].flow+=flow;</span><br><span class="line">        e[pre[i]^1].flow-=flow;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int SPFA(int s,int t)</span><br><span class="line">&#123;</span><br><span class="line">    for(int i=1;i&lt;=n+2;i++) d[i]=INF,c[i]=0;</span><br><span class="line">    d[s]=0,c[s]=INF,Q.push(s);</span><br><span class="line">    while (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        int x=Q.front();</span><br><span class="line">        Q.pop(),inq[x]=0;</span><br><span class="line">        for(int i=head[x];~i;i=e[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            int to=e[i].to,cost=e[i].cost;</span><br><span class="line">            if (e[i].flow&lt;e[i].cap&amp;&amp;d[x]+cost&lt;d[to])</span><br><span class="line">            &#123;</span><br><span class="line">            d[to]=d[x]+cost;</span><br><span class="line">                pre[to]=i;</span><br><span class="line">                c[to]=min(c[x],e[i].cap-e[i].flow);</span><br><span class="line">                if (!inq[to]) Q.push(to),inq[to]=1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return c[t];</span><br><span class="line">&#125;</span><br><span class="line">int MCMF(int s,int t)</span><br><span class="line">&#123;</span><br><span class="line">    int ret=0,new_flow;</span><br><span class="line">    while (new_flow=SPFA(s,t))</span><br><span class="line">    &#123;</span><br><span class="line">        ret+=new_flow;</span><br><span class="line">        cost+=new_flow*d[t];</span><br><span class="line">        update(t,s,new_flow);</span><br><span class="line">    &#125;</span><br><span class="line">    return ret;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    for(int i=1;i&lt;=n;i++) w[i]=read(),sum+=w[i];</span><br><span class="line">    int ave=sum/n;</span><br><span class="line">    for(int i=1;i&lt;=n;i++) w[i]-=ave;</span><br><span class="line">    st=n+1,ed=n+2;</span><br><span class="line">    for(int i=1;i&lt;=n+2;i++) head[i]=-1;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)</span><br><span class="line">        if (w[i]&gt;0)</span><br><span class="line">        &#123;</span><br><span class="line">            add(st,i,w[i],0);</span><br><span class="line">            add(i,st,0,0);</span><br><span class="line">        &#125;</span><br><span class="line">        else if (w[i]&lt;0)</span><br><span class="line">        &#123;</span><br><span class="line">            add(i,ed,-w[i],0);</span><br><span class="line">            add(ed,i,0,0);</span><br><span class="line">        &#125;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if (i!=1) </span><br><span class="line">        &#123;</span><br><span class="line">            add(i,i-1,INF,1);</span><br><span class="line">            add(i-1,i,0,-1);</span><br><span class="line">        &#125;</span><br><span class="line">        if (i!=n)</span><br><span class="line">        &#123;</span><br><span class="line">            add(i,i+1,INF,1);</span><br><span class="line">            add(i+1,i,0,-1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    add(1,n,INF,1),add(n,1,0,-1);</span><br><span class="line">    add(n,1,INF,1),add(1,n,0,-1);</span><br><span class="line">    int max_flow=MCMF(st,ed);</span><br><span class="line">    printf(&quot;%d&quot;,cost);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这题的另一种做法（&lt;a href=&quot;https://cwher.github.io/2018/07/10/HAOI2008-糖果传递/#more&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;传送门&lt;/a&gt;）&lt;br&gt;记&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ u,v,capacity,cost \right \}&lt;/script&gt;为一条从&lt;em&gt;u&lt;/em&gt; 到&lt;em&gt;v&lt;/em&gt; 的，流量为&lt;em&gt;cap&lt;/em&gt; 的，费用为&lt;em&gt;cost&lt;/em&gt; 的弧与反弧&lt;br&gt;记&lt;em&gt;ave&lt;/em&gt; 为平均值&lt;br&gt;对于每个点x&lt;br&gt;若&lt;script type=&quot;math/tex&quot;&gt;w\left [ x \right ]-ave&gt;0&lt;/script&gt;，则连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ S,x,w\left [ x \right ]-ave,0 \right \}&lt;/script&gt;&lt;br&gt;若&lt;script type=&quot;math/tex&quot;&gt;w\left [ x \right ]-ave&lt;0&lt;/script&gt;，则连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ x,T,ave-w\left [ x \right ],0 \right \}&lt;/script&gt;&lt;br&gt;每个点向左向右连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ x,to,INF,1 \right \}&lt;/script&gt;&lt;br&gt;跑一边MCMF，&lt;em&gt;cost&lt;/em&gt; 就是最少搬运量&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="网络流" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>[HAOI2008]糖果传递</title>
    <link href="http://yoursite.com/2018/07/10/HAOI2008-%E7%B3%96%E6%9E%9C%E4%BC%A0%E9%80%92/"/>
    <id>http://yoursite.com/2018/07/10/HAOI2008-糖果传递/</id>
    <published>2018-07-10T12:22:55.000Z</published>
    <updated>2018-07-13T10:14:39.531Z</updated>
    
    <content type="html"><![CDATA[<p>环形均分纸牌<br>对于非环形均分纸牌，记<script type="math/tex">s\left [ i \right ]</script>为前i项的和，<em>ave</em> 为平均数<br>可得交换数量为</p><script type="math/tex; mode=display">\sum_{i=1}^{n}\left | \left ( i*ave-s\left [ i \right ] \right ) \right |</script><p>记<script type="math/tex">S\left [ i \right ]</script>为前i项，每项减去<em>ave</em> 的和<br>则交换数量为</p><script type="math/tex; mode=display">\sum_{i=1}^{n}\left | \left ( S\left [ i \right ] \right ) \right |</script><p>对于环形均分纸牌，设在第<em>k</em> 个人处断开<br>则<script type="math/tex">S\left [ \right ]</script>为</p><script type="math/tex; mode=display">S\left [ k +1\right ]-S\left [ k \right ],S\left [ k +2\right ]-S\left [ k+1 \right ]...</script><script type="math/tex; mode=display">S\left [ n\right ]-S\left [ k \right ],S\left [ 1 \right ]+S\left [ n\right ]-S\left [ k \right ]...</script><script type="math/tex; mode=display">S\left [ k \right ]+S\left [ n\right ]-S\left [ k \right ]</script><p>根据定义可得<script type="math/tex">S\left [ n \right ]=0</script><br>总交换数量为</p><script type="math/tex; mode=display">\sum_{i=1}^{n}\left | S\left [ i \right ] -S\left [ k \right ]\right |</script><p>取中位数即可<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000050</span>;</span><br><span class="line"><span class="keyword">int</span> n,w[N];</span><br><span class="line">LL sum=<span class="number">0</span>,s[N],ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) w[i]=read(),sum+=w[i];</span><br><span class="line">    <span class="keyword">int</span> ave=sum/n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) w[i]-=ave;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) s[i]=s[i<span class="number">-1</span>]+w[i];</span><br><span class="line">    sort(s+<span class="number">1</span>,s+n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) ans+=<span class="built_in">abs</span>(s[i]-s[(n+<span class="number">1</span>)/<span class="number">2</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;环形均分纸牌&lt;br&gt;对于非环形均分纸牌，记&lt;script type=&quot;math/tex&quot;&gt;s\left [ i \right ]&lt;/script&gt;为前i项的和，&lt;em&gt;ave&lt;/em&gt; 为平均数&lt;br&gt;可得交换数量为&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\sum_{i=1}^{n}\left | \left ( i*ave-s\left [ i \right ] \right ) \right |&lt;/script&gt;&lt;p&gt;记&lt;script type=&quot;math/tex&quot;&gt;S\left [ i \right ]&lt;/script&gt;为前i项，每项减去&lt;em&gt;ave&lt;/em&gt; 的和&lt;br&gt;则交换数量为&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\sum_{i=1}^{n}\left | \left ( S\left [ i \right ] \right ) \right |&lt;/script&gt;&lt;p&gt;对于环形均分纸牌，设在第&lt;em&gt;k&lt;/em&gt; 个人处断开&lt;br&gt;则&lt;script type=&quot;math/tex&quot;&gt;S\left [ \right ]&lt;/script&gt;为&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;S\left [ k +1\right ]-S\left [ k \right ],S\left [ k +2\right ]-S\left [ k+1 \right ]...&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;S\left [ n\right ]-S\left [ k \right ],S\left [ 1 \right ]+S\left [ n\right ]-S\left [ k \right ]...&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;S\left [ k \right ]+S\left [ n\right ]-S\left [ k \right ]&lt;/script&gt;&lt;p&gt;根据定义可得&lt;script type=&quot;math/tex&quot;&gt;S\left [ n \right ]=0&lt;/script&gt;&lt;br&gt;总交换数量为&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\sum_{i=1}^{n}\left | S\left [ i \right ] -S\left [ k \right ]\right |&lt;/script&gt;&lt;p&gt;取中位数即可&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="贪心" scheme="http://yoursite.com/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P1402 酒店之王</title>
    <link href="http://yoursite.com/2018/07/10/%E6%B4%9B%E8%B0%B7P1402-%E9%85%92%E5%BA%97%E4%B9%8B%E7%8E%8B/"/>
    <id>http://yoursite.com/2018/07/10/洛谷P1402-酒店之王/</id>
    <published>2018-07-10T12:12:10.000Z</published>
    <updated>2018-07-13T10:23:27.198Z</updated>
    
    <content type="html"><![CDATA[<p>记<script type="math/tex">edge\left \{ u,v,capacity,cost \right \}</script>为一条从<em>u</em> 到<em>v</em> 的，流量为<em>cap</em> 的，费用为<em>cost</em> 的弧与反弧<br>源点向每个房间连边<script type="math/tex">edge\left \{ S,x,1 \right \}</script><br>每道菜向汇点连边<script type="math/tex">edge\left \{ x+n*2+p,T,1 \right \}</script><br>每个人<del>拆成两个用</del>，<em>x+p</em> 与房间连边，<em>x+p+n</em> 与菜连边<br>当第<em>k</em> 个人喜欢第<em>x</em> 个房间，连边<script type="math/tex">edge\left \{ x,k+p,1 \right \}</script><br>当第<em>k</em> 个人喜欢第<em>x</em> 道菜，连边<script type="math/tex">edge\left \{ k+n+p,x+n*2+p,1 \right \}</script><br>跑一边<em>S</em> 到<em>T</em> 的最大流<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">405</span>,M=<span class="number">50050</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">25</span>;</span><br><span class="line"><span class="keyword">int</span> n,p,q,st,ed,head[N],d[N],cnt=<span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span><span class="keyword">int</span> to,next,flow,cap;&#125; e[M];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> cap)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[cnt].next=head[u];</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">    e[cnt].to=v;</span><br><span class="line">    e[cnt++].cap=cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty()) Q.pop();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*<span class="number">2</span>+p+q+<span class="number">2</span>;i++) d[i]=<span class="number">0</span>;</span><br><span class="line">    d[s]=<span class="number">1</span>,Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty()&amp;&amp;!d[t])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();Q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];~i;i=e[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">            <span class="keyword">if</span> (e[i].flow&lt;e[i].cap&amp;&amp;!d[to])</span><br><span class="line">            &#123;</span><br><span class="line">                d[to]=d[x]+<span class="number">1</span>;</span><br><span class="line">                Q.push(to);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> d[t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> t,<span class="keyword">int</span> flow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!flow||x==t) <span class="keyword">return</span> flow;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>,new_flow;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];~i;i=e[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">        <span class="keyword">if</span> (d[x]+<span class="number">1</span>==d[to])</span><br><span class="line">        &#123;</span><br><span class="line">            new_flow=dfs(to,t,min(flow,e[i].cap-e[i].flow));</span><br><span class="line">            e[i].flow+=new_flow;</span><br><span class="line">            e[i^<span class="number">1</span>].flow-=new_flow;</span><br><span class="line">            ret+=new_flow;</span><br><span class="line">            flow-=new_flow;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Dinic</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (bfs(s,t))</span><br><span class="line">        ret+=dfs(s,t,INF);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),p=read(),q=read();</span><br><span class="line">    st=n*<span class="number">2</span>+p+q+<span class="number">1</span>,ed=st+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2</span>*n+p+q+<span class="number">2</span>;i++) head[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=p;i++) add(st,i,<span class="number">1</span>),add(i,st,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n*<span class="number">2</span>+p+<span class="number">1</span>;i&lt;=n*<span class="number">2</span>+p+q;i++) add(i,ed,<span class="number">1</span>),add(ed,i,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=p+<span class="number">1</span>;i&lt;=p+n;i++) add(i,i+n,<span class="number">1</span>),add(i+n,i,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=p;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x=read();</span><br><span class="line">            <span class="keyword">if</span> (!x) <span class="keyword">continue</span>;</span><br><span class="line">            add(j,p+i,<span class="number">1</span>);</span><br><span class="line">            add(p+i,j,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=q;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x=read();</span><br><span class="line">            <span class="keyword">if</span> (!x) <span class="keyword">continue</span>;</span><br><span class="line">            add(p+n+i,n*<span class="number">2</span>+p+j,<span class="number">1</span>);</span><br><span class="line">            add(n*<span class="number">2</span>+p+j,p+n+i,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,Dinic(st,ed));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ u,v,capacity,cost \right \}&lt;/script&gt;为一条从&lt;em&gt;u&lt;/em&gt; 到&lt;em&gt;v&lt;/em&gt; 的，流量为&lt;em&gt;cap&lt;/em&gt; 的，费用为&lt;em&gt;cost&lt;/em&gt; 的弧与反弧&lt;br&gt;源点向每个房间连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ S,x,1 \right \}&lt;/script&gt;&lt;br&gt;每道菜向汇点连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ x+n*2+p,T,1 \right \}&lt;/script&gt;&lt;br&gt;每个人&lt;del&gt;拆成两个用&lt;/del&gt;，&lt;em&gt;x+p&lt;/em&gt; 与房间连边，&lt;em&gt;x+p+n&lt;/em&gt; 与菜连边&lt;br&gt;当第&lt;em&gt;k&lt;/em&gt; 个人喜欢第&lt;em&gt;x&lt;/em&gt; 个房间，连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ x,k+p,1 \right \}&lt;/script&gt;&lt;br&gt;当第&lt;em&gt;k&lt;/em&gt; 个人喜欢第&lt;em&gt;x&lt;/em&gt; 道菜，连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ k+n+p,x+n*2+p,1 \right \}&lt;/script&gt;&lt;br&gt;跑一边&lt;em&gt;S&lt;/em&gt; 到&lt;em&gt;T&lt;/em&gt; 的最大流&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="网络流" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>[USACO5.4]奶牛的电信Telecowmunication</title>
    <link href="http://yoursite.com/2018/07/10/USACO5-4-%E5%A5%B6%E7%89%9B%E7%9A%84%E7%94%B5%E4%BF%A1Telecowmunication/"/>
    <id>http://yoursite.com/2018/07/10/USACO5-4-奶牛的电信Telecowmunication/</id>
    <published>2018-07-10T11:54:15.000Z</published>
    <updated>2018-07-13T10:20:36.867Z</updated>
    
    <content type="html"><![CDATA[<p>记<script type="math/tex">edge\left \{ u,v,capacity,cost \right \}</script>为一条从<em>u</em> 到<em>v</em> 的，流量为<em>cap</em> 的，费用为<em>cost</em> 的弧与反弧<br>拆点，对于点<em>x</em>，分为<em>x</em> 和<em>x+n</em> 两点，<em>x</em> 负责流入，<em>x+n</em> 负责流出<br>对于每个点连边<script type="math/tex">edge\left \{ x,x+n,1 \right \}</script><br>对于原图每条连接<em>u,v</em> 的边，连边<script type="math/tex">edge\left \{ u+n,v,INF \right \}</script>，<script type="math/tex">edge\left \{ v+n,u,INF \right \}</script><br>跑一边<em>s+n</em> 到<em>t</em> 的最大流<br>最大流最小割<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M=<span class="number">10000</span>,N=<span class="number">500</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">25</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,st,ed,head[N],cnt=<span class="number">0</span>,d[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span><span class="keyword">int</span> to,next,flow,cap;&#125; e[M];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> cap)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[cnt].next=head[u];</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">    e[cnt].to=v;</span><br><span class="line">    e[cnt++].cap=cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty()) Q.pop();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=(n&lt;&lt;<span class="number">1</span>);i++) d[i]=<span class="number">0</span>;</span><br><span class="line">    d[s]=<span class="number">1</span>,Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty()&amp;&amp;!d[t])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();Q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];~i;i=e[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">            <span class="keyword">if</span> (!d[to]&amp;&amp;e[i].flow&lt;e[i].cap)</span><br><span class="line">            &#123;</span><br><span class="line">                d[to]=d[x]+<span class="number">1</span>;</span><br><span class="line">                Q.push(to);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> d[t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> t,<span class="keyword">int</span> flow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!flow||x==t) <span class="keyword">return</span> flow;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>,new_flow;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];~i&amp;&amp;flow;i=e[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">        <span class="keyword">if</span> (d[x]+<span class="number">1</span>==d[to])</span><br><span class="line">        &#123;</span><br><span class="line">            new_flow=dfs(to,t,min(flow,e[i].cap-e[i].flow));</span><br><span class="line">            e[i].flow+=new_flow;</span><br><span class="line">            e[i^<span class="number">1</span>].flow-=new_flow;</span><br><span class="line">            ret+=new_flow;</span><br><span class="line">            flow-=new_flow;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Dinic</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (bfs(s,t))</span><br><span class="line">        ret+=dfs(s,t,INF);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    st=read(),ed=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) head[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        add(i,i+n,<span class="number">1</span>);</span><br><span class="line">        add(i+n,i,<span class="number">0</span>);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">        add(u+n,v,INF);</span><br><span class="line">        add(v,u+n,<span class="number">0</span>);</span><br><span class="line">        add(v+n,u,INF);</span><br><span class="line">        add(u,v+n,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,Dinic(st+n,ed));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ u,v,capacity,cost \right \}&lt;/script&gt;为一条从&lt;em&gt;u&lt;/em&gt; 到&lt;em&gt;v&lt;/em&gt; 的，流量为&lt;em&gt;cap&lt;/em&gt; 的，费用为&lt;em&gt;cost&lt;/em&gt; 的弧与反弧&lt;br&gt;拆点，对于点&lt;em&gt;x&lt;/em&gt;，分为&lt;em&gt;x&lt;/em&gt; 和&lt;em&gt;x+n&lt;/em&gt; 两点，&lt;em&gt;x&lt;/em&gt; 负责流入，&lt;em&gt;x+n&lt;/em&gt; 负责流出&lt;br&gt;对于每个点连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ x,x+n,1 \right \}&lt;/script&gt;&lt;br&gt;对于原图每条连接&lt;em&gt;u,v&lt;/em&gt; 的边，连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ u+n,v,INF \right \}&lt;/script&gt;，&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ v+n,u,INF \right \}&lt;/script&gt;&lt;br&gt;跑一边&lt;em&gt;s+n&lt;/em&gt; 到&lt;em&gt;t&lt;/em&gt; 的最大流&lt;br&gt;最大流最小割&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="网络流" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>最小费用最大流</title>
    <link href="http://yoursite.com/2018/07/10/%E6%9C%80%E5%B0%8F%E8%B4%B9%E7%94%A8%E6%9C%80%E5%A4%A7%E6%B5%81/"/>
    <id>http://yoursite.com/2018/07/10/最小费用最大流/</id>
    <published>2018-07-10T11:51:04.000Z</published>
    <updated>2018-07-10T12:11:05.538Z</updated>
    
    <content type="html"><![CDATA[<p>Min_Cost_Max_Flow<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M=<span class="number">50050</span>,N=<span class="number">5050</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">25</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,st,ed,head[N],cnt=<span class="number">0</span>,pre[N],d[N],c[N],cost=<span class="number">0</span>,inq[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span><span class="keyword">int</span> to,next,flow,cap,cost;&#125; e[M&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> cap,<span class="keyword">int</span> cost)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[cnt].next=head[u];</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">    e[cnt].to=v;</span><br><span class="line">    e[cnt].cost=cost;</span><br><span class="line">    e[cnt++].cap=cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> to,<span class="keyword">int</span> flow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x;i!=to;i=e[pre[i]^<span class="number">1</span>].to)</span><br><span class="line">    &#123;</span><br><span class="line">        e[pre[i]].flow+=flow;</span><br><span class="line">        e[pre[i]^<span class="number">1</span>].flow-=flow;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) d[i]=INF,c[i]=<span class="number">0</span>;</span><br><span class="line">    d[s]=<span class="number">0</span>,c[s]=INF,Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();</span><br><span class="line">        Q.pop(),inq[x]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];~i;i=e[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[i].to,cost=e[i].cost;</span><br><span class="line">            <span class="keyword">if</span> (e[i].flow&lt;e[i].cap&amp;&amp;d[x]+cost&lt;d[to])</span><br><span class="line">            &#123;</span><br><span class="line">            d[to]=d[x]+cost;</span><br><span class="line">                pre[to]=i;</span><br><span class="line">                c[to]=min(c[x],e[i].cap-e[i].flow);</span><br><span class="line">                <span class="keyword">if</span> (!inq[to]) Q.push(to),inq[to]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c[t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MCMF</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>,new_flow;</span><br><span class="line">    <span class="keyword">while</span> (new_flow=SPFA(s,t))</span><br><span class="line">    &#123;</span><br><span class="line">        ret+=new_flow;</span><br><span class="line">        cost+=new_flow*d[t];</span><br><span class="line">        update(t,s,new_flow);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    st=read(),ed=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) head[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">        <span class="keyword">int</span> cap=read(),cost=read();</span><br><span class="line">        add(u,v,cap,cost);</span><br><span class="line">        add(v,u,<span class="number">0</span>,-cost);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> max_flow=MCMF(st,ed);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d"</span>,max_flow,cost);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Min_Cost_Max_Flow&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="网络流" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="费用流" scheme="http://yoursite.com/tags/%E8%B4%B9%E7%94%A8%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>ISAP</title>
    <link href="http://yoursite.com/2018/07/10/ISAP/"/>
    <id>http://yoursite.com/2018/07/10/ISAP/</id>
    <published>2018-07-10T11:48:15.000Z</published>
    <updated>2018-07-10T11:50:35.906Z</updated>
    
    <content type="html"><![CDATA[<p>ISAP+GAP优化+当前弧优化<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M=<span class="number">100050</span>,N=<span class="number">10050</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">25</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,st,ed,head[N],cnt=<span class="number">0</span>,d[N],num[N],pre[N],cur[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span><span class="keyword">int</span> to,next,flow,cap;&#125; e[M&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> cap)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[cnt].next=head[u];</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">    e[cnt].to=v;</span><br><span class="line">    e[cnt++].cap=cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) d[i]=n;</span><br><span class="line">    d[s]=<span class="number">0</span>,Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();Q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];~i;i=e[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">            <span class="keyword">if</span> (d[x]+<span class="number">1</span>&lt;d[to]&amp;&amp;e[i^<span class="number">1</span>].cap)</span><br><span class="line">            &#123;</span><br><span class="line">                d[to]=d[x]+<span class="number">1</span>;</span><br><span class="line">                Q.push(to);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> to)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x;i!=to;i=e[pre[i]^<span class="number">1</span>].to)</span><br><span class="line">        ret=min(ret,e[pre[i]].cap-e[pre[i]].flow);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x;i!=to;i=e[pre[i]^<span class="number">1</span>].to)</span><br><span class="line">    &#123;</span><br><span class="line">        e[pre[i]].flow+=ret;</span><br><span class="line">        e[pre[i]^<span class="number">1</span>].flow-=ret;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ISAP</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    bfs(t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) num[d[i]]++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cur[i]=head[i];</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>,x=s;</span><br><span class="line">    <span class="keyword">while</span> (d[s]&lt;=n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (x==t) ret+=update(t,s),x=s;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=cur[x];~i;i=e[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">            <span class="keyword">if</span> (d[x]==d[to]+<span class="number">1</span>&amp;&amp;e[i].flow&lt;e[i].cap)</span><br><span class="line">            &#123;</span><br><span class="line">                flag=<span class="number">1</span>,cur[x]=i;</span><br><span class="line">                pre[x=to]=i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!flag)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> idx=n<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];~i;i=e[i].next)</span><br><span class="line">                <span class="keyword">if</span> (e[i].flow&lt;e[i].cap)</span><br><span class="line">                    idx=min(idx,d[e[i].to]);</span><br><span class="line">            <span class="keyword">if</span> (--num[d[x]]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            num[d[x]=idx+<span class="number">1</span>]++;</span><br><span class="line">            cur[x]=head[x];</span><br><span class="line">            <span class="keyword">if</span> (x!=s) x=e[pre[x]^<span class="number">1</span>].to;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    st=read(),ed=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) head[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">        add(u,v,read());</span><br><span class="line">        add(v,u,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,ISAP(st,ed));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ISAP+GAP优化+当前弧优化&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="网络流" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>Dinic</title>
    <link href="http://yoursite.com/2018/07/10/Dinic/"/>
    <id>http://yoursite.com/2018/07/10/Dinic/</id>
    <published>2018-07-10T11:45:48.000Z</published>
    <updated>2018-07-13T10:13:56.671Z</updated>
    
    <content type="html"><![CDATA[<p>比EK快很多的Dinic<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M=<span class="number">120050</span>,N=<span class="number">10050</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">25</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,st,ed,head[N],cnt=<span class="number">0</span>,d[N],cur[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span><span class="keyword">int</span> to,next,flow,cap;&#125; e[M&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> cap)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[cnt].next=head[u];</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">    e[cnt].to=v;</span><br><span class="line">    e[cnt++].cap=cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty()) Q.pop();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) d[i]=<span class="number">0</span>;</span><br><span class="line">    d[s]=<span class="number">1</span>,Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty()&amp;&amp;!d[t])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();Q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];~i;i=e[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">            <span class="keyword">if</span> (e[i].flow&lt;e[i].cap&amp;&amp;!d[to])</span><br><span class="line">            &#123;</span><br><span class="line">                d[to]=d[x]+<span class="number">1</span>;</span><br><span class="line">                Q.push(to);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> d[t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> t,<span class="keyword">int</span> flow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!flow||x==t) <span class="keyword">return</span> flow;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>,new_flow;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> &amp;i=cur[x];~i&amp;&amp;flow;i=e[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">        <span class="keyword">if</span> (d[x]+<span class="number">1</span>==d[to])</span><br><span class="line">        &#123;</span><br><span class="line">            new_flow=dfs(to,t,min(flow,e[i].cap-e[i].flow));</span><br><span class="line">            e[i].flow+=new_flow;</span><br><span class="line">            e[i^<span class="number">1</span>].flow-=new_flow;</span><br><span class="line">            ret+=new_flow;</span><br><span class="line">            flow-=new_flow;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Dinic</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (bfs(s,t))</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cur[i]=head[i];</span><br><span class="line">        ret+=dfs(s,t,INF);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    st=read(),ed=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) head[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">        add(u,v,read());</span><br><span class="line">        add(v,u,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,Dinic(st,ed));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;比EK快很多的Dinic&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="网络流" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>EK</title>
    <link href="http://yoursite.com/2018/07/10/EK/"/>
    <id>http://yoursite.com/2018/07/10/EK/</id>
    <published>2018-07-10T11:41:54.000Z</published>
    <updated>2018-07-10T11:45:25.045Z</updated>
    
    <content type="html"><![CDATA[<p><del>动能算法</del><br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M=<span class="number">100050</span>,N=<span class="number">10050</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">25</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,st,ed,head[N],cnt=<span class="number">0</span>,pre[N],d[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span><span class="keyword">int</span> to,next,flow,cap;&#125; e[M&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> cap)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[cnt].next=head[u];</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">    e[cnt].to=v;</span><br><span class="line">    e[cnt++].cap=cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> to,<span class="keyword">int</span> flow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x;i!=to;i=e[pre[i]^<span class="number">1</span>].to)</span><br><span class="line">    &#123;</span><br><span class="line">        e[pre[i]].flow+=flow;</span><br><span class="line">        e[pre[i]^<span class="number">1</span>].flow-=flow;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty()) Q.pop();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) d[i]=<span class="number">0</span>;</span><br><span class="line">    d[s]=INF,Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty()&amp;&amp;!d[t])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();Q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];~i;i=e[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">            <span class="keyword">if</span> (!d[to]&amp;&amp;e[i].flow&lt;e[i].cap)</span><br><span class="line">            &#123;</span><br><span class="line">                pre[to]=i;</span><br><span class="line">                d[to]=min(d[x],e[i].cap-e[i].flow);</span><br><span class="line">                Q.push(to);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> d[t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EK</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>,new_flow;</span><br><span class="line">    <span class="keyword">while</span> (new_flow=bfs(s,t))</span><br><span class="line">    &#123;</span><br><span class="line">        ret+=new_flow;</span><br><span class="line">        update(t,s,new_flow);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    st=read(),ed=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) head[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">        add(u,v,read());</span><br><span class="line">        add(v,u,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,EK(st,ed));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;动能算法&lt;/del&gt;&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="网络流" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>[SDOI2009]Elaxia的路线</title>
    <link href="http://yoursite.com/2018/07/10/SDOI2009-Elaxia%E7%9A%84%E8%B7%AF%E7%BA%BF/"/>
    <id>http://yoursite.com/2018/07/10/SDOI2009-Elaxia的路线/</id>
    <published>2018-07-10T11:31:31.000Z</published>
    <updated>2018-07-13T10:19:36.891Z</updated>
    
    <content type="html"><![CDATA[<p>记<em>E</em> 为Elaxia 的最短路DAG，<em>W</em> 为w 的最短路DAG<br>根据<em>W</em> 重构<em>E</em> 每条边的权值<br>对于连接u，v，权值为val的边<br>当且仅当在<em>W</em> 中<script type="math/tex">d\left [ u \right ]+val= d\left [ v \right ]</script>或<script type="math/tex">d\left [ v \right ]+val= d\left [ u\right ]</script>时，边权为val，否则为0<br>在<em>E</em> 上跑一边最长路得出答案<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">2000</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">25</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,st[<span class="number">2</span>],ed[<span class="number">2</span>],d[<span class="number">2</span>][N],inq[N],used[N],dp[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; f[N],g[N],w[<span class="number">2</span>][N],e[<span class="number">2</span>][N],c[N];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> ((ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&amp;&amp;ch!=<span class="string">'-'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) &#123;t=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) &#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) d[k][i]=INF,inq[i]=<span class="number">0</span>;</span><br><span class="line">    d[k][s]=<span class="number">0</span>,inq[s]=<span class="number">1</span>,Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();</span><br><span class="line">        Q.pop(),inq[x]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;f[x].size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=f[x][i],val=g[x][i];</span><br><span class="line">            <span class="keyword">if</span> (d[k][x]+val==d[k][to]) </span><br><span class="line">                e[k][to].push_back(x),w[k][to].push_back(val);</span><br><span class="line">            <span class="keyword">if</span> (d[k][x]+val&lt;d[k][to])</span><br><span class="line">            &#123;</span><br><span class="line">                e[k][to].clear();</span><br><span class="line">                e[k][to].push_back(x);</span><br><span class="line">                w[k][to].clear();</span><br><span class="line">                w[k][to].push_back(val);</span><br><span class="line">                d[k][to]=d[k][x]+val;</span><br><span class="line">                <span class="keyword">if</span> (!inq[to]) Q.push(to),inq[to]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    g[u].push_back(val);</span><br><span class="line">    f[u].push_back(v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (used[o]) <span class="keyword">return</span>;</span><br><span class="line">    used[o]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (o==x) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[<span class="number">1</span>][o].size();i++) dfs(e[<span class="number">1</span>][o][i],x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (dp[o]!=<span class="number">-1</span>) <span class="keyword">return</span> dp[o];</span><br><span class="line">    <span class="keyword">if</span> (o==x) <span class="keyword">return</span> dp[o]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[<span class="number">0</span>][o].size();i++)</span><br><span class="line">        dp[o]=max(dp[o],calc(e[<span class="number">0</span>][o][i],x)+c[o][i]);</span><br><span class="line">    <span class="keyword">return</span> dp[o];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++) st[i]=read(),ed[i]=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u=read(),v=read(),val=read();</span><br><span class="line">        add(u,v,val),add(v,u,val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++) SPFA(st[i],i);</span><br><span class="line">    dfs(ed[<span class="number">1</span>],st[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span> (!used[i]) d[<span class="number">1</span>][i]=INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">1</span>;u&lt;=n;u++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[<span class="number">0</span>][u].size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> v=e[<span class="number">0</span>][u][i],f=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (d[<span class="number">1</span>][u]+w[<span class="number">0</span>][u][i]==d[<span class="number">1</span>][v]) f++;</span><br><span class="line">            <span class="keyword">if</span> (d[<span class="number">1</span>][v]+w[<span class="number">0</span>][u][i]==d[<span class="number">1</span>][u]) f++;</span><br><span class="line">            c[u].push_back(f*w[<span class="number">0</span>][u][i]);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) dp[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,calc(ed[<span class="number">0</span>],st[<span class="number">0</span>]));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记&lt;em&gt;E&lt;/em&gt; 为Elaxia 的最短路DAG，&lt;em&gt;W&lt;/em&gt; 为w 的最短路DAG&lt;br&gt;根据&lt;em&gt;W&lt;/em&gt; 重构&lt;em&gt;E&lt;/em&gt; 每条边的权值&lt;br&gt;对于连接u，v，权值为val的边&lt;br&gt;当且仅当在&lt;em&gt;W&lt;/em&gt; 中&lt;script type=&quot;math/tex&quot;&gt;d\left [ u \right ]+val= d\left [ v \right ]&lt;/script&gt;或&lt;script type=&quot;math/tex&quot;&gt;d\left [ v \right ]+val= d\left [ u\right ]&lt;/script&gt;时，边权为val，否则为0&lt;br&gt;在&lt;em&gt;E&lt;/em&gt; 上跑一边最长路得出答案&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="最短路" scheme="http://yoursite.com/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P1384 幸运数与排列</title>
    <link href="http://yoursite.com/2018/07/10/%E6%B4%9B%E8%B0%B7P1384-%E5%B9%B8%E8%BF%90%E6%95%B0%E4%B8%8E%E6%8E%92%E5%88%97/"/>
    <id>http://yoursite.com/2018/07/10/洛谷P1384-幸运数与排列/</id>
    <published>2018-07-10T11:23:22.000Z</published>
    <updated>2018-07-10T11:29:48.228Z</updated>
    
    <content type="html"><![CDATA[<p>观察到<script type="math/tex">k\leq 10^{9}< 13!</script><br>对于过大的<em>n</em>，至多只有最后13位会变<br>对于会变得位置求Cantor展开，然后直接计算<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">15</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,w[N],used[N],ans=<span class="number">0</span>,tot;</span><br><span class="line">LL fact[N]=&#123;<span class="number">1</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,num=<span class="number">0</span>;i&lt;=tot;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!used[i]) num++;</span><br><span class="line">        <span class="keyword">if</span> (num==k) <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!x) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(;x;x/=<span class="number">10</span>)</span><br><span class="line">        <span class="keyword">if</span> (x%<span class="number">10</span>!=<span class="number">7</span>&amp;&amp;x%<span class="number">10</span>!=<span class="number">4</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL num=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        num*=i;</span><br><span class="line">        <span class="keyword">if</span> (num&gt;=m) <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"-1"</span>),<span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    check();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;i++) fact[i]=fact[i<span class="number">-1</span>]*i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">    <span class="keyword">if</span> (fact[i]&gt;=m) &#123;tot=i;<span class="keyword">break</span>;&#125;</span><br><span class="line">    m--;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=tot;i&gt;<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        w[tot-i+<span class="number">1</span>]=get(m/fact[i<span class="number">-1</span>]+<span class="number">1</span>)+n-tot;</span><br><span class="line">        used[w[tot-i+<span class="number">1</span>]-n+tot]=<span class="number">1</span>,m%=fact[i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">1</span>;len&lt;N;len++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;len);i++)</span><br><span class="line">        &#123;</span><br><span class="line">            LL num=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=len;j++)</span><br><span class="line">                num=num*<span class="number">10</span>+((i&gt;&gt;(j<span class="number">-1</span>))&amp;<span class="number">1</span>?<span class="number">7</span>:<span class="number">4</span>);</span><br><span class="line">            <span class="keyword">if</span> (num&gt;n) <span class="keyword">continue</span>;</span><br><span class="line">            ans+=work(num+tot&lt;=n?num:w[num-n+tot]);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;观察到&lt;script type=&quot;math/tex&quot;&gt;k\leq 10^{9}&lt; 13!&lt;/script&gt;&lt;br&gt;对于过大的&lt;em&gt;n&lt;/em&gt;，至多只有最后13位会变&lt;br&gt;对于会变得位置求Cantor展开，然后直接计算&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="组合数学" scheme="http://yoursite.com/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>乘法逆元</title>
    <link href="http://yoursite.com/2018/07/10/%E4%B9%98%E6%B3%95%E9%80%86%E5%85%83/"/>
    <id>http://yoursite.com/2018/07/10/乘法逆元/</id>
    <published>2018-07-10T10:41:05.000Z</published>
    <updated>2018-07-13T10:22:19.916Z</updated>
    
    <content type="html"><![CDATA[<p>若<script type="math/tex">ax\equiv 1\left ( mod \ p \right )</script>，则称<em>x，a</em> 互为<em>mod p</em> 意义下的逆元<br><a id="more"></a></p><ol><li><p>扩展欧几里得算法</p><script type="math/tex; mode=display">ax\equiv 1\left ( mod \ p \right )\Leftrightarrow ax+py=1</script><p>若<script type="math/tex">gcd\left ( a,p \right )\neq 1</script>则无解</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exgcd</span><span class="params">(LL a,LL b,LL &amp;x,LL &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b) &#123;x=<span class="number">1</span>,y=<span class="number">0</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line">    exgcd(b,a%b,y,x);</span><br><span class="line">    y-=a/b*x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>费马小定理<br>若<em>p</em> 为质数，则<script type="math/tex">a^{p}\equiv a\left ( mod \ p \right )</script></p><script type="math/tex; mode=display">x\equiv a^{p-2}\left ( mod \ p \right )</script></li><li><p>欧拉定理<br>若<script type="math/tex">gcd\left ( a,p \right )=1</script>，则<script type="math/tex">a^{\varphi\left ( p \right )}\equiv 1\left ( mod \ p \right )</script></p><script type="math/tex; mode=display">x\equiv a^{\varphi\left ( p \right )-1}\left ( mod \ p \right )</script></li><li><p>线性递推<br>设<script type="math/tex">p=k*i+r</script>，其中<script type="math/tex">\left ( r<i,1<i<p \right )</script></p><script type="math/tex; mode=display">k*i+r\equiv 0\left ( mod \ p \right )</script><p>同时乘上<script type="math/tex">i^{-1},r^{-1}</script>，得<script type="math/tex">k*r^{-1}+i^{-1}\equiv 0\left ( mod \ p \right )</script></p><script type="math/tex; mode=display">i^{-1}\equiv k*r^{-1}\left ( mod \ p \right )</script><script type="math/tex; mode=display">i^{-1}\equiv \left \lfloor \frac{p}{i} \right \rfloor*\left [p\mod i  \right ]^{-1}\left ( mod \ p \right )</script></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;若&lt;script type=&quot;math/tex&quot;&gt;ax\equiv 1\left ( mod \ p \right )&lt;/script&gt;，则称&lt;em&gt;x，a&lt;/em&gt; 互为&lt;em&gt;mod p&lt;/em&gt; 意义下的逆元&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="数论" scheme="http://yoursite.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
</feed>
