<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>魍魉的小窝</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-07-22T12:40:11.464Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>CWHer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>POJ2411 Mondriaan&#39;s Dream</title>
    <link href="http://yoursite.com/2018/07/22/POJ2411-Mondriaan-s-Dream/"/>
    <id>http://yoursite.com/2018/07/22/POJ2411-Mondriaan-s-Dream/</id>
    <published>2018-07-22T12:09:20.000Z</published>
    <updated>2018-07-22T12:40:11.464Z</updated>
    
    <content type="html"><![CDATA[<p>经典的状压DP题，解法很多<br>这里讲下状压轮廓线的做法<br><img src="/2018/07/22/POJ2411-Mondriaan-s-Dream/mtrx.jpg" alt="Mtrx"><br><em>s</em> 从大到小保存<br>若<script type="math/tex">s_{5}=0</script>，必须要竖放一个<br>否则可以横放也可以不放<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">18</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line">LL dp[<span class="number">2</span>][<span class="number">1</span>&lt;&lt;N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">get</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'.'</span>&amp;&amp;ch!=<span class="string">'x'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (n=read(),m=read())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (n&lt;m) swap(n,m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;(<span class="number">1</span>&lt;&lt;m);s++) dp[<span class="number">0</span>][s]=<span class="number">0</span>;</span><br><span class="line">        dp[<span class="number">0</span>][(<span class="number">1</span>&lt;&lt;m)<span class="number">-1</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,now=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++,now^=<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;(<span class="number">1</span>&lt;&lt;m);s++) dp[now][s]=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;(<span class="number">1</span>&lt;&lt;m);s++)</span><br><span class="line">                    <span class="keyword">if</span> (!(s&gt;&gt;(m<span class="number">-1</span>))&amp;<span class="number">1</span>)</span><br><span class="line">                        dp[now][(s&lt;&lt;<span class="number">1</span>)|<span class="number">1</span>]+=dp[now^<span class="number">1</span>][s];</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        dp[now][(s&lt;&lt;<span class="number">1</span>)&amp;((<span class="number">1</span>&lt;&lt;m)<span class="number">-1</span>)]+=dp[now^<span class="number">1</span>][s];</span><br><span class="line">                        <span class="keyword">if</span> (j&gt;=<span class="number">2</span>&amp;&amp;!(s&amp;<span class="number">1</span>))</span><br><span class="line">                            dp[now][((s&lt;&lt;<span class="number">1</span>)|<span class="number">3</span>)&amp;((<span class="number">1</span>&lt;&lt;m)<span class="number">-1</span>)]+=dp[now^<span class="number">1</span>][s];</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;    </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,dp[(n*m)&amp;<span class="number">1</span>][(<span class="number">1</span>&lt;&lt;m)<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经典的状压DP题，解法很多&lt;br&gt;这里讲下状压轮廓线的做法&lt;br&gt;&lt;img src=&quot;/2018/07/22/POJ2411-Mondriaan-s-Dream/mtrx.jpg&quot; alt=&quot;Mtrx&quot;&gt;&lt;br&gt;&lt;em&gt;s&lt;/em&gt; 从大到小保存&lt;br&gt;若&lt;script type=&quot;math/tex&quot;&gt;s_{5}=0&lt;/script&gt;，必须要竖放一个&lt;br&gt;否则可以横放也可以不放&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
      <category term="状态压缩" scheme="http://yoursite.com/tags/%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9/"/>
    
  </entry>
  
  <entry>
    <title>[ZJOI2012]灾难</title>
    <link href="http://yoursite.com/2018/07/22/ZJOI2012-%E7%81%BE%E9%9A%BE/"/>
    <id>http://yoursite.com/2018/07/22/ZJOI2012-灾难/</id>
    <published>2018-07-22T11:57:48.000Z</published>
    <updated>2018-07-22T12:04:44.672Z</updated>
    
    <content type="html"><![CDATA[<p><del>支配树的证明我意会了一下，并不会证</del><br>这里稍微理一下DAG中支配树的构造</p><ul><li>拓扑排序</li><li>对于每个点，求其所有入边的LCA，将其作为LCA的儿子</li></ul><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100050</span>,rt=<span class="number">0</span>;;</span><br><span class="line"><span class="keyword">int</span> n,w[N],d[N],<span class="built_in">log</span>[N],dep[N],sz[N],fa[N][<span class="number">25</span>];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[N],f[N],g[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCA</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (dep[u]&lt;dep[v]) swap(u,v);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="built_in">log</span>[dep[u]];i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        <span class="keyword">if</span> (((dep[u]-dep[v])&gt;&gt;i)&amp;<span class="number">1</span>) u=fa[u][i];</span><br><span class="line">    <span class="keyword">if</span> (u==v) <span class="keyword">return</span> u;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="built_in">log</span>[dep[u]];i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        <span class="keyword">if</span> (fa[u][i]!=fa[v][i])</span><br><span class="line">            u=fa[u][i],v=fa[v][i];</span><br><span class="line">    <span class="keyword">return</span> fa[u][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> pre=f[o][<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;f[o].size();i++)</span><br><span class="line">        pre=LCA(pre,f[o][i]);</span><br><span class="line">    g[pre].push_back(o);</span><br><span class="line">    dep[o]=dep[pre]+<span class="number">1</span>;</span><br><span class="line">    fa[o][<span class="number">0</span>]=pre;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="built_in">log</span>[dep[o]];i++)</span><br><span class="line">        fa[o][i]=fa[fa[o][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sz[o]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;g[o].size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=g[o][i];</span><br><span class="line">        dfs(to);</span><br><span class="line">        sz[o]+=sz[to];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">        <span class="built_in">log</span>[i]=<span class="built_in">log</span>[i<span class="number">-1</span>]+(<span class="number">1</span>&lt;&lt;<span class="built_in">log</span>[i<span class="number">-1</span>]==i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> x,i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (x=read())</span><br><span class="line">        &#123;</span><br><span class="line">            e[x].push_back(i);</span><br><span class="line">            f[i].push_back(x);</span><br><span class="line">            d[i]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span> (!d[i]) </span><br><span class="line">        &#123;</span><br><span class="line">            f[i].push_back(rt);</span><br><span class="line">            Q.push(i);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;e[x].size();k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[x][k];</span><br><span class="line">            <span class="keyword">if</span> (--d[to]==<span class="number">0</span>) Q.push(to);</span><br><span class="line">        &#125;</span><br><span class="line">        find(x),Q.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(rt);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sz[i]<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;支配树的证明我意会了一下，并不会证&lt;/del&gt;&lt;br&gt;这里稍微理一下DAG中支配树的构造&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;拓扑排序&lt;/li&gt;
&lt;li&gt;对于每个点，求其所有入边的LCA，将其作为LCA的儿子&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="支配树" scheme="http://yoursite.com/tags/%E6%94%AF%E9%85%8D%E6%A0%91/"/>
    
      <category term="LCA" scheme="http://yoursite.com/tags/LCA/"/>
    
      <category term="倍增" scheme="http://yoursite.com/tags/%E5%80%8D%E5%A2%9E/"/>
    
  </entry>
  
  <entry>
    <title>[NOI2005]聪聪与可可</title>
    <link href="http://yoursite.com/2018/07/22/NOI2005-%E8%81%AA%E8%81%AA%E4%B8%8E%E5%8F%AF%E5%8F%AF/"/>
    <id>http://yoursite.com/2018/07/22/NOI2005-聪聪与可可/</id>
    <published>2018-07-22T11:42:48.000Z</published>
    <updated>2018-07-22T11:56:05.814Z</updated>
    
    <content type="html"><![CDATA[<p>首先预处理出可可在点<em>s</em> ，聪聪在点<em>i</em> 时，聪聪的下一步<br>对每个<em>s</em> 做一遍单源最短路，枚举所有点<em>i</em> 的出边，选择其中距离较短且序号较小的点作为下一步<br>设<script type="math/tex">p\left[u\right]\left[v\right]</script>为聪聪在点<em>u</em> 可可在点<em>v</em> 的期望步数</p><ul><li><em>u=v</em> ，<script type="math/tex">p\left[u\right]\left[v\right]=0</script></li><li>当前回合能抓到，<script type="math/tex">p\left[u\right]\left[v\right]=1</script></li><li>其他情况<br>设<em>x</em> 为聪聪下一步<script type="math/tex; mode=display">p\left[u\right]\left[v\right]=\sum\frac{p\left[x\right]\left[to\right]}{k+1}+\frac{p\left[x\right]\left[v\right]}{k+1}+1</script></li></ul><p>记忆优化搜索即可<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1050</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">30</span>;</span><br><span class="line"><span class="keyword">int</span> st,ed,n,m,nxt[N][N],f[N][N];</span><br><span class="line"><span class="keyword">int</span> inq[N],d[N];</span><br><span class="line"><span class="keyword">double</span> dp[N][N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[N];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) d[i]=INF;</span><br><span class="line">    d[s]=<span class="number">0</span>,inq[s]=<span class="number">1</span>,Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();</span><br><span class="line">        inq[x]=<span class="number">0</span>,Q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[x].size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[x][i];</span><br><span class="line">            <span class="keyword">if</span> (d[x]+<span class="number">1</span>&lt;d[to])</span><br><span class="line">            &#123;</span><br><span class="line">                d[to]=d[x]+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (!inq[to]) Q.push(to),inq[to]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="keyword">if</span> (i!=s)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;e[i].size();j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[i][j];</span><br><span class="line">            <span class="keyword">if</span> (!nxt[i][s]||d[to]&lt;d[nxt[i][s]]) nxt[i][s]=to;</span><br><span class="line">            <span class="keyword">if</span> (d[to]==d[nxt[i][s]]&amp;&amp;to&lt;nxt[i][s]) nxt[i][s]=to;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (f[u][v]) <span class="keyword">return</span> dp[u][v];</span><br><span class="line">    <span class="keyword">if</span> (u==v) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (nxt[u][v]==v) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> x=nxt[nxt[u][v]][v];</span><br><span class="line">    <span class="keyword">if</span> (x==v) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[v].size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[v][i];</span><br><span class="line">        dp[u][v]+=dfs(x,to)/(<span class="number">1</span>+e[v].size());</span><br><span class="line">    &#125;</span><br><span class="line">    dp[u][v]+=dfs(x,v)/(<span class="number">1</span>+e[v].size())+<span class="number">1</span>;</span><br><span class="line">    f[u][v]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> dp[u][v];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    st=read(),ed=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">        e[u].push_back(v);</span><br><span class="line">        e[v].push_back(u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) SPFA(i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.3lf\n"</span>,dfs(st,ed));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先预处理出可可在点&lt;em&gt;s&lt;/em&gt; ，聪聪在点&lt;em&gt;i&lt;/em&gt; 时，聪聪的下一步&lt;br&gt;对每个&lt;em&gt;s&lt;/em&gt; 做一遍单源最短路，枚举所有点&lt;em&gt;i&lt;/em&gt; 的出边，选择其中距离较短且序号较小的点作为下一步&lt;br&gt;设&lt;script type=&quot;math/tex&quot;&gt;p\left[u\right]\left[v\right]&lt;/script&gt;为聪聪在点&lt;em&gt;u&lt;/em&gt; 可可在点&lt;em&gt;v&lt;/em&gt; 的期望步数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;u=v&lt;/em&gt; ，&lt;script type=&quot;math/tex&quot;&gt;p\left[u\right]\left[v\right]=0&lt;/script&gt;&lt;/li&gt;
&lt;li&gt;当前回合能抓到，&lt;script type=&quot;math/tex&quot;&gt;p\left[u\right]\left[v\right]=1&lt;/script&gt;&lt;/li&gt;
&lt;li&gt;其他情况&lt;br&gt;设&lt;em&gt;x&lt;/em&gt; 为聪聪下一步&lt;script type=&quot;math/tex; mode=display&quot;&gt;
p\left[u\right]\left[v\right]=\sum\frac{p\left[x\right]\left[to\right]}{k+1}+\frac{p\left[x\right]\left[v\right]}{k+1}+1&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;记忆优化搜索即可&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="概率" scheme="http://yoursite.com/tags/%E6%A6%82%E7%8E%87/"/>
    
      <category term="图论" scheme="http://yoursite.com/tags/%E5%9B%BE%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>[SCOI2005]最大子矩阵</title>
    <link href="http://yoursite.com/2018/07/22/SCOI2005-%E6%9C%80%E5%A4%A7%E5%AD%90%E7%9F%A9%E9%98%B5/"/>
    <id>http://yoursite.com/2018/07/22/SCOI2005-最大子矩阵/</id>
    <published>2018-07-22T11:26:11.000Z</published>
    <updated>2018-07-22T12:06:30.371Z</updated>
    
    <content type="html"><![CDATA[<p>观察到<em>m</em> 比较小<br>考虑记录每行所有状态</p><ul><li><p><em>m=1</em><br><em>dp</em> 数组记录第<em>i</em> 行，放了<em>j</em> 个，当前行放<em>1</em> 不放<em>0</em></p><script type="math/tex; mode=display">dp\left[i\right]\left[j\right]\left[0\right]=max\left(  dp\left[i-1\right]\left[j\right]\left[0\right] ,dp\left[i-1\right]\left[j\right]\left[1\right]\right)</script><script type="math/tex; mode=display">dp\left[i\right]\left[j\right]\left[1\right]=max\left( dp\left[i-1\right]\left[j\right]\left[1\right] ,dp\left[i-1\right]\left[j-1\right]\left[0\right] ,dp\left[i-1\right]\left[j-1\right]\left[1\right]   \right)+w\left[i\right]\left[1\right]</script></li><li><p><em>m=2</em><br><em>0</em> 表示两格均不放<br><em>1</em> 表示放左边<br><em>2</em> 表示放右边<br><em>3</em> 表示两格均有，且为两格个矩形<br><em>4</em> 表示两格均有，且为一个矩形<br>转移方程因为空间问题<del>（懒）</del>，请看代码</p></li></ul><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">105</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">25</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,k,w[N][N],dp[N][N][<span class="number">5</span>];<span class="comment">// None L R 2 1</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=k;j++)</span><br><span class="line">            dp[i][j][<span class="number">0</span>]=dp[i][j][<span class="number">1</span>]=-INF;</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=k;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            dp[i][j][<span class="number">0</span>]=max(dp[i<span class="number">-1</span>][j][<span class="number">1</span>],dp[i<span class="number">-1</span>][j][<span class="number">0</span>]);</span><br><span class="line">            dp[i][j][<span class="number">1</span>]=dp[i<span class="number">-1</span>][j][<span class="number">1</span>]+w[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (j&gt;<span class="number">0</span>)</span><br><span class="line">                dp[i][j][<span class="number">1</span>]=max(dp[i][j][<span class="number">1</span>],max(dp[i<span class="number">-1</span>][j<span class="number">-1</span>][<span class="number">1</span>],dp[i<span class="number">-1</span>][j<span class="number">-1</span>][<span class="number">0</span>])+w[i][<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=-INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=k;i++)</span><br><span class="line">        ans=max(ans,max(dp[n][i][<span class="number">0</span>],dp[n][i][<span class="number">1</span>]));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=k;j++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;<span class="number">5</span>;s++) dp[i][j][s]=-INF;</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=k;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;<span class="number">5</span>;s++) dp[i][j][<span class="number">0</span>]=max(dp[i][j][<span class="number">0</span>],dp[i<span class="number">-1</span>][j][s]);</span><br><span class="line">            dp[i][j][<span class="number">1</span>]=max(dp[i<span class="number">-1</span>][j][<span class="number">1</span>],dp[i<span class="number">-1</span>][j][<span class="number">3</span>])+w[i][<span class="number">1</span>];</span><br><span class="line">            dp[i][j][<span class="number">2</span>]=max(dp[i<span class="number">-1</span>][j][<span class="number">2</span>],dp[i<span class="number">-1</span>][j][<span class="number">3</span>])+w[i][<span class="number">2</span>];</span><br><span class="line">            dp[i][j][<span class="number">3</span>]=dp[i<span class="number">-1</span>][j][<span class="number">3</span>]+w[i][<span class="number">1</span>]+w[i][<span class="number">2</span>];</span><br><span class="line">            dp[i][j][<span class="number">4</span>]=dp[i<span class="number">-1</span>][j][<span class="number">4</span>]+w[i][<span class="number">1</span>]+w[i][<span class="number">2</span>];</span><br><span class="line">            <span class="keyword">if</span> (j&gt;<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;<span class="number">5</span>;s++) dp[i][j][<span class="number">1</span>]=max(dp[i][j][<span class="number">1</span>],dp[i<span class="number">-1</span>][j<span class="number">-1</span>][s]+w[i][<span class="number">1</span>]);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;<span class="number">5</span>;s++) dp[i][j][<span class="number">2</span>]=max(dp[i][j][<span class="number">2</span>],dp[i<span class="number">-1</span>][j<span class="number">-1</span>][s]+w[i][<span class="number">2</span>]);</span><br><span class="line">                dp[i][j][<span class="number">3</span>]=max(dp[i][j][<span class="number">3</span>],max(dp[i<span class="number">-1</span>][j<span class="number">-1</span>][<span class="number">3</span>],max(dp[i<span class="number">-1</span>][j<span class="number">-1</span>][<span class="number">1</span>],dp[i<span class="number">-1</span>][j<span class="number">-1</span>][<span class="number">2</span>]))+w[i][<span class="number">1</span>]+w[i][<span class="number">2</span>]);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;<span class="number">5</span>;s++) dp[i][j][<span class="number">4</span>]=max(dp[i][j][<span class="number">4</span>],dp[i<span class="number">-1</span>][j<span class="number">-1</span>][s]+w[i][<span class="number">1</span>]+w[i][<span class="number">2</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (j&gt;=<span class="number">2</span>)</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;<span class="number">5</span>;s++) dp[i][j][<span class="number">3</span>]=max(dp[i][j][<span class="number">3</span>],dp[i<span class="number">-1</span>][j<span class="number">-2</span>][s]+w[i][<span class="number">1</span>]+w[i][<span class="number">2</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=-INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=k;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;<span class="number">5</span>;s++) </span><br><span class="line">            ans=max(ans,dp[n][i][s]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read(),k=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++) w[i][j]=read();</span><br><span class="line">    <span class="keyword">if</span> (m==<span class="number">1</span>) calc();<span class="keyword">else</span> solve();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;观察到&lt;em&gt;m&lt;/em&gt; 比较小&lt;br&gt;考虑记录每行所有状态&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;m=1&lt;/em&gt;&lt;br&gt;&lt;em&gt;dp&lt;/em&gt; 数组记录第&lt;em&gt;i&lt;/em&gt; 行，放了&lt;em&gt;j&lt;/em&gt; 个，当前行放&lt;em&gt;1&lt;/em&gt; 不放&lt;em&gt;0&lt;/em&gt;&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left[i\right]\left[j\right]\left[0\right]=max\left(  dp\left[i-1\right]\left[j\right]\left[0\right] ,dp\left[i-1\right]\left[j\right]\left[1\right]\right)&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left[i\right]\left[j\right]\left[1\right]=max\left( dp\left[i-1\right]\left[j\right]\left[1\right] ,dp\left[i-1\right]\left[j-1\right]\left[0\right] ,dp\left[i-1\right]\left[j-1\right]\left[1\right]   \right)+w\left[i\right]\left[1\right]&lt;/script&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;m=2&lt;/em&gt;&lt;br&gt;&lt;em&gt;0&lt;/em&gt; 表示两格均不放&lt;br&gt;&lt;em&gt;1&lt;/em&gt; 表示放左边&lt;br&gt;&lt;em&gt;2&lt;/em&gt; 表示放右边&lt;br&gt;&lt;em&gt;3&lt;/em&gt; 表示两格均有，且为两格个矩形&lt;br&gt;&lt;em&gt;4&lt;/em&gt; 表示两格均有，且为一个矩形&lt;br&gt;转移方程因为空间问题&lt;del&gt;（懒）&lt;/del&gt;，请看代码&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>[CQOI2017]小Q的棋盘</title>
    <link href="http://yoursite.com/2018/07/22/CQOI2017-%E5%B0%8FQ%E7%9A%84%E6%A3%8B%E7%9B%98/"/>
    <id>http://yoursite.com/2018/07/22/CQOI2017-小Q的棋盘/</id>
    <published>2018-07-22T11:05:22.000Z</published>
    <updated>2018-07-22T12:36:11.440Z</updated>
    
    <content type="html"><![CDATA[<p><em>f</em> 记录第<em>i</em> 个点，访问<em>j</em> 条边，且返回<em>i</em> 点，经过的最大格点数量<br><em>g</em> 则记录不返回的</p><script type="math/tex; mode=display">f\left[i\right]\left[j\right]=max\left\{ f\left[i\right]\left[k\right]+f\left[to\right]\left[j-k-2\right]\right\}\left ( to\in i_{son} \right )</script><p>不在该子节点一去不回头</p><script type="math/tex; mode=display">g\left[i\right]\left[j\right]=max\left\{ g\left[i\right]\left[k\right]+f\left[to\right]\left[j-k-2\right]\right\}\left ( to\in i_{son} \right )</script><p>在该子节点一去不回头</p><script type="math/tex; mode=display">g\left[i\right]\left[j\right]=max\left\{ f\left[i\right]\left[k\right]+g\left[to\right]\left[j-k-1\right]\right\}\left ( to\in i_{son} \right )</script><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">200</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,f[N][N],g[N][N];<span class="comment">//f:ret g:no</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    f[o][<span class="number">0</span>]=g[o][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;e[o].size();k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[o][k];</span><br><span class="line">        <span class="keyword">if</span> (to==fa) <span class="keyword">continue</span>; </span><br><span class="line">        dfs(to,o);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=m;i&gt;<span class="number">0</span>;i--)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (i-j<span class="number">-2</span>&gt;=<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    f[o][i]=max(f[o][i],f[to][j]+f[o][i-j<span class="number">-2</span>]);</span><br><span class="line">                    g[o][i]=max(g[o][i],f[to][j]+g[o][i-j<span class="number">-2</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">                g[o][i]=max(g[o][i],g[to][j]+f[o][i-j<span class="number">-1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        f[o][i]=max(f[o][i],f[o][i<span class="number">-1</span>]),</span><br><span class="line">        g[o][i]=max(g[o][i],g[o][i<span class="number">-1</span>]);</span><br><span class="line">    &#125;     </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u,v;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</span><br><span class="line">        e[u].push_back(v);</span><br><span class="line">        e[v].push_back(u);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,g[<span class="number">0</span>][m]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;f&lt;/em&gt; 记录第&lt;em&gt;i&lt;/em&gt; 个点，访问&lt;em&gt;j&lt;/em&gt; 条边，且返回&lt;em&gt;i&lt;/em&gt; 点，经过的最大格点数量&lt;br&gt;&lt;em&gt;g&lt;/em&gt; 则记录不返回的&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
f\left[i\right]\left[j\right]=max\left\{ f\left[i\right]\left[k\right]+f\left[to\right]\left[j-k-2\right]\right\}\left ( to\in i_{son} \right )&lt;/script&gt;&lt;p&gt;不在该子节点一去不回头&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
g\left[i\right]\left[j\right]=max\left\{ g\left[i\right]\left[k\right]+f\left[to\right]\left[j-k-2\right]\right\}\left ( to\in i_{son} \right )&lt;/script&gt;&lt;p&gt;在该子节点一去不回头&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
g\left[i\right]\left[j\right]=max\left\{ f\left[i\right]\left[k\right]+g\left[to\right]\left[j-k-1\right]\right\}\left ( to\in i_{son} \right )&lt;/script&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
      <category term="树形结构" scheme="http://yoursite.com/tags/%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84/"/>
    
      <category term="背包" scheme="http://yoursite.com/tags/%E8%83%8C%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>[HNOI2001]求正整数</title>
    <link href="http://yoursite.com/2018/07/22/HNOI2001-%E6%B1%82%E6%AD%A3%E6%95%B4%E6%95%B0/"/>
    <id>http://yoursite.com/2018/07/22/HNOI2001-求正整数/</id>
    <published>2018-07-22T10:35:54.000Z</published>
    <updated>2018-07-22T10:53:46.020Z</updated>
    
    <content type="html"><![CDATA[<p>设<script type="math/tex">N=\prod p_{i}^{a_{i}}</script><br>则<em>N</em> 的约数个数为<script type="math/tex">\prod \left( a_{i}+1 \right)</script><br>题目中<em>n</em> 最大值为50000，因此<em>N</em> 的质因子不超过16个<br>为了方便保存状态用了<em>dfs</em><br>当然搜索不可能用高精度，于是取对数保存<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">20</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">30</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> p[]=&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">17</span>,<span class="number">19</span>,<span class="number">23</span>,<span class="number">29</span>,<span class="number">31</span>,<span class="number">37</span>,<span class="number">41</span>,<span class="number">43</span>,<span class="number">47</span>,<span class="number">53</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> w[N],c[N],n;</span><br><span class="line"><span class="keyword">double</span> f=INF;</span><br><span class="line"><span class="keyword">namespace</span> NUM</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> LEN=<span class="number">50000</span>,mod=<span class="number">1e8</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Num</span>&#123;</span>LL M[LEN],len;&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(Num &amp;a)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;LEN;i++) a.M[i]=<span class="number">0</span>;</span><br><span class="line">        a.M[a.len=<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">mul</span><span class="params">(Num &amp;a,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> d=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;a.len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            a.M[i]=a.M[i]*x+d;</span><br><span class="line">            d=a.M[i]/mod;</span><br><span class="line">            a.M[i]%=mod;</span><br><span class="line">        &#125;</span><br><span class="line">        a.M[a.len]=a.M[a.len]*x+d;</span><br><span class="line">        <span class="keyword">while</span> (a.M[a.len]&gt;=mod)</span><br><span class="line">        &#123;</span><br><span class="line">            a.M[a.len+<span class="number">1</span>]=a.M[a.len]/mod;</span><br><span class="line">            a.M[a.len++]%=mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(Num a)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld"</span>,a.M[a.len]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=a.len<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--) </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%.8lld"</span>,a.M[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span> x,<span class="keyword">double</span> now)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (k&gt;=<span class="number">16</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (now&gt;f) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (x==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (now&lt;f)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">16</span>;i++) c[i]=w[i];</span><br><span class="line">            f=now;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i*i&lt;=x;i++)</span><br><span class="line">        <span class="keyword">if</span> (x%i==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i*i!=x) </span><br><span class="line">            &#123;</span><br><span class="line">                w[k]=x/i<span class="number">-1</span>;</span><br><span class="line">                dfs(k+<span class="number">1</span>,i,now+(x/i<span class="number">-1</span>)*<span class="built_in">log</span>(p[k]));</span><br><span class="line">                w[k]=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (i!=<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                w[k]=i<span class="number">-1</span>;</span><br><span class="line">                dfs(k+<span class="number">1</span>,x/i,now+(i<span class="number">-1</span>)*<span class="built_in">log</span>(p[k]));</span><br><span class="line">                w[k]=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> NUM;</span><br><span class="line">Num ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    dfs(<span class="number">0</span>,n,<span class="number">0</span>);</span><br><span class="line">    init(ans);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">16</span>;i++)</span><br><span class="line">        <span class="keyword">while</span> (c[i]--) mul(ans,p[i]);</span><br><span class="line">    print(ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;设&lt;script type=&quot;math/tex&quot;&gt;N=\prod p_{i}^{a_{i}}&lt;/script&gt;&lt;br&gt;则&lt;em&gt;N&lt;/em&gt; 的约数个数为&lt;script type=&quot;math/tex&quot;&gt;\prod \left( a_{i}+1 \right)&lt;/script&gt;&lt;br&gt;题目中&lt;em&gt;n&lt;/em&gt; 最大值为50000，因此&lt;em&gt;N&lt;/em&gt; 的质因子不超过16个&lt;br&gt;为了方便保存状态用了&lt;em&gt;dfs&lt;/em&gt;&lt;br&gt;当然搜索不可能用高精度，于是取对数保存&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="数论" scheme="http://yoursite.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="搜索" scheme="http://yoursite.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="高精度" scheme="http://yoursite.com/tags/%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>[ZJOI2007]棋盘制作</title>
    <link href="http://yoursite.com/2018/07/20/ZJOI2007-%E6%A3%8B%E7%9B%98%E5%88%B6%E4%BD%9C/"/>
    <id>http://yoursite.com/2018/07/20/ZJOI2007-棋盘制作/</id>
    <published>2018-07-20T12:16:27.000Z</published>
    <updated>2018-07-22T12:05:20.447Z</updated>
    
    <content type="html"><![CDATA[<p>对于图上所有的棋盘一定属于以下两种类型：</p><ul><li><p>黑格行列奇偶性相同，白格不同</p></li><li><p>白格行列奇偶性相同，黑格不同</p></li></ul><p>分两类讨论<br>每次翻转一部分棋盘的颜色<br>然后问题就变成了求全<em>1</em> 的最大正方形和最大矩形<br>参考<a href="https://cwher.github.io/2018/07/20/洛谷P1736-创意吃鱼法" target="_blank" rel="noopener">洛谷P1736 创意吃鱼法</a>，<a href="https://cwher.github.io/2018/07/20/洛谷P4147-玉蟾宫" target="_blank" rel="noopener">洛谷P4147-玉蟾宫</a><br><a id="more"></a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">2050</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span><span class="keyword">int</span> val,sz;&#125;;</span><br><span class="line"><span class="built_in">stack</span>&lt;node&gt; S;</span><br><span class="line"><span class="keyword">int</span> n,m,s1,s2,L[N][N],U[N][N],dp[N][N],w[N][N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">    <span class="built_in">memset</span>(L,<span class="number">0</span>,<span class="keyword">sizeof</span>(L));</span><br><span class="line">    <span class="built_in">memset</span>(U,<span class="number">0</span>,<span class="keyword">sizeof</span>(U));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            L[i][j]=w[i][j]?L[i][j<span class="number">-1</span>]+<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            U[i][j]=w[i][j]?U[i<span class="number">-1</span>][j]+<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++) <span class="keyword">if</span> (w[i][j])</span><br><span class="line">            s1=max(s1,dp[i][j]=min(dp[i<span class="number">-1</span>][j<span class="number">-1</span>],min(L[i][j<span class="number">-1</span>],U[i<span class="number">-1</span>][j]))+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    calc();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m/<span class="number">2</span>;j++) swap(w[i][j],w[i][m-j+<span class="number">1</span>]);</span><br><span class="line">    calc();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> sz=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (!S.empty()&amp;&amp;U[i][j]&lt;=S.top().val)</span><br><span class="line">            &#123;</span><br><span class="line">                sz+=S.top().sz;</span><br><span class="line">                s2=max(s2,sz*S.top().val);</span><br><span class="line">                S.pop();</span><br><span class="line">            &#125;</span><br><span class="line">            S.push((node)&#123;U[i][j],sz+<span class="number">1</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> sz=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (!S.empty())</span><br><span class="line">        &#123;</span><br><span class="line">            sz+=S.top().sz;</span><br><span class="line">            s2=max(s2,sz*S.top().val);</span><br><span class="line">            S.pop();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++) w[i][j]=((i+j)&amp;<span class="number">1</span>)^read();</span><br><span class="line">    solve();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++) w[i][j]^=<span class="number">1</span>;</span><br><span class="line">    solve();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n%d"</span>,s1*s1,s2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于图上所有的棋盘一定属于以下两种类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;黑格行列奇偶性相同，白格不同&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;白格行列奇偶性相同，黑格不同&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;分两类讨论&lt;br&gt;每次翻转一部分棋盘的颜色&lt;br&gt;然后问题就变成了求全&lt;em&gt;1&lt;/em&gt; 的最大正方形和最大矩形&lt;br&gt;参考&lt;a href=&quot;https://cwher.github.io/2018/07/20/洛谷P1736-创意吃鱼法&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;洛谷P1736 创意吃鱼法&lt;/a&gt;，&lt;a href=&quot;https://cwher.github.io/2018/07/20/洛谷P4147-玉蟾宫&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;洛谷P4147-玉蟾宫&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
      <category term="栈" scheme="http://yoursite.com/tags/%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P1736 创意吃鱼法</title>
    <link href="http://yoursite.com/2018/07/20/%E6%B4%9B%E8%B0%B7P1736-%E5%88%9B%E6%84%8F%E5%90%83%E9%B1%BC%E6%B3%95/"/>
    <id>http://yoursite.com/2018/07/20/洛谷P1736-创意吃鱼法/</id>
    <published>2018-07-20T12:09:03.000Z</published>
    <updated>2018-07-22T12:07:41.614Z</updated>
    
    <content type="html"><![CDATA[<p>对于每个元素<br>预处理出其左端和上方最近的<em>1</em> 的位置，分别记为<em>L</em> 和<em>U</em> </p><script type="math/tex; mode=display">dp\left [i  \right ]\left [j \right ]=max\left (dp\left [i-1 \right ]\left [ j-1 \right ],L\left [i \right ]\left [ j-1 \right ],U\left [i-1 \right ]\left [j \right ] \right )+1 \left ( w\left [i \right ]\left [j \right ]=1\right)</script><p>水平翻转矩阵后再求一次<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">2505</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,ans=<span class="number">0</span>,dp[N][N],L[N][N],U[N][N],w[N][N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++) w[i][j]=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            L[i][j]=w[i][j]?<span class="number">0</span>:L[i][j<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            U[i][j]=w[i][j]?<span class="number">0</span>:U[i<span class="number">-1</span>][j]+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++) <span class="keyword">if</span> (w[i][j])</span><br><span class="line">            ans=max(ans,dp[i][j]=min(dp[i<span class="number">-1</span>][j<span class="number">-1</span>],min(L[i][j<span class="number">-1</span>],U[i<span class="number">-1</span>][j]))+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">    <span class="built_in">memset</span>(L,<span class="number">0</span>,<span class="keyword">sizeof</span>(L));</span><br><span class="line">    <span class="built_in">memset</span>(U,<span class="number">0</span>,<span class="keyword">sizeof</span>(U));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m/<span class="number">2</span>;j++) swap(w[i][j],w[i][m-j+<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            L[i][j]=w[i][j]?<span class="number">0</span>:L[i][j<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            U[i][j]=w[i][j]?<span class="number">0</span>:U[i<span class="number">-1</span>][j]+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++) <span class="keyword">if</span> (w[i][j])</span><br><span class="line">            ans=max(ans,dp[i][j]=min(dp[i<span class="number">-1</span>][j<span class="number">-1</span>],min(L[i][j<span class="number">-1</span>],U[i<span class="number">-1</span>][j]))+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于每个元素&lt;br&gt;预处理出其左端和上方最近的&lt;em&gt;1&lt;/em&gt; 的位置，分别记为&lt;em&gt;L&lt;/em&gt; 和&lt;em&gt;U&lt;/em&gt; &lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [i  \right ]\left [j \right ]=max\left (dp\left [i-1 \right ]\left [ j-1 \right ],L\left [i \right ]\left [ j-1 \right ],U\left [i-1 \right ]\left [j \right ] \right )+1 \left ( w\left [i \right ]\left [j \right ]=1\right)&lt;/script&gt;&lt;p&gt;水平翻转矩阵后再求一次&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P4147 玉蟾宫</title>
    <link href="http://yoursite.com/2018/07/20/%E6%B4%9B%E8%B0%B7P4147-%E7%8E%89%E8%9F%BE%E5%AE%AB/"/>
    <id>http://yoursite.com/2018/07/20/洛谷P4147-玉蟾宫/</id>
    <published>2018-07-20T11:58:34.000Z</published>
    <updated>2018-07-20T12:05:03.857Z</updated>
    
    <content type="html"><![CDATA[<p>首先预处理出<em>f</em> 数组为当前位置向左延伸的最大长度<br>然后枚举每一列做一遍<a href="https://cwher.github.io/2018/07/20/%E6%9C%80%E5%A4%A7%E5%AD%90%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF/" target="_blank" rel="noopener">最大子矩形面积</a><br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1050</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span><span class="keyword">int</span> val,sz;&#125;;</span><br><span class="line"><span class="built_in">stack</span>&lt;node&gt; S;</span><br><span class="line"><span class="keyword">int</span> f[N][N],w[N][N],n,m,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> ((ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&amp;&amp;ch!=<span class="string">'-'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) &#123;t=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) &#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">get</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'F'</span>&amp;&amp;ch!=<span class="string">'R'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="keyword">if</span> (get()==<span class="string">'F'</span>) f[i][j]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            w[i][j]=f[i][j]?w[i][j<span class="number">-1</span>]+<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=m;k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> sz=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (!S.empty()&amp;&amp;w[i][k]&lt;=S.top().val)</span><br><span class="line">            &#123;</span><br><span class="line">                sz+=S.top().sz;</span><br><span class="line">                ans=max(ans,S.top().val*sz);</span><br><span class="line">                S.pop();</span><br><span class="line">            &#125;</span><br><span class="line">            S.push((node)&#123;w[i][k],sz+<span class="number">1</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> sz=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (!S.empty())</span><br><span class="line">        &#123;</span><br><span class="line">            sz+=S.top().sz;</span><br><span class="line">            ans=max(ans,S.top().val*sz);</span><br><span class="line">            S.pop();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;     </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans*<span class="number">3</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先预处理出&lt;em&gt;f&lt;/em&gt; 数组为当前位置向左延伸的最大长度&lt;br&gt;然后枚举每一列做一遍&lt;a href=&quot;https://cwher.github.io/2018/07/20/%E6%9C%80%E5%A4%A7%E5%AD%90%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;最大子矩形面积&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="栈" scheme="http://yoursite.com/tags/%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>最大子矩形面积</title>
    <link href="http://yoursite.com/2018/07/20/%E6%9C%80%E5%A4%A7%E5%AD%90%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF/"/>
    <id>http://yoursite.com/2018/07/20/最大子矩形面积/</id>
    <published>2018-07-20T11:23:41.000Z</published>
    <updated>2018-07-20T12:04:17.871Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2018/07/20/最大子矩形面积/matrix.jpg" alt="题目"></p><p>经典题目<br>这里简要的总结一下它的四种做法<br><del>最大子矩阵有四种做法，你知道吗</del></p><ul><li>单调栈<br> 维护一个单调递增的栈<br> 栈中保存一个二元组<script type="math/tex">\left ( height,sz \right )</script>，分别为高度和能覆盖到的宽度<br> 一个元素只会在超过它能覆盖的最大宽度后退栈<br> 此时更新答案即可</li></ul><ul><li>笛卡尔树<br> 笛卡尔树的定义这里就不赘述了<br> 如果有一棵以高度为权值构造好的笛卡尔树<br> 只需一遍<em>dfs</em> 即可得出答案<br> 用单调栈可在<script type="math/tex">O\left ( N\right )</script>时间内建树<br> 维护一个单调递增的栈<br> 对于新加入的元素<em>x</em> ，将最后一个退栈元素作为其左儿子，将其作为栈中<em>top</em> 元素的右儿子</li></ul><ul><li>并查集<br> 一种看似暴力的做法<br> 实际上复杂度<del>应该</del>是<script type="math/tex">O\left ( N\right )</script><br> 具体看代码实现<br> 其中<em>L</em> 为当前位置向左能延伸的最大位置，<em>R</em> 为向右的</li></ul><ul><li>倍增<br> 对于一个区间<br> 找到其最小值所在位置<br> 可将其分为左右两个区间递归处理，且互不影响<br> 倍增数组维护最小值和最小值位置即可<br> <del>倍增代码就不放了</del></li></ul><p>代码依次给出<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span><span class="keyword">int</span> val,sz;&#125;;</span><br><span class="line"><span class="keyword">int</span> n,x;</span><br><span class="line">LL ans=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">stack</span>&lt;node&gt; S;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line"><span class="keyword">int</span> sz=<span class="number">0</span>;</span><br><span class="line">ans=max(ans,(LL)x*sz);</span><br><span class="line"><span class="keyword">while</span> (!S.empty()&amp;&amp;x&lt;=S.top().val) </span><br><span class="line">&#123;</span><br><span class="line">sz+=S.top().sz;</span><br><span class="line">ans=max(ans,(LL)S.top().val*sz);</span><br><span class="line">S.pop();</span><br><span class="line">&#125;</span><br><span class="line">S.push((node)&#123;x,sz+<span class="number">1</span>&#125;);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">int</span> sz=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (!S.empty())</span><br><span class="line">&#123;</span><br><span class="line">sz+=S.top().sz;</span><br><span class="line">ans=max(ans,(LL)S.top().val*sz);</span><br><span class="line">S.pop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100050</span>;</span><br><span class="line"><span class="keyword">int</span> n,rt,L[N],R[N],sz[N],val[N];</span><br><span class="line">LL ans=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt; S;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;val[i]);</span><br><span class="line"><span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (!S.empty()&amp;&amp;val[i]&lt;val[S.back()]) x=S.back(),S.pop_back();</span><br><span class="line"><span class="keyword">if</span> (x) L[i]=x;</span><br><span class="line"><span class="keyword">if</span> (!S.empty()) R[S.back()]=i;</span><br><span class="line">S.push_back(i); </span><br><span class="line">&#125;</span><br><span class="line">rt=S.front();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!o) <span class="keyword">return</span>;</span><br><span class="line">sz[o]=<span class="number">1</span>;</span><br><span class="line">dfs(L[o]),dfs(R[o]);</span><br><span class="line">sz[o]+=sz[L[o]]+sz[R[o]];</span><br><span class="line">ans=max(ans,(LL)val[o]*sz[o]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">build();</span><br><span class="line">dfs(rt);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100050</span>;</span><br><span class="line"><span class="keyword">int</span> L[N],R[N],val[N],n;</span><br><span class="line">LL ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;val[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) L[i]=i,R[i]=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">while</span> (L[i]<span class="number">-1</span>&gt;=<span class="number">1</span>&amp;&amp;val[L[i]<span class="number">-1</span>]&gt;=val[i]) L[i]=L[L[i]<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;<span class="number">0</span>;i--)</span><br><span class="line">        <span class="keyword">while</span> (R[i]+<span class="number">1</span>&lt;=n&amp;&amp;val[R[i]+<span class="number">1</span>]&gt;=val[i]) R[i]=R[R[i]+<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        ans=max(ans,(LL)val[i]*(R[i]-L[i]+<span class="number">1</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2018/07/20/最大子矩形面积/matrix.jpg&quot; alt=&quot;题目&quot;&gt;&lt;/p&gt;
&lt;p&gt;经典题目&lt;br&gt;这里简要的总结一下它的四种做法&lt;br&gt;&lt;del&gt;最大子矩阵有四种做法，你知道吗&lt;/del&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单调栈&lt;br&gt; 维护一个单调递增的栈&lt;br&gt; 栈中保存一个二元组&lt;script type=&quot;math/tex&quot;&gt;\left ( height,sz \right )&lt;/script&gt;，分别为高度和能覆盖到的宽度&lt;br&gt; 一个元素只会在超过它能覆盖的最大宽度后退栈&lt;br&gt; 此时更新答案即可&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;笛卡尔树&lt;br&gt; 笛卡尔树的定义这里就不赘述了&lt;br&gt; 如果有一棵以高度为权值构造好的笛卡尔树&lt;br&gt; 只需一遍&lt;em&gt;dfs&lt;/em&gt; 即可得出答案&lt;br&gt; 用单调栈可在&lt;script type=&quot;math/tex&quot;&gt;O\left ( N\right )&lt;/script&gt;时间内建树&lt;br&gt; 维护一个单调递增的栈&lt;br&gt; 对于新加入的元素&lt;em&gt;x&lt;/em&gt; ，将最后一个退栈元素作为其左儿子，将其作为栈中&lt;em&gt;top&lt;/em&gt; 元素的右儿子&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;并查集&lt;br&gt; 一种看似暴力的做法&lt;br&gt; 实际上复杂度&lt;del&gt;应该&lt;/del&gt;是&lt;script type=&quot;math/tex&quot;&gt;O\left ( N\right )&lt;/script&gt;&lt;br&gt; 具体看代码实现&lt;br&gt; 其中&lt;em&gt;L&lt;/em&gt; 为当前位置向左能延伸的最大位置，&lt;em&gt;R&lt;/em&gt; 为向右的&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;倍增&lt;br&gt; 对于一个区间&lt;br&gt; 找到其最小值所在位置&lt;br&gt; 可将其分为左右两个区间递归处理，且互不影响&lt;br&gt; 倍增数组维护最小值和最小值位置即可&lt;br&gt; &lt;del&gt;倍增代码就不放了&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码依次给出&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="并查集" scheme="http://yoursite.com/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="倍增" scheme="http://yoursite.com/tags/%E5%80%8D%E5%A2%9E/"/>
    
      <category term="栈" scheme="http://yoursite.com/tags/%E6%A0%88/"/>
    
      <category term="笛卡尔树" scheme="http://yoursite.com/tags/%E7%AC%9B%E5%8D%A1%E5%B0%94%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P1357 花园</title>
    <link href="http://yoursite.com/2018/07/20/%E6%B4%9B%E8%B0%B7P1357-%E8%8A%B1%E5%9B%AD/"/>
    <id>http://yoursite.com/2018/07/20/洛谷P1357-花园/</id>
    <published>2018-07-20T10:58:17.000Z</published>
    <updated>2018-07-22T12:07:52.282Z</updated>
    
    <content type="html"><![CDATA[<p>观察到<em>m</em> 比较小，考虑状压<em>m</em><br>对于当前状态<em>s</em><br>当<em>s‘</em> 去掉末尾位和<em>s</em> 去掉开头位相等，且<em>s‘</em> 中个数&lt;=<em>k</em></p><script type="math/tex; mode=display">dp\left [i  \right ]\left [s’ \right ]+=dp\left [i-1 \right ]\left [ s \right ]</script><p>然而问题没有这么简单，花园是个环<br>设开头<em>m</em> 个状态为<em>s</em> ，则 <script type="math/tex">dp\left [n+m  \right ]\left [s\right ]</script>为以<em>s</em> 开头的答案<br>因此枚举开头所有状态即可，这样就有80分了</p><p>对于最后20分<br>首先观察转移<br>设当<em>s</em> 可以转移到<em>s’</em> 时，<script type="math/tex">f\left [s  \right ]\left [s’ \right ]=1</script></p><script type="math/tex; mode=display">dp\left [i  \right ]\left [s’ \right ]=\sum dp\left [i-1 \right ]\left [ s \right ]* f\left [s \right ]\left [ s' \right ]</script><p>与矩阵乘法一致<br>因此</p><script type="math/tex; mode=display">dp\left [ n+m \right ]\left [ s \right ]=dp\left [ m \right ]\left [ s \right ]*F^{n}</script><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">8</span>,mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line">LL n,m,k,r,num[<span class="number">1</span>&lt;&lt;N];</span><br><span class="line"><span class="keyword">namespace</span> Matrix</span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">mtrx</span>&#123;</span>LL w[<span class="number">1</span>&lt;&lt;N][<span class="number">1</span>&lt;&lt;N];&#125; f;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">fill</span><span class="params">(mtrx &amp;M,LL x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;m);i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;(<span class="number">1</span>&lt;&lt;m);j++) M.w[i][j]=x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(mtrx &amp;M)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        fill(M,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;m);i++) M.w[i][i]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">cpy</span><span class="params">(mtrx &amp;M,mtrx &amp;C)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;m);i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;(<span class="number">1</span>&lt;&lt;m);j++) M.w[i][j]=C.w[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">mul</span><span class="params">(mtrx &amp;M,mtrx C,<span class="keyword">int</span> mod)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        mtrx ret;</span><br><span class="line">        fill(ret,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;m);i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;(<span class="number">1</span>&lt;&lt;m);j++)</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;(<span class="number">1</span>&lt;&lt;m);k++)</span><br><span class="line">                    ret.w[i][j]=(ret.w[i][j]+M.w[i][k]*C.w[k][j])%mod;</span><br><span class="line">        cpy(M,ret);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pow</span><span class="params">(mtrx &amp;M,LL x,<span class="keyword">int</span> mod)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        mtrx ret;</span><br><span class="line">        init(ret);</span><br><span class="line">        <span class="keyword">for</span>(;x;x&gt;&gt;=<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (x&amp;<span class="number">1</span>) mul(ret,M,mod);</span><br><span class="line">            mul(M,M,mod);</span><br><span class="line">        &#125;</span><br><span class="line">        cpy(M,ret);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Matrix;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fill(f,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;m);i++) <span class="keyword">if</span> (num[i]&lt;=k)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;(<span class="number">1</span>&lt;&lt;m);j++) <span class="keyword">if</span> (num[j]&lt;=k)</span><br><span class="line">            <span class="keyword">if</span> ((i&amp;((<span class="number">1</span>&lt;&lt;(m<span class="number">-1</span>))<span class="number">-1</span>))==(j&gt;&gt;<span class="number">1</span>)) f.w[i][j]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld"</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;(<span class="number">1</span>&lt;&lt;m);s++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">            num[s]+=(s&gt;&gt;(i<span class="number">-1</span>))&amp;<span class="number">1</span>;</span><br><span class="line">    init();</span><br><span class="line">    <span class="built_in">pow</span>(f,n,mod);</span><br><span class="line">    LL ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;(<span class="number">1</span>&lt;&lt;m);s++) </span><br><span class="line">        <span class="keyword">if</span> (num[s]&lt;=k) </span><br><span class="line">            ans=(ans+f.w[s][s])%mod;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;观察到&lt;em&gt;m&lt;/em&gt; 比较小，考虑状压&lt;em&gt;m&lt;/em&gt;&lt;br&gt;对于当前状态&lt;em&gt;s&lt;/em&gt;&lt;br&gt;当&lt;em&gt;s‘&lt;/em&gt; 去掉末尾位和&lt;em&gt;s&lt;/em&gt; 去掉开头位相等，且&lt;em&gt;s‘&lt;/em&gt; 中个数&amp;lt;=&lt;em&gt;k&lt;/em&gt;&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [i  \right ]\left [s’ \right ]+=dp\left [i-1 \right ]\left [ s \right ]&lt;/script&gt;&lt;p&gt;然而问题没有这么简单，花园是个环&lt;br&gt;设开头&lt;em&gt;m&lt;/em&gt; 个状态为&lt;em&gt;s&lt;/em&gt; ，则 &lt;script type=&quot;math/tex&quot;&gt;dp\left [n+m  \right ]\left [s\right ]&lt;/script&gt;为以&lt;em&gt;s&lt;/em&gt; 开头的答案&lt;br&gt;因此枚举开头所有状态即可，这样就有80分了&lt;/p&gt;
&lt;p&gt;对于最后20分&lt;br&gt;首先观察转移&lt;br&gt;设当&lt;em&gt;s&lt;/em&gt; 可以转移到&lt;em&gt;s’&lt;/em&gt; 时，&lt;script type=&quot;math/tex&quot;&gt;f\left [s  \right ]\left [s’ \right ]=1&lt;/script&gt;&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [i  \right ]\left [s’ \right ]=\sum dp\left [i-1 \right ]\left [ s \right ]* f\left [s \right ]\left [ s&#39; \right ]&lt;/script&gt;&lt;p&gt;与矩阵乘法一致&lt;br&gt;因此&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [ n+m \right ]\left [ s \right ]=dp\left [ m \right ]\left [ s \right ]*F^{n}&lt;/script&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
      <category term="状态压缩" scheme="http://yoursite.com/tags/%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9/"/>
    
      <category term="矩阵加速" scheme="http://yoursite.com/tags/%E7%9F%A9%E9%98%B5%E5%8A%A0%E9%80%9F/"/>
    
  </entry>
  
  <entry>
    <title>[HNOI2012]矿场搭建</title>
    <link href="http://yoursite.com/2018/07/20/HNOI2012-%E7%9F%BF%E5%9C%BA%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2018/07/20/HNOI2012-矿场搭建/</id>
    <published>2018-07-20T10:44:45.000Z</published>
    <updated>2018-07-20T10:57:36.159Z</updated>
    
    <content type="html"><![CDATA[<p>挺有难度的一道题，<del>参考了一下大佬的题解</del></p><p>对于一个联通块</p><ol><li>若无割点，则它与外界完全隔离，需要建两个出口以防一个出口被炸</li><li>若只有一个割点，还需要在非割点节点再建一个出口以防割点被炸</li><li>若有两个或以上割点，就不用担心了<a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">505</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,T,dfn[N],low[N],num;</span><br><span class="line"><span class="keyword">int</span> cut[N],idx[N],cnt,sz,col;</span><br><span class="line">LL ans,cost;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> son=<span class="number">0</span>;</span><br><span class="line">    dfn[o]=low[o]=++num;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[o].size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[o][i];</span><br><span class="line">        <span class="keyword">if</span> (!dfn[to])</span><br><span class="line">        &#123;</span><br><span class="line">            tarjan(to,fa);</span><br><span class="line">            low[o]=min(low[o],low[to]);</span><br><span class="line">            <span class="keyword">if</span> (low[to]&gt;=dfn[o]&amp;&amp;o!=fa) cut[o]=<span class="number">1</span>;</span><br><span class="line">            son++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> low[o]=min(low[o],dfn[to]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (o==fa&amp;&amp;son&gt;=<span class="number">2</span>) cut[o]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    idx[o]=col,sz++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[o].size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[o][i];</span><br><span class="line">        <span class="keyword">if</span> (idx[to]!=col&amp;&amp;cut[to]) idx[to]=col,cnt++;</span><br><span class="line">        <span class="keyword">if</span> (!idx[to]&amp;&amp;!cut[to]) dfs(to);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (m=read())</span><br><span class="line">    &#123;</span><br><span class="line">        ans=<span class="number">1</span>,cost=num=col=n=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;i++) e[i].clear();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;i++) dfn[i]=low[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;i++) cut[i]=idx[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">            e[u].push_back(v);</span><br><span class="line">            e[v].push_back(u);</span><br><span class="line">            n=max(n,max(u,v));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">if</span> (!dfn[i]) tarjan(i,i);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">if</span> (!idx[i]&amp;&amp;!cut[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cnt=sz=<span class="number">0</span>;</span><br><span class="line">                col++,dfs(i);</span><br><span class="line">                <span class="keyword">if</span> (cnt==<span class="number">0</span>) cost+=<span class="number">2</span>,ans*=sz*(sz<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span> (cnt==<span class="number">1</span>) cost+=<span class="number">1</span>,ans*=sz;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: %lld %lld\n"</span>,++T,cost,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;挺有难度的一道题，&lt;del&gt;参考了一下大佬的题解&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;对于一个联通块&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;若无割点，则它与外界完全隔离，需要建两个出口以防一个出口被炸&lt;/li&gt;
&lt;li&gt;若只有一个割点，还需要在非割点节点再建一个出口以防割点被炸&lt;/li&gt;
&lt;li&gt;若有两个或以上割点，就不用担心了&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="割点" scheme="http://yoursite.com/tags/%E5%89%B2%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>[AHOI2009]中国象棋</title>
    <link href="http://yoursite.com/2018/07/19/AHOI2009-%E4%B8%AD%E5%9B%BD%E8%B1%A1%E6%A3%8B/"/>
    <id>http://yoursite.com/2018/07/19/AHOI2009-中国象棋/</id>
    <published>2018-07-19T12:24:15.000Z</published>
    <updated>2018-07-22T12:07:22.800Z</updated>
    
    <content type="html"><![CDATA[<p>每行每列最多放两个<br><em>dp</em> 数组记录第<em>i</em> 行，有<em>j</em> 列放了1个，<em>k</em> 列放了2个的方案数<br>不放</p><script type="math/tex; mode=display">dp\left [i  \right ]\left [ j \right ]\left [k  \right ]+=dp\left [i-1 \right ]\left [ j \right ]\left [k  \right ]</script><p>放一个</p><script type="math/tex; mode=display">dp\left [i\right ]\left [ j+1 \right ]\left [k  \right ]+=dp\left [i-1 \right ]\left [ j \right ]\left [k  \right ]*(m-j-k)(m-j-k>0)</script><script type="math/tex; mode=display">dp\left [i  \right ]\left [ j \right ]\left [k +1 \right ]+=dp\left [i -1\right ]\left [ j \right ]\left [k  \right ]*j(j>0)</script><p>放两个</p><script type="math/tex; mode=display">dp\left [i  \right ]\left [ j -2\right ]\left [k +2 \right ]+=dp\left [i-1 \right ]\left [ j \right ]\left [k  \right ]*C_{j}^{2}(j\geq 2)</script><script type="math/tex; mode=display">dp\left [i  \right ]\left [ j +2\right ]\left [k \right ]+=dp\left [i-1 \right ]\left [ j \right ]\left [k  \right ]*C_{m-j-k}^{2}(m-j-k\geq 2)</script><script type="math/tex; mode=display">dp\left [i  \right ]\left [ j \right ]\left [k +1\right ]+=dp\left [i-1 \right ]\left [ j \right ]\left [k  \right ]*(m-j-k)*j(j>0,m-j-k>0)</script><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">105</span>,mod=<span class="number">9999973</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line">LL dp[N][N][N]; <span class="comment">//row,1,2</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;j+k&lt;=m;k++) </span><br><span class="line">            &#123;</span><br><span class="line">                dp[i][j][k]=(dp[i][j][k]+dp[i<span class="number">-1</span>][j][k])%mod;</span><br><span class="line">                <span class="keyword">if</span> (m-j-k&gt;<span class="number">0</span>) dp[i][j+<span class="number">1</span>][k]=(dp[i][j+<span class="number">1</span>][k]+dp[i<span class="number">-1</span>][j][k]*(m-j-k))%mod;</span><br><span class="line">                <span class="keyword">if</span> (j&gt;<span class="number">0</span>) dp[i][j<span class="number">-1</span>][k+<span class="number">1</span>]=(dp[i][j<span class="number">-1</span>][k+<span class="number">1</span>]+dp[i<span class="number">-1</span>][j][k]*j)%mod;</span><br><span class="line">                <span class="keyword">if</span> (j&gt;=<span class="number">2</span>) dp[i][j<span class="number">-2</span>][k+<span class="number">2</span>]=(dp[i][j<span class="number">-2</span>][k+<span class="number">2</span>]+dp[i<span class="number">-1</span>][j][k]*j*(j<span class="number">-1</span>)/<span class="number">2</span>)%mod;</span><br><span class="line">                <span class="keyword">if</span> (m-j-k&gt;=<span class="number">2</span>) dp[i][j+<span class="number">2</span>][k]=(dp[i][j+<span class="number">2</span>][k]+dp[i<span class="number">-1</span>][j][k]*(m-j-k)*(m-j-k<span class="number">-1</span>)/<span class="number">2</span>)%mod;</span><br><span class="line">                <span class="keyword">if</span> (j&gt;<span class="number">0</span>&amp;&amp;m-j-k&gt;<span class="number">0</span>) dp[i][j][k+<span class="number">1</span>]=(dp[i][j][k+<span class="number">1</span>]+dp[i<span class="number">-1</span>][j][k]*(m-j-k)*j)%mod;                </span><br><span class="line">            &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;i+j&lt;=m;j++)</span><br><span class="line">            ans=(ans+dp[n][i][j])%mod;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;每行每列最多放两个&lt;br&gt;&lt;em&gt;dp&lt;/em&gt; 数组记录第&lt;em&gt;i&lt;/em&gt; 行，有&lt;em&gt;j&lt;/em&gt; 列放了1个，&lt;em&gt;k&lt;/em&gt; 列放了2个的方案数&lt;br&gt;不放&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [i  \right ]\left [ j \right ]\left [k  \right ]+=dp\left [i-1 \right ]\left [ j \right ]\left [k  \right ]&lt;/script&gt;&lt;p&gt;放一个&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [i\right ]\left [ j+1 \right ]\left [k  \right ]+=dp\left [i-1 \right ]\left [ j \right ]\left [k  \right ]*(m-j-k)(m-j-k&gt;0)&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [i  \right ]\left [ j \right ]\left [k +1 \right ]+=dp\left [i -1\right ]\left [ j \right ]\left [k  \right ]*j(j&gt;0)&lt;/script&gt;&lt;p&gt;放两个&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [i  \right ]\left [ j -2\right ]\left [k +2 \right ]+=dp\left [i-1 \right ]\left [ j \right ]\left [k  \right ]*C_{j}^{2}(j\geq 2)&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [i  \right ]\left [ j +2\right ]\left [k \right ]+=dp\left [i-1 \right ]\left [ j \right ]\left [k  \right ]*C_{m-j-k}^{2}(m-j-k\geq 2)&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [i  \right ]\left [ j \right ]\left [k +1\right ]+=dp\left [i-1 \right ]\left [ j \right ]\left [k  \right ]*(m-j-k)*j(j&gt;0,m-j-k&gt;0)&lt;/script&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P1262 间谍网络</title>
    <link href="http://yoursite.com/2018/07/19/%E6%B4%9B%E8%B0%B7P1262-%E9%97%B4%E8%B0%8D%E7%BD%91%E7%BB%9C/"/>
    <id>http://yoursite.com/2018/07/19/洛谷P1262-间谍网络/</id>
    <published>2018-07-19T12:20:39.000Z</published>
    <updated>2018-07-22T10:38:29.347Z</updated>
    
    <content type="html"><![CDATA[<p>缩点时在新节点中保存最小花费和最小编号即可<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">3050</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">25</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,w[N];</span><br><span class="line"><span class="keyword">int</span> sz[N],val[N],idx[N],cnt=<span class="number">0</span>,d[N];</span><br><span class="line"><span class="keyword">int</span> dfn[N],low[N],num=<span class="number">0</span>,inq[N];</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>,id=INF;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[N];</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; S;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dfn[o]=low[o]=++num;</span><br><span class="line">    inq[o]=<span class="number">1</span>,S.push(o);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[o].size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[o][i];</span><br><span class="line">        <span class="keyword">if</span> (!dfn[to])</span><br><span class="line">        &#123;</span><br><span class="line">            tarjan(to);</span><br><span class="line">            low[o]=min(low[o],low[to]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (inq[to])</span><br><span class="line">            low[o]=min(low[o],dfn[to]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (dfn[o]==low[o])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x;++cnt;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            x=S.top();</span><br><span class="line">            inq[x]=<span class="number">0</span>,S.pop();</span><br><span class="line">            idx[x]=cnt;</span><br><span class="line">            val[cnt]=min(val[cnt],w[x]);</span><br><span class="line">            sz[cnt]=min(sz[cnt],x);</span><br><span class="line">        &#125; <span class="keyword">while</span> (x!=o);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">        w[i]=sz[i]=val[i]=INF;</span><br><span class="line">    <span class="keyword">int</span> T=read();</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=read();</span><br><span class="line">        w[x]=read();</span><br><span class="line">    &#125;</span><br><span class="line">    m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">        e[u].push_back(v);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span> (!dfn[i]) tarjan(i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;e[i].size();j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> u=i,v=e[i][j];</span><br><span class="line">            <span class="keyword">if</span> (idx[u]!=idx[v]) d[idx[v]]++;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">        <span class="keyword">if</span> (!d[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (val[i]==INF) </span><br><span class="line">                id=min(id,sz[i]);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                ans+=val[i];</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span> (id==INF) </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"YES\n%d"</span>,ans);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"NO\n%d"</span>,id);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;缩点时在新节点中保存最小花费和最小编号即可&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="强联通分量" scheme="http://yoursite.com/tags/%E5%BC%BA%E8%81%94%E9%80%9A%E5%88%86%E9%87%8F/"/>
    
      <category term="缩点" scheme="http://yoursite.com/tags/%E7%BC%A9%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>[USACO06NOV]路障Roadblocks</title>
    <link href="http://yoursite.com/2018/07/19/USACO06NOV-%E8%B7%AF%E9%9A%9CRoadblocks/"/>
    <id>http://yoursite.com/2018/07/19/USACO06NOV-路障Roadblocks/</id>
    <published>2018-07-19T12:14:10.000Z</published>
    <updated>2018-07-19T12:19:44.755Z</updated>
    
    <content type="html"><![CDATA[<p>和次小生成树相似的套路<br>记<em>f</em> 为<em>S</em> 到所有点的最短路，<em>g</em> 为<em>T</em> 到所有点的最短路<br>枚举所有边<script type="math/tex">edge\left \{ u,v,val \right \}</script></p><script type="math/tex; mode=display">ans=min\left \{ f\left [ u \right ]+val+ g\left [ v \right ]\right \}\left (  f\left [ u \right ]+val+ g\left [ v \right ]>f\left [ T \right ] \right )</script><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">5050</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">30</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,d[<span class="number">2</span>][N],inq[N],mins=INF,ans=INF;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[N],g[N];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[u].push_back(v);</span><br><span class="line">    g[u].push_back(val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) d[k][i]=INF;</span><br><span class="line">    d[k][s]=<span class="number">0</span>,inq[s]=<span class="number">1</span>,Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();</span><br><span class="line">        inq[x]=<span class="number">0</span>,Q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[x].size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[x][i];</span><br><span class="line">            <span class="keyword">if</span> (d[k][x]+g[x][i]&lt;d[k][to])</span><br><span class="line">            &#123;</span><br><span class="line">                d[k][to]=d[k][x]+g[x][i];</span><br><span class="line">                <span class="keyword">if</span> (!inq[to]) inq[to]=<span class="number">1</span>,Q.push(to);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">        <span class="keyword">int</span> val=read();</span><br><span class="line">        add(u,v,val);</span><br><span class="line">        add(v,u,val);</span><br><span class="line">    &#125;</span><br><span class="line">    SPFA(<span class="number">1</span>,<span class="number">0</span>),SPFA(n,<span class="number">1</span>);</span><br><span class="line">    mins=d[<span class="number">0</span>][n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;e[i].size();j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> u=i,v=e[i][j];</span><br><span class="line">            <span class="keyword">if</span> (d[<span class="number">0</span>][u]+g[i][j]+d[<span class="number">1</span>][v]&gt;mins)</span><br><span class="line">                ans=min(ans,d[<span class="number">0</span>][u]+g[i][j]+d[<span class="number">1</span>][v]);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;和次小生成树相似的套路&lt;br&gt;记&lt;em&gt;f&lt;/em&gt; 为&lt;em&gt;S&lt;/em&gt; 到所有点的最短路，&lt;em&gt;g&lt;/em&gt; 为&lt;em&gt;T&lt;/em&gt; 到所有点的最短路&lt;br&gt;枚举所有边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ u,v,val \right \}&lt;/script&gt;&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;ans=min\left \{ f\left [ u \right ]+val+ g\left [ v \right ]\right \}\left (  f\left [ u \right ]+val+ g\left [ v \right ]&gt;f\left [ T \right ] \right )&lt;/script&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="最短路" scheme="http://yoursite.com/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P2002 消息扩散</title>
    <link href="http://yoursite.com/2018/07/19/%E6%B4%9B%E8%B0%B7P2002-%E6%B6%88%E6%81%AF%E6%89%A9%E6%95%A3/"/>
    <id>http://yoursite.com/2018/07/19/洛谷P2002-消息扩散/</id>
    <published>2018-07-19T12:11:53.000Z</published>
    <updated>2018-07-19T12:13:47.010Z</updated>
    
    <content type="html"><![CDATA[<p>缩完点之后求有多少入度为0的点即可<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100050</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,d[N],idx[N],cnt=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> inq[N],dfn[N],low[N],num=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[N],g[N];</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; S;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dfn[o]=low[o]=++num;</span><br><span class="line">    inq[o]=<span class="number">1</span>,S.push(o);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[o].size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[o][i];</span><br><span class="line">        <span class="keyword">if</span> (!dfn[to])</span><br><span class="line">        &#123;</span><br><span class="line">            tarjan(to);</span><br><span class="line">            low[o]=min(low[o],low[to]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (inq[to])</span><br><span class="line">            low[o]=min(low[o],dfn[to]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (low[o]==dfn[o])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x;cnt++;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            x=S.top();</span><br><span class="line">            inq[x]=<span class="number">0</span>,S.pop();</span><br><span class="line">            idx[x]=cnt;</span><br><span class="line">        &#125; <span class="keyword">while</span>(x!=o);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">        <span class="keyword">if</span> (u==v) <span class="keyword">continue</span>;</span><br><span class="line">        e[u].push_back(v);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span> (!dfn[i]) tarjan(i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;e[i].size();j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> u=i,v=e[i][j];</span><br><span class="line">            <span class="keyword">if</span> (idx[u]!=idx[v])</span><br><span class="line">            &#123;</span><br><span class="line">                g[idx[u]].push_back(idx[v]);</span><br><span class="line">                d[idx[v]]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++) <span class="keyword">if</span> (!d[i]) ans++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;缩完点之后求有多少入度为0的点即可&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="强联通分量" scheme="http://yoursite.com/tags/%E5%BC%BA%E8%81%94%E9%80%9A%E5%88%86%E9%87%8F/"/>
    
      <category term="缩点" scheme="http://yoursite.com/tags/%E7%BC%A9%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>[TJOI2009]猜数字</title>
    <link href="http://yoursite.com/2018/07/19/TJOI2009-%E7%8C%9C%E6%95%B0%E5%AD%97/"/>
    <id>http://yoursite.com/2018/07/19/TJOI2009-猜数字/</id>
    <published>2018-07-19T11:59:08.000Z</published>
    <updated>2018-07-19T12:10:58.093Z</updated>
    
    <content type="html"><![CDATA[<script type="math/tex; mode=display">\left\{\begin{matrix} x\equiv a_{1}\left ( mod \ b_{1} \right )  \\ x\equiv a_{2}\left ( mod \ b_{2} \right )\\\cdots \\x\equiv a_{n}\left ( mod \ b_{n} \right )\\\end{matrix}\right.</script><p>其中<script type="math/tex">gcd\left ( b_{i} ,b_{j}\right )=1\left ( i\neq j,i\in n,j\in n \right )</script><br>设</p><script type="math/tex; mode=display">M=\prod_{i=1}^{n}b_{i}</script><script type="math/tex; mode=display">M_{i}=\frac{M}{b_{i}}</script><script type="math/tex; mode=display">r_{i}\equiv M_{i}^{-1}\left ( mod \ b_{i} \right )</script><p>则</p><script type="math/tex; mode=display">x=\sum_{i=1}^{n}M_{i}a_{i}r_{i}</script><p>且在<em>M</em> 以内有唯一解<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">15</span>;</span><br><span class="line">LL a[N],b[N],M[N]=&#123;<span class="number">1</span>&#125;,r[N],n,x,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exgcd</span><span class="params">(LL a,LL b,LL &amp;x,LL &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b) </span><br><span class="line">    &#123;</span><br><span class="line">        x=<span class="number">1</span>,y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    exgcd(b,a%b,y,x);</span><br><span class="line">    y-=a/b*x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">mul</span><span class="params">(LL a,LL b,LL mod)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (b&amp;<span class="number">1</span>) ret=(ret+a)%mod;</span><br><span class="line">        a=(a&lt;&lt;<span class="number">1</span>)%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;b[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) a[i]=(a[i]%b[i]+b[i])%b[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) M[<span class="number">0</span>]*=b[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) M[i]=M[<span class="number">0</span>]/b[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) exgcd(M[i],b[i],r[i],x);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) r[i]=(r[i]%b[i]+b[i])%b[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">        ans=(ans+mul(mul(a[i],M[i],M[<span class="number">0</span>]),r[i],M[<span class="number">0</span>]))%M[<span class="number">0</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(ans%M[<span class="number">0</span>]+M[<span class="number">0</span>])%M[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;math/tex; mode=display&quot;&gt;
\left\{\begin{matrix}
 x\equiv a_{1}\left ( mod \ b_{1} \right )  \\ 
x\equiv a_{2}\left ( mod \ b_{2} \right )\\
\cdots \\
x\equiv a_{n}\left ( mod \ b_{n} \right )\\
\end{matrix}\right.&lt;/script&gt;&lt;p&gt;其中&lt;script type=&quot;math/tex&quot;&gt;gcd\left ( b_{i} ,b_{j}\right )=1\left ( i\neq j,i\in n,j\in n \right )&lt;/script&gt;&lt;br&gt;设&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
M=\prod_{i=1}^{n}b_{i}&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
M_{i}=\frac{M}{b_{i}}&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
r_{i}\equiv M_{i}^{-1}\left ( mod \ b_{i} \right )&lt;/script&gt;&lt;p&gt;则&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
x=\sum_{i=1}^{n}M_{i}a_{i}r_{i}&lt;/script&gt;&lt;p&gt;且在&lt;em&gt;M&lt;/em&gt; 以内有唯一解&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="数论" scheme="http://yoursite.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="中国剩余定理" scheme="http://yoursite.com/tags/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P1273 有线电视网</title>
    <link href="http://yoursite.com/2018/07/19/%E6%B4%9B%E8%B0%B7P1273-%E6%9C%89%E7%BA%BF%E7%94%B5%E8%A7%86%E7%BD%91/"/>
    <id>http://yoursite.com/2018/07/19/洛谷P1273-有线电视网/</id>
    <published>2018-07-19T11:51:19.000Z</published>
    <updated>2018-07-22T12:07:56.284Z</updated>
    
    <content type="html"><![CDATA[<p>记<script type="math/tex">dp\left [  i\right ]\left [ j \right ]</script>为<em>i</em> 节点，取<em>j</em> 个能获得的最大收入<br>叶节点<script type="math/tex">dp\left [  i\right ]\left [ 1 \right ]=w\left [ i \right ]</script><br>转移方程</p><script type="math/tex; mode=display">dp\left [  x\right ]\left [ i \right ]=max\left \{ dp\left [ to \right ]\left [ j \right ]+dp\left [ x \right ]\left [ i-j \right ]-cost\left [ x \right ]\left [ to \right ] \right \}\left ( to\in x_{son} \right )</script><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">3050</span>,rt=<span class="number">1</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">20</span>;</span><br><span class="line"><span class="keyword">int</span> dp[N][N],n,m,sz[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[N],g[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[u].push_back(v);</span><br><span class="line">    g[u].push_back(val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (o&gt;n-m) sz[o]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;e[o].size();k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[o][k];</span><br><span class="line">        dfs(to);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=m;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=min(i,sz[to]);j++)</span><br><span class="line">                dp[o][i]=max(dp[o][i],dp[o][i-j]+dp[to][j]-g[o][k]);</span><br><span class="line">        sz[o]+=sz[to];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n-m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> T=read();</span><br><span class="line">        <span class="keyword">while</span> (T--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> u=i,v=read();</span><br><span class="line">            add(u,v,read());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++) dp[i][j]=-INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n-m+<span class="number">1</span>;i&lt;=n;i++) dp[i][<span class="number">1</span>]=read();</span><br><span class="line">    dfs(rt);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=m;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        <span class="keyword">if</span> (dp[rt][i]&gt;=<span class="number">0</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记&lt;script type=&quot;math/tex&quot;&gt;dp\left [  i\right ]\left [ j \right ]&lt;/script&gt;为&lt;em&gt;i&lt;/em&gt; 节点，取&lt;em&gt;j&lt;/em&gt; 个能获得的最大收入&lt;br&gt;叶节点&lt;script type=&quot;math/tex&quot;&gt;dp\left [  i\right ]\left [ 1 \right ]=w\left [ i \right ]&lt;/script&gt;&lt;br&gt;转移方程&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [  x\right ]\left [ i \right ]=max\left \{ dp\left [ to \right ]\left [ j \right ]+dp\left [ x \right ]\left [ i-j \right ]-cost\left [ x \right ]\left [ to \right ] \right \}\left ( to\in x_{son} \right )&lt;/script&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
      <category term="树形结构" scheme="http://yoursite.com/tags/%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84/"/>
    
      <category term="背包" scheme="http://yoursite.com/tags/%E8%83%8C%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>[TJOI2010]中位数</title>
    <link href="http://yoursite.com/2018/07/19/TJOI2010-%E4%B8%AD%E4%BD%8D%E6%95%B0/"/>
    <id>http://yoursite.com/2018/07/19/TJOI2010-中位数/</id>
    <published>2018-07-19T11:45:57.000Z</published>
    <updated>2018-07-19T11:50:54.490Z</updated>
    
    <content type="html"><![CDATA[<p>对顶堆的模板题<br>对顶堆为一个大根堆<em>A</em> ,和一个小根堆<em>B</em> ,分别维护一个序列的前一段和后一段<br>要求中位数，只需要将序列均分入两个堆中即可<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cmp</span>&#123;</span><span class="function"><span class="keyword">bool</span> <span class="title">operator</span> <span class="params">()</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> a&gt;b;&#125;&#125;;</span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>&gt; A;</span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;,cmp&gt; B;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,x;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">        B.push(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (B.size()&gt;A.size()) </span><br><span class="line">    &#123;</span><br><span class="line">        A.push(B.top());</span><br><span class="line">        B.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,x;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> str[<span class="number">10</span>];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,str);</span><br><span class="line">        <span class="keyword">if</span> (str[<span class="number">0</span>]==<span class="string">'a'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x),n++;</span><br><span class="line">            x&gt;A.top()?B.push(x):A.push(x);</span><br><span class="line">            <span class="keyword">while</span> (A.size()&gt;n/<span class="number">2</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                B.push(A.top());</span><br><span class="line">                A.pop();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (B.size()&gt;A.size()) </span><br><span class="line">            &#123;</span><br><span class="line">                A.push(B.top());</span><br><span class="line">                B.pop();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,A.top());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对顶堆的模板题&lt;br&gt;对顶堆为一个大根堆&lt;em&gt;A&lt;/em&gt; ,和一个小根堆&lt;em&gt;B&lt;/em&gt; ,分别维护一个序列的前一段和后一段&lt;br&gt;要求中位数，只需要将序列均分入两个堆中即可&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="堆" scheme="http://yoursite.com/tags/%E5%A0%86/"/>
    
  </entry>
  
  <entry>
    <title>严格次小生成树[BJWC2010]</title>
    <link href="http://yoursite.com/2018/07/19/%E4%B8%A5%E6%A0%BC%E6%AC%A1%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91-BJWC2010/"/>
    <id>http://yoursite.com/2018/07/19/严格次小生成树-BJWC2010/</id>
    <published>2018-07-19T11:32:32.000Z</published>
    <updated>2018-07-19T12:40:33.970Z</updated>
    
    <content type="html"><![CDATA[<p>首先要知道怎么求非严格次小生成树<br>记<script type="math/tex">max\left \{ u,v \right \}</script>为<em>u，v</em> 路径上的最大边权<br>先求一遍最小生成树，记权值为<em>mins</em><br>然后枚举所有不在树中的边<script type="math/tex">edge\left \{ u,v,val \right \}</script><br>非严格次小生成树的权值为<script type="math/tex">min\left \{ mins-max\left \{ u,v \right \} +val\right \}</script><br>用倍增或树剖都可以求</p><p>现在要求严格次小的<br>于是记录<script type="math/tex">\left \{ u,v \right \}</script>的次大边权，保证其严格小于最大值，记为<script type="math/tex">nxt\left \{ u,v \right \}</script><br>然后依旧是枚举所有不在树中的边<script type="math/tex">edge\left \{ u,v,val \right \}</script><br>若<script type="math/tex">val>max\left \{ u,v \right \}</script>，则为<script type="math/tex">mins-max\left \{ u,v \right \} +val</script>，否则为<script type="math/tex">mins-nxt\left \{ u,v \right \} +val</script><br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100050</span>,rt=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> LL INF=<span class="number">1L</span>L&lt;&lt;<span class="number">60</span>;</span><br><span class="line">LL mins=<span class="number">0</span>,ans=INF;</span><br><span class="line"><span class="keyword">int</span> fa[N][<span class="number">25</span>],w[N][<span class="number">25</span>],c[N][<span class="number">25</span>],<span class="built_in">log</span>[N];</span><br><span class="line"><span class="keyword">int</span> dep[N],n,m,f[N],used[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span><span class="keyword">int</span> u,v,val;&#125;t[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[N],g[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(edge a,edge b)</span></span>&#123;<span class="keyword">return</span> a.val&lt;b.val;&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> f[x]==x?x:f[x]=find(f[x]);&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">unite</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span>&#123;f[find(u)]=find(v);&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[u].push_back(v);</span><br><span class="line">    g[u].push_back(val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="built_in">log</span>[dep[o]];i++)</span><br><span class="line">    &#123;</span><br><span class="line">        fa[o][i]=fa[fa[o][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">        w[o][i]=max(w[o][i<span class="number">-1</span>],w[fa[o][i<span class="number">-1</span>]][i<span class="number">-1</span>]);</span><br><span class="line">        c[o][i]=max(c[o][i<span class="number">-1</span>],c[fa[o][i<span class="number">-1</span>]][i<span class="number">-1</span>]);</span><br><span class="line">        <span class="keyword">if</span> (w[o][i<span class="number">-1</span>]&lt;w[fa[o][i<span class="number">-1</span>]][i<span class="number">-1</span>])</span><br><span class="line">            c[o][i]=max(c[o][i],w[o][i<span class="number">-1</span>]);</span><br><span class="line">        <span class="keyword">if</span> (w[o][i<span class="number">-1</span>]&gt;w[fa[o][i<span class="number">-1</span>]][i<span class="number">-1</span>])</span><br><span class="line">            c[o][i]=max(c[o][i],w[fa[o][i<span class="number">-1</span>]][i<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[o].size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[o][i];</span><br><span class="line">        <span class="keyword">if</span> (!dep[to])</span><br><span class="line">        &#123;</span><br><span class="line">            dep[to]=dep[o]+<span class="number">1</span>;</span><br><span class="line">            fa[to][<span class="number">0</span>]=o;</span><br><span class="line">            w[to][<span class="number">0</span>]=g[o][i];</span><br><span class="line">            dfs(to);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (dep[u]&lt;dep[v]) swap(u,v);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="built_in">log</span>[dep[u]];i++)</span><br><span class="line">        <span class="keyword">if</span> (((dep[u]-dep[v])&gt;&gt;i)&amp;<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ret=max(ret,val!=w[u][i]?w[u][i]:c[u][i]);</span><br><span class="line">            u=fa[u][i];      </span><br><span class="line">        &#125; </span><br><span class="line">    <span class="keyword">if</span> (u==v) <span class="keyword">return</span> ret;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="built_in">log</span>[dep[u]];i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        <span class="keyword">if</span> (fa[u][i]!=fa[v][i])</span><br><span class="line">        &#123;</span><br><span class="line">            ret=max(ret,val!=w[u][i]?w[u][i]:c[u][i]);</span><br><span class="line">            ret=max(ret,val!=w[v][i]?w[v][i]:c[v][i]);</span><br><span class="line">            u=fa[u][i],v=fa[v][i];</span><br><span class="line">        &#125;</span><br><span class="line">    ret=max(ret,val!=w[u][<span class="number">0</span>]?w[u][<span class="number">0</span>]:c[u][<span class="number">0</span>]);</span><br><span class="line">    ret=max(ret,val!=w[v][<span class="number">0</span>]?w[v][<span class="number">0</span>]:c[v][<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">        <span class="built_in">log</span>[i]=<span class="built_in">log</span>[i<span class="number">-1</span>]+(<span class="number">1</span>&lt;&lt;<span class="built_in">log</span>[i<span class="number">-1</span>]==i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t[i].u=read();</span><br><span class="line">        t[i].v=read();</span><br><span class="line">        t[i].val=read();</span><br><span class="line">    &#125;</span><br><span class="line">    sort(t+<span class="number">1</span>,t+m+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) f[i]=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u=t[i].u,v=t[i].v;</span><br><span class="line">        <span class="keyword">if</span> (find(u)!=find(v))</span><br><span class="line">        &#123;</span><br><span class="line">            used[i]=<span class="number">1</span>;</span><br><span class="line">            add(u,v,t[i].val);</span><br><span class="line">            add(v,u,t[i].val);</span><br><span class="line">            unite(u,v);</span><br><span class="line">            mins+=t[i].val;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dep[rt]=<span class="number">1</span>,dfs(rt);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) </span><br><span class="line">        <span class="keyword">if</span> (!used[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> u=t[i].u,v=t[i].v;</span><br><span class="line">            <span class="keyword">int</span> val=calc(u,v,t[i].val);</span><br><span class="line">            ans=min(ans,mins-val+t[i].val);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先要知道怎么求非严格次小生成树&lt;br&gt;记&lt;script type=&quot;math/tex&quot;&gt;max\left \{ u,v \right \}&lt;/script&gt;为&lt;em&gt;u，v&lt;/em&gt; 路径上的最大边权&lt;br&gt;先求一遍最小生成树，记权值为&lt;em&gt;mins&lt;/em&gt;&lt;br&gt;然后枚举所有不在树中的边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ u,v,val \right \}&lt;/script&gt;&lt;br&gt;非严格次小生成树的权值为&lt;script type=&quot;math/tex&quot;&gt;min\left \{ mins-max\left \{ u,v \right \} +val\right \}&lt;/script&gt;&lt;br&gt;用倍增或树剖都可以求&lt;/p&gt;
&lt;p&gt;现在要求严格次小的&lt;br&gt;于是记录&lt;script type=&quot;math/tex&quot;&gt;\left \{ u,v \right \}&lt;/script&gt;的次大边权，保证其严格小于最大值，记为&lt;script type=&quot;math/tex&quot;&gt;nxt\left \{ u,v \right \}&lt;/script&gt;&lt;br&gt;然后依旧是枚举所有不在树中的边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ u,v,val \right \}&lt;/script&gt;&lt;br&gt;若&lt;script type=&quot;math/tex&quot;&gt;val&gt;max\left \{ u,v \right \}&lt;/script&gt;，则为&lt;script type=&quot;math/tex&quot;&gt;mins-max\left \{ u,v \right \} +val&lt;/script&gt;，否则为&lt;script type=&quot;math/tex&quot;&gt;mins-nxt\left \{ u,v \right \} +val&lt;/script&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="倍增" scheme="http://yoursite.com/tags/%E5%80%8D%E5%A2%9E/"/>
    
  </entry>
  
</feed>
