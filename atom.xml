<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>魍魉的小窝</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-07-19T12:41:37.373Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>CWHer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[AHOI2009]中国象棋</title>
    <link href="http://yoursite.com/2018/07/19/AHOI2009-%E4%B8%AD%E5%9B%BD%E8%B1%A1%E6%A3%8B/"/>
    <id>http://yoursite.com/2018/07/19/AHOI2009-中国象棋/</id>
    <published>2018-07-19T12:24:15.000Z</published>
    <updated>2018-07-19T12:41:37.373Z</updated>
    
    <content type="html"><![CDATA[<p>每行每列最多放两个<br><em>dp</em> 数组记录第<em>i</em> 行，有<em>j</em> 列放了1个，<em>k</em> 列放了2个的方案数<br>不放</p><script type="math/tex; mode=display">dp\left [i  \right ]\left [ j \right ]\left [k  \right ]+=dp\left [i-1 \right ]\left [ j \right ]\left [k  \right ]</script><p>放一个</p><script type="math/tex; mode=display">dp\left [i\right ]\left [ j+1 \right ]\left [k  \right ]+=dp\left [i-1 \right ]\left [ j \right ]\left [k  \right ]*(m-j-k)(m-j-k>0)</script><script type="math/tex; mode=display">dp\left [i  \right ]\left [ j \right ]\left [k +1 \right ]+=dp\left [i -1\right ]\left [ j \right ]\left [k  \right ]*j(j>0)</script><p>放两个</p><script type="math/tex; mode=display">dp\left [i  \right ]\left [ j -2\right ]\left [k +2 \right ]+=dp\left [i-1 \right ]\left [ j \right ]\left [k  \right ]*C_{j}^{2}(j\geq 2)</script><script type="math/tex; mode=display">dp\left [i  \right ]\left [ j +2\right ]\left [k \right ]+=dp\left [i-1 \right ]\left [ j \right ]\left [k  \right ]*C_{m-j-k}^{2}(m-j-k\geq 2)</script><script type="math/tex; mode=display">dp\left [i  \right ]\left [ j \right ]\left [k +1\right ]+=dp\left [i-1 \right ]\left [ j \right ]\left [k  \right ]*(m-j-k)*j(j>0,m-j-k>0)</script><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">105</span>,mod=<span class="number">9999973</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line">LL dp[N][N][N]; <span class="comment">//row,1,2</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;j+k&lt;=m;k++) </span><br><span class="line">            &#123;</span><br><span class="line">                dp[i][j][k]=(dp[i][j][k]+dp[i<span class="number">-1</span>][j][k])%mod;</span><br><span class="line">                <span class="keyword">if</span> (m-j-k&gt;<span class="number">0</span>) dp[i][j+<span class="number">1</span>][k]=(dp[i][j+<span class="number">1</span>][k]+dp[i<span class="number">-1</span>][j][k]*(m-j-k))%mod;</span><br><span class="line">                <span class="keyword">if</span> (j&gt;<span class="number">0</span>) dp[i][j<span class="number">-1</span>][k+<span class="number">1</span>]=(dp[i][j<span class="number">-1</span>][k+<span class="number">1</span>]+dp[i<span class="number">-1</span>][j][k]*j)%mod;</span><br><span class="line">                <span class="keyword">if</span> (j&gt;=<span class="number">2</span>) dp[i][j<span class="number">-2</span>][k+<span class="number">2</span>]=(dp[i][j<span class="number">-2</span>][k+<span class="number">2</span>]+dp[i<span class="number">-1</span>][j][k]*j*(j<span class="number">-1</span>)/<span class="number">2</span>)%mod;</span><br><span class="line">                <span class="keyword">if</span> (m-j-k&gt;=<span class="number">2</span>) dp[i][j+<span class="number">2</span>][k]=(dp[i][j+<span class="number">2</span>][k]+dp[i<span class="number">-1</span>][j][k]*(m-j-k)*(m-j-k<span class="number">-1</span>)/<span class="number">2</span>)%mod;</span><br><span class="line">                <span class="keyword">if</span> (j&gt;<span class="number">0</span>&amp;&amp;m-j-k&gt;<span class="number">0</span>) dp[i][j][k+<span class="number">1</span>]=(dp[i][j][k+<span class="number">1</span>]+dp[i<span class="number">-1</span>][j][k]*(m-j-k)*j)%mod;                </span><br><span class="line">            &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;i+j&lt;=m;j++)</span><br><span class="line">            ans=(ans+dp[n][i][j])%mod;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;每行每列最多放两个&lt;br&gt;&lt;em&gt;dp&lt;/em&gt; 数组记录第&lt;em&gt;i&lt;/em&gt; 行，有&lt;em&gt;j&lt;/em&gt; 列放了1个，&lt;em&gt;k&lt;/em&gt; 列放了2个的方案数&lt;br&gt;不放&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [i  \right ]\left [ j \right ]\left [k  \right ]+=dp\left [i-1 \right ]\left [ j \right ]\left [k  \right ]&lt;/script&gt;&lt;p&gt;放一个&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [i\right ]\left [ j+1 \right ]\left [k  \right ]+=dp\left [i-1 \right ]\left [ j \right ]\left [k  \right ]*(m-j-k)(m-j-k&gt;0)&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [i  \right ]\left [ j \right ]\left [k +1 \right ]+=dp\left [i -1\right ]\left [ j \right ]\left [k  \right ]*j(j&gt;0)&lt;/script&gt;&lt;p&gt;放两个&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [i  \right ]\left [ j -2\right ]\left [k +2 \right ]+=dp\left [i-1 \right ]\left [ j \right ]\left [k  \right ]*C_{j}^{2}(j\geq 2)&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [i  \right ]\left [ j +2\right ]\left [k \right ]+=dp\left [i-1 \right ]\left [ j \right ]\left [k  \right ]*C_{m-j-k}^{2}(m-j-k\geq 2)&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [i  \right ]\left [ j \right ]\left [k +1\right ]+=dp\left [i-1 \right ]\left [ j \right ]\left [k  \right ]*(m-j-k)*j(j&gt;0,m-j-k&gt;0)&lt;/script&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="动态规划" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P1262 间谍网络</title>
    <link href="http://yoursite.com/2018/07/19/%E6%B4%9B%E8%B0%B7P1262-%E9%97%B4%E8%B0%8D%E7%BD%91%E7%BB%9C/"/>
    <id>http://yoursite.com/2018/07/19/洛谷P1262-间谍网络/</id>
    <published>2018-07-19T12:20:39.000Z</published>
    <updated>2018-07-19T12:23:11.199Z</updated>
    
    <content type="html"><![CDATA[<p>缩点时在新节点中保存最小花费和最小编号即可<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">#include&lt;stack&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int N=3050,INF=1&lt;&lt;25;</span><br><span class="line">int n,m,w[N];</span><br><span class="line">int sz[N],val[N],idx[N],cnt=0,d[N];</span><br><span class="line">int dfn[N],low[N],num=0,inq[N];</span><br><span class="line">int ans=0,id=INF;</span><br><span class="line">vector&lt;int&gt; e[N];</span><br><span class="line">stack&lt;int&gt; S;</span><br><span class="line">inline int read()</span><br><span class="line">&#123;</span><br><span class="line">    register int x=0,t=1;</span><br><span class="line">    register char ch=getchar();</span><br><span class="line">    while (ch!=&apos;-&apos;&amp;&amp;(ch&lt;&apos;0&apos;||ch&gt;&apos;9&apos;)) ch=getchar();</span><br><span class="line">    if (ch==&apos;-&apos;) t=-1,ch=getchar();</span><br><span class="line">    while (ch&gt;=&apos;0&apos;&amp;&amp;ch&lt;=&apos;9&apos;) x=x*10+ch-48,ch=getchar();</span><br><span class="line">    return x*t;</span><br><span class="line">&#125;</span><br><span class="line">void tarjan(int o)</span><br><span class="line">&#123;</span><br><span class="line">    dfn[o]=low[o]=++num;</span><br><span class="line">    inq[o]=1,S.push(o);</span><br><span class="line">    for(int i=0;i&lt;e[o].size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        int to=e[o][i];</span><br><span class="line">        if (!dfn[to])</span><br><span class="line">        &#123;</span><br><span class="line">            tarjan(to);</span><br><span class="line">            low[o]=min(low[o],low[to]);</span><br><span class="line">        &#125;</span><br><span class="line">        else if (inq[to])</span><br><span class="line">            low[o]=min(low[o],dfn[to]);</span><br><span class="line">    &#125;</span><br><span class="line">    if (dfn[o]==low[o])</span><br><span class="line">    &#123;</span><br><span class="line">        int x;++cnt;</span><br><span class="line">        do&#123;</span><br><span class="line">            x=S.top();</span><br><span class="line">            inq[x]=0,S.pop();</span><br><span class="line">            idx[x]=cnt;</span><br><span class="line">            val[cnt]=min(val[cnt],w[x]);</span><br><span class="line">            sz[cnt]=min(sz[cnt],x);</span><br><span class="line">        &#125; while (x!=o);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    for(int i=1;i&lt;=n;i++) </span><br><span class="line">        w[i]=sz[i]=val[i]=INF;</span><br><span class="line">    int T=read();</span><br><span class="line">    while (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        int x=read();</span><br><span class="line">        w[x]=read();</span><br><span class="line">    &#125;</span><br><span class="line">    m=read();</span><br><span class="line">    for(int i=1;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        int u=read(),v=read();</span><br><span class="line">        e[u].push_back(v);</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)</span><br><span class="line">        if (!dfn[i]) tarjan(i);</span><br><span class="line">    for(int i=1;i&lt;=n;i++)</span><br><span class="line">        for(int j=0;j&lt;e[i].size();j++)</span><br><span class="line">        &#123;</span><br><span class="line">            int u=i,v=e[i][j];</span><br><span class="line">            if (idx[u]!=idx[v]) d[idx[v]]++;</span><br><span class="line">        &#125;</span><br><span class="line">    for(int i=1;i&lt;=cnt;i++)</span><br><span class="line">        if (!d[i])</span><br><span class="line">        &#123;</span><br><span class="line">            if (val[i]==INF) </span><br><span class="line">                id=min(id,sz[i]);</span><br><span class="line">            else</span><br><span class="line">                ans+=val[i];</span><br><span class="line">        &#125;</span><br><span class="line">    if (id==INF) </span><br><span class="line">        printf(&quot;YES\n%d&quot;,ans);</span><br><span class="line">    else</span><br><span class="line">        printf(&quot;NO\n%d&quot;,id);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;缩点时在新节点中保存最小花费和最小编号即可&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="强联通分量" scheme="http://yoursite.com/tags/%E5%BC%BA%E8%81%94%E9%80%9A%E5%88%86%E9%87%8F/"/>
    
      <category term="缩点" scheme="http://yoursite.com/tags/%E7%BC%A9%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>[USACO06NOV]路障Roadblocks</title>
    <link href="http://yoursite.com/2018/07/19/USACO06NOV-%E8%B7%AF%E9%9A%9CRoadblocks/"/>
    <id>http://yoursite.com/2018/07/19/USACO06NOV-路障Roadblocks/</id>
    <published>2018-07-19T12:14:10.000Z</published>
    <updated>2018-07-19T12:19:44.755Z</updated>
    
    <content type="html"><![CDATA[<p>和次小生成树相似的套路<br>记<em>f</em> 为<em>S</em> 到所有点的最短路，<em>g</em> 为<em>T</em> 到所有点的最短路<br>枚举所有边<script type="math/tex">edge\left \{ u,v,val \right \}</script></p><script type="math/tex; mode=display">ans=min\left \{ f\left [ u \right ]+val+ g\left [ v \right ]\right \}\left (  f\left [ u \right ]+val+ g\left [ v \right ]>f\left [ T \right ] \right )</script><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">5050</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">30</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,d[<span class="number">2</span>][N],inq[N],mins=INF,ans=INF;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[N],g[N];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[u].push_back(v);</span><br><span class="line">    g[u].push_back(val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) d[k][i]=INF;</span><br><span class="line">    d[k][s]=<span class="number">0</span>,inq[s]=<span class="number">1</span>,Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();</span><br><span class="line">        inq[x]=<span class="number">0</span>,Q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[x].size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[x][i];</span><br><span class="line">            <span class="keyword">if</span> (d[k][x]+g[x][i]&lt;d[k][to])</span><br><span class="line">            &#123;</span><br><span class="line">                d[k][to]=d[k][x]+g[x][i];</span><br><span class="line">                <span class="keyword">if</span> (!inq[to]) inq[to]=<span class="number">1</span>,Q.push(to);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">        <span class="keyword">int</span> val=read();</span><br><span class="line">        add(u,v,val);</span><br><span class="line">        add(v,u,val);</span><br><span class="line">    &#125;</span><br><span class="line">    SPFA(<span class="number">1</span>,<span class="number">0</span>),SPFA(n,<span class="number">1</span>);</span><br><span class="line">    mins=d[<span class="number">0</span>][n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;e[i].size();j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> u=i,v=e[i][j];</span><br><span class="line">            <span class="keyword">if</span> (d[<span class="number">0</span>][u]+g[i][j]+d[<span class="number">1</span>][v]&gt;mins)</span><br><span class="line">                ans=min(ans,d[<span class="number">0</span>][u]+g[i][j]+d[<span class="number">1</span>][v]);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;和次小生成树相似的套路&lt;br&gt;记&lt;em&gt;f&lt;/em&gt; 为&lt;em&gt;S&lt;/em&gt; 到所有点的最短路，&lt;em&gt;g&lt;/em&gt; 为&lt;em&gt;T&lt;/em&gt; 到所有点的最短路&lt;br&gt;枚举所有边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ u,v,val \right \}&lt;/script&gt;&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;ans=min\left \{ f\left [ u \right ]+val+ g\left [ v \right ]\right \}\left (  f\left [ u \right ]+val+ g\left [ v \right ]&gt;f\left [ T \right ] \right )&lt;/script&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="最短路" scheme="http://yoursite.com/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P2002 消息扩散</title>
    <link href="http://yoursite.com/2018/07/19/%E6%B4%9B%E8%B0%B7P2002-%E6%B6%88%E6%81%AF%E6%89%A9%E6%95%A3/"/>
    <id>http://yoursite.com/2018/07/19/洛谷P2002-消息扩散/</id>
    <published>2018-07-19T12:11:53.000Z</published>
    <updated>2018-07-19T12:13:47.010Z</updated>
    
    <content type="html"><![CDATA[<p>缩完点之后求有多少入度为0的点即可<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100050</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,d[N],idx[N],cnt=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> inq[N],dfn[N],low[N],num=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[N],g[N];</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; S;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dfn[o]=low[o]=++num;</span><br><span class="line">    inq[o]=<span class="number">1</span>,S.push(o);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[o].size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[o][i];</span><br><span class="line">        <span class="keyword">if</span> (!dfn[to])</span><br><span class="line">        &#123;</span><br><span class="line">            tarjan(to);</span><br><span class="line">            low[o]=min(low[o],low[to]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (inq[to])</span><br><span class="line">            low[o]=min(low[o],dfn[to]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (low[o]==dfn[o])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x;cnt++;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            x=S.top();</span><br><span class="line">            inq[x]=<span class="number">0</span>,S.pop();</span><br><span class="line">            idx[x]=cnt;</span><br><span class="line">        &#125; <span class="keyword">while</span>(x!=o);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">        <span class="keyword">if</span> (u==v) <span class="keyword">continue</span>;</span><br><span class="line">        e[u].push_back(v);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span> (!dfn[i]) tarjan(i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;e[i].size();j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> u=i,v=e[i][j];</span><br><span class="line">            <span class="keyword">if</span> (idx[u]!=idx[v])</span><br><span class="line">            &#123;</span><br><span class="line">                g[idx[u]].push_back(idx[v]);</span><br><span class="line">                d[idx[v]]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++) <span class="keyword">if</span> (!d[i]) ans++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;缩完点之后求有多少入度为0的点即可&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="强联通分量" scheme="http://yoursite.com/tags/%E5%BC%BA%E8%81%94%E9%80%9A%E5%88%86%E9%87%8F/"/>
    
      <category term="缩点" scheme="http://yoursite.com/tags/%E7%BC%A9%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>[TJOI2009]猜数字</title>
    <link href="http://yoursite.com/2018/07/19/TJOI2009-%E7%8C%9C%E6%95%B0%E5%AD%97/"/>
    <id>http://yoursite.com/2018/07/19/TJOI2009-猜数字/</id>
    <published>2018-07-19T11:59:08.000Z</published>
    <updated>2018-07-19T12:10:58.093Z</updated>
    
    <content type="html"><![CDATA[<script type="math/tex; mode=display">\left\{\begin{matrix} x\equiv a_{1}\left ( mod \ b_{1} \right )  \\ x\equiv a_{2}\left ( mod \ b_{2} \right )\\\cdots \\x\equiv a_{n}\left ( mod \ b_{n} \right )\\\end{matrix}\right.</script><p>其中<script type="math/tex">gcd\left ( b_{i} ,b_{j}\right )=1\left ( i\neq j,i\in n,j\in n \right )</script><br>设</p><script type="math/tex; mode=display">M=\prod_{i=1}^{n}b_{i}</script><script type="math/tex; mode=display">M_{i}=\frac{M}{b_{i}}</script><script type="math/tex; mode=display">r_{i}\equiv M_{i}^{-1}\left ( mod \ b_{i} \right )</script><p>则</p><script type="math/tex; mode=display">x=\sum_{i=1}^{n}M_{i}a_{i}r_{i}</script><p>且在<em>M</em> 以内有唯一解<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">15</span>;</span><br><span class="line">LL a[N],b[N],M[N]=&#123;<span class="number">1</span>&#125;,r[N],n,x,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exgcd</span><span class="params">(LL a,LL b,LL &amp;x,LL &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b) </span><br><span class="line">    &#123;</span><br><span class="line">        x=<span class="number">1</span>,y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    exgcd(b,a%b,y,x);</span><br><span class="line">    y-=a/b*x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">mul</span><span class="params">(LL a,LL b,LL mod)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (b&amp;<span class="number">1</span>) ret=(ret+a)%mod;</span><br><span class="line">        a=(a&lt;&lt;<span class="number">1</span>)%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;b[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) a[i]=(a[i]%b[i]+b[i])%b[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) M[<span class="number">0</span>]*=b[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) M[i]=M[<span class="number">0</span>]/b[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) exgcd(M[i],b[i],r[i],x);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) r[i]=(r[i]%b[i]+b[i])%b[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">        ans=(ans+mul(mul(a[i],M[i],M[<span class="number">0</span>]),r[i],M[<span class="number">0</span>]))%M[<span class="number">0</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(ans%M[<span class="number">0</span>]+M[<span class="number">0</span>])%M[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;math/tex; mode=display&quot;&gt;
\left\{\begin{matrix}
 x\equiv a_{1}\left ( mod \ b_{1} \right )  \\ 
x\equiv a_{2}\left ( mod \ b_{2} \right )\\
\cdots \\
x\equiv a_{n}\left ( mod \ b_{n} \right )\\
\end{matrix}\right.&lt;/script&gt;&lt;p&gt;其中&lt;script type=&quot;math/tex&quot;&gt;gcd\left ( b_{i} ,b_{j}\right )=1\left ( i\neq j,i\in n,j\in n \right )&lt;/script&gt;&lt;br&gt;设&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
M=\prod_{i=1}^{n}b_{i}&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
M_{i}=\frac{M}{b_{i}}&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
r_{i}\equiv M_{i}^{-1}\left ( mod \ b_{i} \right )&lt;/script&gt;&lt;p&gt;则&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
x=\sum_{i=1}^{n}M_{i}a_{i}r_{i}&lt;/script&gt;&lt;p&gt;且在&lt;em&gt;M&lt;/em&gt; 以内有唯一解&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="数论" scheme="http://yoursite.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="中国剩余定理" scheme="http://yoursite.com/tags/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P1273 有线电视网</title>
    <link href="http://yoursite.com/2018/07/19/%E6%B4%9B%E8%B0%B7P1273-%E6%9C%89%E7%BA%BF%E7%94%B5%E8%A7%86%E7%BD%91/"/>
    <id>http://yoursite.com/2018/07/19/洛谷P1273-有线电视网/</id>
    <published>2018-07-19T11:51:19.000Z</published>
    <updated>2018-07-19T11:58:01.338Z</updated>
    
    <content type="html"><![CDATA[<p>记<script type="math/tex">dp\left [  i\right ]\left [ j \right ]</script>为<em>i</em> 节点，取<em>j</em> 个能获得的最大收入<br>叶节点<script type="math/tex">dp\left [  i\right ]\left [ 1 \right ]=w\left [ i \right ]</script><br>转移方程</p><script type="math/tex; mode=display">dp\left [  x\right ]\left [ i \right ]=max\left \{ dp\left [ to \right ]\left [ j \right ]+dp\left [ x \right ]\left [ i-j \right ]-cost\left [ x \right ]\left [ to \right ] \right \}\left ( to\in x_{son} \right )</script><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">3050</span>,rt=<span class="number">1</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">20</span>;</span><br><span class="line"><span class="keyword">int</span> dp[N][N],n,m,sz[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[N],g[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[u].push_back(v);</span><br><span class="line">    g[u].push_back(val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (o&gt;n-m) sz[o]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;e[o].size();k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[o][k];</span><br><span class="line">        dfs(to);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=m;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=min(i,sz[to]);j++)</span><br><span class="line">                dp[o][i]=max(dp[o][i],dp[o][i-j]+dp[to][j]-g[o][k]);</span><br><span class="line">        sz[o]+=sz[to];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n-m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> T=read();</span><br><span class="line">        <span class="keyword">while</span> (T--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> u=i,v=read();</span><br><span class="line">            add(u,v,read());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++) dp[i][j]=-INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n-m+<span class="number">1</span>;i&lt;=n;i++) dp[i][<span class="number">1</span>]=read();</span><br><span class="line">    dfs(rt);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=m;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        <span class="keyword">if</span> (dp[rt][i]&gt;=<span class="number">0</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记&lt;script type=&quot;math/tex&quot;&gt;dp\left [  i\right ]\left [ j \right ]&lt;/script&gt;为&lt;em&gt;i&lt;/em&gt; 节点，取&lt;em&gt;j&lt;/em&gt; 个能获得的最大收入&lt;br&gt;叶节点&lt;script type=&quot;math/tex&quot;&gt;dp\left [  i\right ]\left [ 1 \right ]=w\left [ i \right ]&lt;/script&gt;&lt;br&gt;转移方程&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [  x\right ]\left [ i \right ]=max\left \{ dp\left [ to \right ]\left [ j \right ]+dp\left [ x \right ]\left [ i-j \right ]-cost\left [ x \right ]\left [ to \right ] \right \}\left ( to\in x_{son} \right )&lt;/script&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="动态规划" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="树形结构" scheme="http://yoursite.com/tags/%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84/"/>
    
      <category term="背包" scheme="http://yoursite.com/tags/%E8%83%8C%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>[TJOI2010]中位数</title>
    <link href="http://yoursite.com/2018/07/19/TJOI2010-%E4%B8%AD%E4%BD%8D%E6%95%B0/"/>
    <id>http://yoursite.com/2018/07/19/TJOI2010-中位数/</id>
    <published>2018-07-19T11:45:57.000Z</published>
    <updated>2018-07-19T11:50:54.490Z</updated>
    
    <content type="html"><![CDATA[<p>对顶堆的模板题<br>对顶堆为一个大根堆<em>A</em> ,和一个小根堆<em>B</em> ,分别维护一个序列的前一段和后一段<br>要求中位数，只需要将序列均分入两个堆中即可<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cmp</span>&#123;</span><span class="function"><span class="keyword">bool</span> <span class="title">operator</span> <span class="params">()</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> a&gt;b;&#125;&#125;;</span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>&gt; A;</span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;,cmp&gt; B;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,x;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">        B.push(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (B.size()&gt;A.size()) </span><br><span class="line">    &#123;</span><br><span class="line">        A.push(B.top());</span><br><span class="line">        B.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,x;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> str[<span class="number">10</span>];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,str);</span><br><span class="line">        <span class="keyword">if</span> (str[<span class="number">0</span>]==<span class="string">'a'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x),n++;</span><br><span class="line">            x&gt;A.top()?B.push(x):A.push(x);</span><br><span class="line">            <span class="keyword">while</span> (A.size()&gt;n/<span class="number">2</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                B.push(A.top());</span><br><span class="line">                A.pop();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (B.size()&gt;A.size()) </span><br><span class="line">            &#123;</span><br><span class="line">                A.push(B.top());</span><br><span class="line">                B.pop();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,A.top());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对顶堆的模板题&lt;br&gt;对顶堆为一个大根堆&lt;em&gt;A&lt;/em&gt; ,和一个小根堆&lt;em&gt;B&lt;/em&gt; ,分别维护一个序列的前一段和后一段&lt;br&gt;要求中位数，只需要将序列均分入两个堆中即可&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="堆" scheme="http://yoursite.com/tags/%E5%A0%86/"/>
    
  </entry>
  
  <entry>
    <title>严格次小生成树[BJWC2010]</title>
    <link href="http://yoursite.com/2018/07/19/%E4%B8%A5%E6%A0%BC%E6%AC%A1%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91-BJWC2010/"/>
    <id>http://yoursite.com/2018/07/19/严格次小生成树-BJWC2010/</id>
    <published>2018-07-19T11:32:32.000Z</published>
    <updated>2018-07-19T12:40:33.970Z</updated>
    
    <content type="html"><![CDATA[<p>首先要知道怎么求非严格次小生成树<br>记<script type="math/tex">max\left \{ u,v \right \}</script>为<em>u，v</em> 路径上的最大边权<br>先求一遍最小生成树，记权值为<em>mins</em><br>然后枚举所有不在树中的边<script type="math/tex">edge\left \{ u,v,val \right \}</script><br>非严格次小生成树的权值为<script type="math/tex">min\left \{ mins-max\left \{ u,v \right \} +val\right \}</script><br>用倍增或树剖都可以求</p><p>现在要求严格次小的<br>于是记录<script type="math/tex">\left \{ u,v \right \}</script>的次大边权，保证其严格小于最大值，记为<script type="math/tex">nxt\left \{ u,v \right \}</script><br>然后依旧是枚举所有不在树中的边<script type="math/tex">edge\left \{ u,v,val \right \}</script><br>若<script type="math/tex">val>max\left \{ u,v \right \}</script>，则为<script type="math/tex">mins-max\left \{ u,v \right \} +val</script>，否则为<script type="math/tex">mins-nxt\left \{ u,v \right \} +val</script><br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100050</span>,rt=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> LL INF=<span class="number">1L</span>L&lt;&lt;<span class="number">60</span>;</span><br><span class="line">LL mins=<span class="number">0</span>,ans=INF;</span><br><span class="line"><span class="keyword">int</span> fa[N][<span class="number">25</span>],w[N][<span class="number">25</span>],c[N][<span class="number">25</span>],<span class="built_in">log</span>[N];</span><br><span class="line"><span class="keyword">int</span> dep[N],n,m,f[N],used[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span><span class="keyword">int</span> u,v,val;&#125;t[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[N],g[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(edge a,edge b)</span></span>&#123;<span class="keyword">return</span> a.val&lt;b.val;&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> f[x]==x?x:f[x]=find(f[x]);&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">unite</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span>&#123;f[find(u)]=find(v);&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[u].push_back(v);</span><br><span class="line">    g[u].push_back(val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="built_in">log</span>[dep[o]];i++)</span><br><span class="line">    &#123;</span><br><span class="line">        fa[o][i]=fa[fa[o][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">        w[o][i]=max(w[o][i<span class="number">-1</span>],w[fa[o][i<span class="number">-1</span>]][i<span class="number">-1</span>]);</span><br><span class="line">        c[o][i]=max(c[o][i<span class="number">-1</span>],c[fa[o][i<span class="number">-1</span>]][i<span class="number">-1</span>]);</span><br><span class="line">        <span class="keyword">if</span> (w[o][i<span class="number">-1</span>]&lt;w[fa[o][i<span class="number">-1</span>]][i<span class="number">-1</span>])</span><br><span class="line">            c[o][i]=max(c[o][i],w[o][i<span class="number">-1</span>]);</span><br><span class="line">        <span class="keyword">if</span> (w[o][i<span class="number">-1</span>]&gt;w[fa[o][i<span class="number">-1</span>]][i<span class="number">-1</span>])</span><br><span class="line">            c[o][i]=max(c[o][i],w[fa[o][i<span class="number">-1</span>]][i<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[o].size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[o][i];</span><br><span class="line">        <span class="keyword">if</span> (!dep[to])</span><br><span class="line">        &#123;</span><br><span class="line">            dep[to]=dep[o]+<span class="number">1</span>;</span><br><span class="line">            fa[to][<span class="number">0</span>]=o;</span><br><span class="line">            w[to][<span class="number">0</span>]=g[o][i];</span><br><span class="line">            dfs(to);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (dep[u]&lt;dep[v]) swap(u,v);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="built_in">log</span>[dep[u]];i++)</span><br><span class="line">        <span class="keyword">if</span> (((dep[u]-dep[v])&gt;&gt;i)&amp;<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ret=max(ret,val!=w[u][i]?w[u][i]:c[u][i]);</span><br><span class="line">            u=fa[u][i];      </span><br><span class="line">        &#125; </span><br><span class="line">    <span class="keyword">if</span> (u==v) <span class="keyword">return</span> ret;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="built_in">log</span>[dep[u]];i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        <span class="keyword">if</span> (fa[u][i]!=fa[v][i])</span><br><span class="line">        &#123;</span><br><span class="line">            ret=max(ret,val!=w[u][i]?w[u][i]:c[u][i]);</span><br><span class="line">            ret=max(ret,val!=w[v][i]?w[v][i]:c[v][i]);</span><br><span class="line">            u=fa[u][i],v=fa[v][i];</span><br><span class="line">        &#125;</span><br><span class="line">    ret=max(ret,val!=w[u][<span class="number">0</span>]?w[u][<span class="number">0</span>]:c[u][<span class="number">0</span>]);</span><br><span class="line">    ret=max(ret,val!=w[v][<span class="number">0</span>]?w[v][<span class="number">0</span>]:c[v][<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">        <span class="built_in">log</span>[i]=<span class="built_in">log</span>[i<span class="number">-1</span>]+(<span class="number">1</span>&lt;&lt;<span class="built_in">log</span>[i<span class="number">-1</span>]==i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t[i].u=read();</span><br><span class="line">        t[i].v=read();</span><br><span class="line">        t[i].val=read();</span><br><span class="line">    &#125;</span><br><span class="line">    sort(t+<span class="number">1</span>,t+m+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) f[i]=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u=t[i].u,v=t[i].v;</span><br><span class="line">        <span class="keyword">if</span> (find(u)!=find(v))</span><br><span class="line">        &#123;</span><br><span class="line">            used[i]=<span class="number">1</span>;</span><br><span class="line">            add(u,v,t[i].val);</span><br><span class="line">            add(v,u,t[i].val);</span><br><span class="line">            unite(u,v);</span><br><span class="line">            mins+=t[i].val;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dep[rt]=<span class="number">1</span>,dfs(rt);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) </span><br><span class="line">        <span class="keyword">if</span> (!used[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> u=t[i].u,v=t[i].v;</span><br><span class="line">            <span class="keyword">int</span> val=calc(u,v,t[i].val);</span><br><span class="line">            ans=min(ans,mins-val+t[i].val);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先要知道怎么求非严格次小生成树&lt;br&gt;记&lt;script type=&quot;math/tex&quot;&gt;max\left \{ u,v \right \}&lt;/script&gt;为&lt;em&gt;u，v&lt;/em&gt; 路径上的最大边权&lt;br&gt;先求一遍最小生成树，记权值为&lt;em&gt;mins&lt;/em&gt;&lt;br&gt;然后枚举所有不在树中的边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ u,v,val \right \}&lt;/script&gt;&lt;br&gt;非严格次小生成树的权值为&lt;script type=&quot;math/tex&quot;&gt;min\left \{ mins-max\left \{ u,v \right \} +val\right \}&lt;/script&gt;&lt;br&gt;用倍增或树剖都可以求&lt;/p&gt;
&lt;p&gt;现在要求严格次小的&lt;br&gt;于是记录&lt;script type=&quot;math/tex&quot;&gt;\left \{ u,v \right \}&lt;/script&gt;的次大边权，保证其严格小于最大值，记为&lt;script type=&quot;math/tex&quot;&gt;nxt\left \{ u,v \right \}&lt;/script&gt;&lt;br&gt;然后依旧是枚举所有不在树中的边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ u,v,val \right \}&lt;/script&gt;&lt;br&gt;若&lt;script type=&quot;math/tex&quot;&gt;val&gt;max\left \{ u,v \right \}&lt;/script&gt;，则为&lt;script type=&quot;math/tex&quot;&gt;mins-max\left \{ u,v \right \} +val&lt;/script&gt;，否则为&lt;script type=&quot;math/tex&quot;&gt;mins-nxt\left \{ u,v \right \} +val&lt;/script&gt;&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="倍增" scheme="http://yoursite.com/tags/%E5%80%8D%E5%A2%9E/"/>
    
  </entry>
  
  <entry>
    <title>[USACO07NOV]奶牛接力Cow Relays</title>
    <link href="http://yoursite.com/2018/07/19/USACO07NOV-%E5%A5%B6%E7%89%9B%E6%8E%A5%E5%8A%9BCow-Relays/"/>
    <id>http://yoursite.com/2018/07/19/USACO07NOV-奶牛接力Cow-Relays/</id>
    <published>2018-07-19T11:19:20.000Z</published>
    <updated>2018-07-19T11:31:44.653Z</updated>
    
    <content type="html"><![CDATA[<p>记<script type="math/tex">dp\left [ t \right ]\left [ i \right ]\left [  j\right ]</script>为<em>i</em> 到<em>j</em> 经过<em>t</em> 条边的最短路<br>转移方程为</p><script type="math/tex; mode=display">dp\left [ t+1 \right ]\left [ i \right ]\left [  j\right ]=min\left \{ dp\left [ t \right ]\left [ i \right ]\left [ k \right ]+ d\left [ k \right ]\left [ j \right ]\right \}\left ( 1\leq k\leq n \right )</script><p><del>通过观察</del>，发现很像矩阵乘法，然后还满足交换律<br>因此</p><script type="math/tex; mode=display">dp\left [ t \right ]=dp\left [ 0 \right ]*D^{t}</script><p><script type="math/tex">dp\left [ 0 \right ]</script>矩阵中除<script type="math/tex">dp\left [ 0 \right ]\left [ st \right ]\left [ st \right ]= 0</script>，其它为<em>INF</em><br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">205</span>;</span><br><span class="line"><span class="keyword">const</span> LL INF=<span class="number">1L</span>L&lt;&lt;<span class="number">60</span>;</span><br><span class="line"><span class="keyword">int</span> pos[N&lt;&lt;<span class="number">10</span>],cnt=<span class="number">0</span>,n,m,st,ed;;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> Matrix</span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">mtrx</span>&#123;</span>LL w[N][N];&#125; d;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">fill</span><span class="params">(mtrx &amp;M,LL x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt;j++) M.w[i][j]=x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">cpy</span><span class="params">(mtrx &amp;M,mtrx &amp;C)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt;j++) </span><br><span class="line">                M.w[i][j]=C.w[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">mul</span><span class="params">(mtrx &amp;M,mtrx C)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        mtrx ret;</span><br><span class="line">        fill(ret,INF);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt;j++)</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=cnt;k++)</span><br><span class="line">                    ret.w[i][j]=min(ret.w[i][j],M.w[i][k]+C.w[k][j]);</span><br><span class="line">        cpy(M,ret);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pow</span><span class="params">(mtrx &amp;M,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        mtrx ret;</span><br><span class="line">        fill(ret,INF);</span><br><span class="line">        ret.w[pos[st]][pos[st]]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(;x;x&gt;&gt;=<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (x&amp;<span class="number">1</span>) mul(ret,M);</span><br><span class="line">            mul(M,M);</span><br><span class="line">        &#125;</span><br><span class="line">        cpy(M,ret);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Matrix;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read(),st=read(),ed=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;N;j++) d.w[i][j]=INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        LL val=read();</span><br><span class="line">        <span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">        <span class="keyword">if</span> (!pos[u]) pos[u]=++cnt;</span><br><span class="line">        <span class="keyword">if</span> (!pos[v]) pos[v]=++cnt;</span><br><span class="line">        u=pos[u],v=pos[v];</span><br><span class="line">        d.w[u][v]=d.w[v][u]=min(d.w[u][v],val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pow</span>(d,n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,d.w[pos[st]][pos[ed]]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记&lt;script type=&quot;math/tex&quot;&gt;dp\left [ t \right ]\left [ i \right ]\left [  j\right ]&lt;/script&gt;为&lt;em&gt;i&lt;/em&gt; 到&lt;em&gt;j&lt;/em&gt; 经过&lt;em&gt;t&lt;/em&gt; 条边的最短路&lt;br&gt;转移方程为&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [ t+1 \right ]\left [ i \right ]\left [  j\right ]=min\left \{ dp\left [ t \right ]\left [ i \right ]\left [ k \right ]+ d\left [ k \right ]\left [ j \right ]\right \}\left ( 1\leq k\leq n \right )&lt;/script&gt;&lt;p&gt;&lt;del&gt;通过观察&lt;/del&gt;，发现很像矩阵乘法，然后还满足交换律&lt;br&gt;因此&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [ t \right ]=dp\left [ 0 \right ]*D^{t}&lt;/script&gt;&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;dp\left [ 0 \right ]&lt;/script&gt;矩阵中除&lt;script type=&quot;math/tex&quot;&gt;dp\left [ 0 \right ]\left [ st \right ]\left [ st \right ]= 0&lt;/script&gt;，其它为&lt;em&gt;INF&lt;/em&gt;&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="动态规划" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="图论" scheme="http://yoursite.com/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="矩阵加速" scheme="http://yoursite.com/tags/%E7%9F%A9%E9%98%B5%E5%8A%A0%E9%80%9F/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P1891 疯狂LCM</title>
    <link href="http://yoursite.com/2018/07/19/%E6%B4%9B%E8%B0%B7P1891-%E7%96%AF%E7%8B%82LCM/"/>
    <id>http://yoursite.com/2018/07/19/洛谷P1891-疯狂LCM/</id>
    <published>2018-07-19T10:26:25.000Z</published>
    <updated>2018-07-19T11:18:34.123Z</updated>
    
    <content type="html"><![CDATA[<p><em>lcm</em> 过大无法枚举，考虑枚举<em>gcd</em><br>对于一组<script type="math/tex">gcd\left ( x,n \right )=k</script>，有<script type="math/tex">gcd\left ( \frac{x}{k},\frac{n}{k} \right )=1</script>，且<script type="math/tex">lcm\left(x,n\right)=\frac{xn}{k}</script><br>记</p><script type="math/tex; mode=display">f\left [ k \right ]=\sum_{i=1}^{k}i\left [ gcd\left ( i,k \right )=1 \right ]</script><p>根据定义，若<script type="math/tex">gcd\left ( x,n \right )=1</script>，则<script type="math/tex">gcd\left ( n-x,n \right )=1</script><br>因此</p><script type="math/tex; mode=display">f\left [ k \right ]= \frac{k*\varphi\left [ k \right ]}{2}</script><p>枚举所有的<em>k</em><br>则</p><script type="math/tex; mode=display">\sum lcm\left ( x,n \right )=k*\frac{n}{k}*f\left [ \frac{n}{k} \right ]\left ( k|n,gcd\left ( x,n \right )=k \right )</script><p>复杂度<script type="math/tex">O\left ( T\sqrt{N} \right )</script><br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000050</span>;</span><br><span class="line"><span class="keyword">int</span> phi[N],prime[N],cnt=<span class="number">0</span>;</span><br><span class="line">LL f[N],w[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> ((ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&amp;&amp;ch!=<span class="string">'-'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) &#123;t=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) &#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    phi[<span class="number">1</span>]=f[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!phi[i]) prime[++cnt]=i,phi[i]=i<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i*prime[j]&gt;N) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span> (i%prime[j]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                phi[i*prime[j]]=phi[i]*prime[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> phi[i*prime[j]]=phi[i]*(prime[j]<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(LL i=<span class="number">2</span>;i&lt;N;i++) f[i]=i*phi[i]/<span class="number">2</span>*i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">int</span> T=read();</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n=read(),num=<span class="number">0</span>;</span><br><span class="line">        LL ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i*i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">if</span> (n%i==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                w[++num]=i;</span><br><span class="line">                <span class="keyword">if</span> (i*i!=n) w[++num]=n/i;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=num;i++) ans+=f[n/w[i]]*w[i];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;lcm&lt;/em&gt; 过大无法枚举，考虑枚举&lt;em&gt;gcd&lt;/em&gt;&lt;br&gt;对于一组&lt;script type=&quot;math/tex&quot;&gt;gcd\left ( x,n \right )=k&lt;/script&gt;，有&lt;script type=&quot;math/tex&quot;&gt;gcd\left ( \frac{x}{k},\frac{n}{k} \right )=1&lt;/script&gt;，且&lt;script type=&quot;math/tex&quot;&gt;lcm\left(x,n\right)=\frac{xn}{k}&lt;/script&gt;&lt;br&gt;记&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
f\left [ k \right ]=\sum_{i=1}^{k}i\left [ gcd\left ( i,k \right )=1 \right ]&lt;/script&gt;&lt;p&gt;根据定义，若&lt;script type=&quot;math/tex&quot;&gt;gcd\left ( x,n \right )=1&lt;/script&gt;，则&lt;script type=&quot;math/tex&quot;&gt;gcd\left ( n-x,n \right )=1&lt;/script&gt;&lt;br&gt;因此&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
f\left [ k \right ]= \frac{k*\varphi\left [ k \right ]}{2}&lt;/script&gt;&lt;p&gt;枚举所有的&lt;em&gt;k&lt;/em&gt;&lt;br&gt;则&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\sum lcm\left ( x,n \right )=k*\frac{n}{k}*f\left [ \frac{n}{k} \right ]\left ( k|n,gcd\left ( x,n \right )=k \right )&lt;/script&gt;&lt;p&gt;复杂度&lt;script type=&quot;math/tex&quot;&gt;O\left ( T\sqrt{N} \right )&lt;/script&gt;&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="数论" scheme="http://yoursite.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P2398 GCD SUM</title>
    <link href="http://yoursite.com/2018/07/15/%E6%B4%9B%E8%B0%B7P2398-GCD-SUM/"/>
    <id>http://yoursite.com/2018/07/15/洛谷P2398-GCD-SUM/</id>
    <published>2018-07-15T10:52:09.000Z</published>
    <updated>2018-07-15T11:46:07.758Z</updated>
    
    <content type="html"><![CDATA[<p>直接计算复杂度过高无法接受<br>考虑枚举所有<script type="math/tex">gcd</script>值计算<br>若<script type="math/tex">gcd=k</script><br>对于所有<script type="math/tex">gcd\left ( x,y \right )=1</script>，有<script type="math/tex">gcd\left ( xk,yk \right )=k\left ( xk\leq n,yk\leq n \right )</script><br>所以<script type="math/tex">gcd=k</script>的个数为</p><script type="math/tex; mode=display">2\sum_{i=1}^{\left \lfloor \frac{n}{k} \right \rfloor}\varphi \left ( i \right )-1</script><p>复杂度<script type="math/tex">O\left (N \right )</script></p><p>还有一种更妙的做法<br>设<script type="math/tex">f\left [ k \right ]</script>为<script type="math/tex">gcd=k</script>的个数<br>设<script type="math/tex">g\left [ k \right ]</script>为<script type="math/tex">k|gcd</script>的个数</p><script type="math/tex; mode=display">g\left [ k \right ]=\sum_{i=1}^{\left \lfloor \frac{n}{k} \right \rfloor}f\left [ ik \right ]=\left [ \frac{n}{k} \right ]^{2}</script><script type="math/tex; mode=display">f\left [ k \right ]=g\left [ k \right ]-\sum_{i=2}^{\left \lfloor \frac{n}{k} \right \rfloor}f\left [ ik \right ]</script><p>倒序计算即可<br>复杂度<script type="math/tex">O\left ( NlogN \right )</script><br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100050</span>;</span><br><span class="line"><span class="keyword">int</span> prime[N],cnt=<span class="number">0</span>,phi[N];</span><br><span class="line">LL n,sum[N],ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    phi[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!phi[i]) prime[++cnt]=i,phi[i]=i<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (prime[j]*i&gt;n) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span> (i%prime[j]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                phi[i*prime[j]]=phi[i]*prime[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> phi[i*prime[j]]=phi[i]*(prime[j]<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) sum[i]=sum[i<span class="number">-1</span>]+phi[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">for</span>(LL i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">        ans+=(sum[n/i]*<span class="number">2</span><span class="number">-1</span>)*i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100050</span>;</span><br><span class="line">LL n,f[N],g[N],ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(LL i=<span class="number">1</span>;i&lt;=n;i++) g[i]=(n/i)*(n/i);</span><br><span class="line">    <span class="keyword">for</span>(LL i=n;i&gt;<span class="number">0</span>;i--) </span><br><span class="line">    &#123;</span><br><span class="line">    f[i]=g[i];</span><br><span class="line">    <span class="keyword">for</span>(LL j=<span class="number">2</span>;i*j&lt;=n;j++) f[i]-=f[i*j];</span><br><span class="line">    ans+=f[i]*i; </span><br><span class="line">&#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;直接计算复杂度过高无法接受&lt;br&gt;考虑枚举所有&lt;script type=&quot;math/tex&quot;&gt;gcd&lt;/script&gt;值计算&lt;br&gt;若&lt;script type=&quot;math/tex&quot;&gt;gcd=k&lt;/script&gt;&lt;br&gt;对于所有&lt;script type=&quot;math/tex&quot;&gt;gcd\left ( x,y \right )=1&lt;/script&gt;，有&lt;script type=&quot;math/tex&quot;&gt;gcd\left ( xk,yk \right )=k\left ( xk\leq n,yk\leq n \right )&lt;/script&gt;&lt;br&gt;所以&lt;script type=&quot;math/tex&quot;&gt;gcd=k&lt;/script&gt;的个数为&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
2\sum_{i=1}^{\left \lfloor \frac{n}{k} \right \rfloor}\varphi \left ( i \right )-1&lt;/script&gt;&lt;p&gt;复杂度&lt;script type=&quot;math/tex&quot;&gt;O\left (N \right )&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;还有一种更妙的做法&lt;br&gt;设&lt;script type=&quot;math/tex&quot;&gt;f\left [ k \right ]&lt;/script&gt;为&lt;script type=&quot;math/tex&quot;&gt;gcd=k&lt;/script&gt;的个数&lt;br&gt;设&lt;script type=&quot;math/tex&quot;&gt;g\left [ k \right ]&lt;/script&gt;为&lt;script type=&quot;math/tex&quot;&gt;k|gcd&lt;/script&gt;的个数&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
g\left [ k \right ]=\sum_{i=1}^{\left \lfloor \frac{n}{k} \right \rfloor}f\left [ ik \right ]=\left [ \frac{n}{k} \right ]^{2}&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
f\left [ k \right ]=g\left [ k \right ]-\sum_{i=2}^{\left \lfloor \frac{n}{k} \right \rfloor}f\left [ ik \right ]&lt;/script&gt;&lt;p&gt;倒序计算即可&lt;br&gt;复杂度&lt;script type=&quot;math/tex&quot;&gt;O\left ( NlogN \right )&lt;/script&gt;&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="数论" scheme="http://yoursite.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P2801 教主的魔法</title>
    <link href="http://yoursite.com/2018/07/15/%E6%B4%9B%E8%B0%B7P2801-%E6%95%99%E4%B8%BB%E7%9A%84%E9%AD%94%E6%B3%95/"/>
    <id>http://yoursite.com/2018/07/15/洛谷P2801-教主的魔法/</id>
    <published>2018-07-15T10:23:14.000Z</published>
    <updated>2018-07-15T11:45:46.672Z</updated>
    
    <content type="html"><![CDATA[<p>想了好久发现套不了数据结构。<br>然后看了看数据范围用了分块。<br>分成<script type="math/tex">\sqrt{n }</script>个块，块内保持有序<br>对于<em>M</em> 操作，覆盖整块就打标记，否则暴力更新并重新排序<br>对于<em>A</em> 操作，覆盖整块就二分查找，否则暴力查找<br>复杂度<script type="math/tex">O\left ( QlogN \sqrt{N} \right )</script><br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1050</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,num,c[N][N],id[N][N],w[N],st[N],ed[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> ((ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&amp;&amp;ch!=<span class="string">'-'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) &#123;t=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) &#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">get</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (!((<span class="string">'a'</span>&lt;=ch&amp;&amp;ch&lt;=<span class="string">'z'</span>)||(<span class="string">'A'</span>&lt;=ch&amp;&amp;ch&lt;=<span class="string">'Z'</span>))) ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qsort</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=l,j=r,mid=c[k][id[k][(l+r)&gt;&gt;<span class="number">1</span>]];</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (c[k][id[k][i]]&lt;mid) i++;</span><br><span class="line">        <span class="keyword">while</span> (c[k][id[k][j]]&gt;mid) j--;</span><br><span class="line">        <span class="keyword">if</span> (i&lt;=j) swap(id[k][i],id[k][j]),i++,j--;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">while</span> (i&lt;=j);</span><br><span class="line">    <span class="keyword">if</span> (i&lt;r) qsort(k,i,r);</span><br><span class="line">    <span class="keyword">if</span> (l&lt;j) qsort(k,l,j);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> L=<span class="number">1</span>,R=ed[k]-st[k]+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (L&lt;R)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(L+R)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (c[k][id[k][mid]]+w[k]&lt;x)</span><br><span class="line">            L=mid+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            R=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (L+R)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    num=<span class="built_in">sqrt</span>(n)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=num;i++) st[i]=n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,cnt=<span class="number">0</span>;i&lt;=n;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        st[i/num]=min(st[i/num],i);</span><br><span class="line">        ed[i/num]=max(ed[i/num],i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        c[i/num][i-st[i/num]+<span class="number">1</span>]=read();</span><br><span class="line">        id[i/num][i-st[i/num]+<span class="number">1</span>]=i-st[i/num]+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=num;i++) qsort(i,<span class="number">1</span>,ed[i]-st[i]+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> opt=get();</span><br><span class="line">        <span class="keyword">int</span> ql=read(),qr=read(),x=read();</span><br><span class="line">        <span class="keyword">if</span> (opt==<span class="string">'M'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=ql;i&lt;=min(qr,ed[ql/num]);i++) c[i/num][i-st[i/num]+<span class="number">1</span>]+=x;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=ql/num+<span class="number">1</span>;i&lt;qr/num;i++) w[i]+=x;</span><br><span class="line">            <span class="keyword">if</span> (ql/num!=qr/num) </span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=st[qr/num];i&lt;=qr;i++) c[i/num][i-st[i/num]+<span class="number">1</span>]+=x;</span><br><span class="line">            qsort(ql/num,<span class="number">1</span>,ed[ql/num]-st[ql/num]+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (ql/num!=qr/num) qsort(qr/num,<span class="number">1</span>,ed[qr/num]-st[qr/num]+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=ql;i&lt;=min(qr,ed[ql/num]);i++) </span><br><span class="line">                <span class="keyword">if</span> (c[i/num][i-st[i/num]+<span class="number">1</span>]+w[i/num]&gt;=x) ans++;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=ql/num+<span class="number">1</span>;i&lt;qr/num;i++) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (c[i][id[i][ed[i]-st[i]+<span class="number">1</span>]]+w[i]&lt;x) <span class="keyword">continue</span>;</span><br><span class="line">                ans+=(ed[i]-st[i]+<span class="number">1</span>)-find(i,x)+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (ql/num!=qr/num)</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=st[qr/num];i&lt;=qr;i++) </span><br><span class="line">                    <span class="keyword">if</span> (c[i/num][i-st[i/num]+<span class="number">1</span>]+w[i/num]&gt;=x) ans++;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;想了好久发现套不了数据结构。&lt;br&gt;然后看了看数据范围用了分块。&lt;br&gt;分成&lt;script type=&quot;math/tex&quot;&gt;\sqrt{n }&lt;/script&gt;个块，块内保持有序&lt;br&gt;对于&lt;em&gt;M&lt;/em&gt; 操作，覆盖整块就打标记，否则暴力更新并重新排序&lt;br&gt;对于&lt;em&gt;A&lt;/em&gt; 操作，覆盖整块就二分查找，否则暴力查找&lt;br&gt;复杂度&lt;script type=&quot;math/tex&quot;&gt;O\left ( QlogN \sqrt{N} \right )&lt;/script&gt;&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="分块" scheme="http://yoursite.com/tags/%E5%88%86%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>[CQOI2007]余数求和</title>
    <link href="http://yoursite.com/2018/07/15/CQOI2007-%E4%BD%99%E6%95%B0%E6%B1%82%E5%92%8C/"/>
    <id>http://yoursite.com/2018/07/15/CQOI2007-余数求和/</id>
    <published>2018-07-15T10:06:58.000Z</published>
    <updated>2018-07-15T10:21:30.451Z</updated>
    
    <content type="html"><![CDATA[<script type="math/tex; mode=display">k\ mod \ i=k-\left \lfloor \frac{k}{i} \right \rfloor*i</script><script type="math/tex; mode=display">\sum_{i=1}^{n}k \ mod \ i=\sum_{i=1}^{n}\left ( k-\left \lfloor \frac{k}{i} \right \rfloor*i \right )=nk-\sum_{i=1}^{n}\left ( \left \lfloor \frac{k}{i} \right \rfloor*i \right )</script><p>分块求解即可<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">LL n,k,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;n,&amp;k);</span><br><span class="line">    LL sz=<span class="built_in">sqrt</span>(k);</span><br><span class="line">    <span class="keyword">for</span>(LL i=<span class="number">1</span>;k/i&gt;sz;i++) ans-=i*(k/i);</span><br><span class="line">    <span class="keyword">for</span>(LL i=sz;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        LL L=k/(i+<span class="number">1</span>)+<span class="number">1</span>,R=min(n,k/i);</span><br><span class="line">        ans-=(L+R)*(R-L+<span class="number">1</span>)/<span class="number">2</span>*i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans+n*k);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;math/tex; mode=display&quot;&gt;
k\ mod \ i=k-\left \lfloor \frac{k}{i} \right \rfloor*i&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\sum_{i=1}^{n}k \ mod \ i=\sum_{i=1}^{n}\left ( k-\left \lfloor \frac{k}{i} \right \rfloor*i \right )=nk-\sum_{i=1}^{n}\left ( \left \lfloor \frac{k}{i} \right \rfloor*i \right )&lt;/script&gt;&lt;p&gt;分块求解即可&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="数论" scheme="http://yoursite.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="分块" scheme="http://yoursite.com/tags/%E5%88%86%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P1108 低价购买</title>
    <link href="http://yoursite.com/2018/07/13/%E6%B4%9B%E8%B0%B7P1108-%E4%BD%8E%E4%BB%B7%E8%B4%AD%E4%B9%B0/"/>
    <id>http://yoursite.com/2018/07/13/洛谷P1108-低价购买/</id>
    <published>2018-07-13T12:42:45.000Z</published>
    <updated>2018-07-15T11:47:05.123Z</updated>
    
    <content type="html"><![CDATA[<p><em>dp</em> 数组记录方案数，<em>f</em> 数组记录购买次数</p><script type="math/tex; mode=display">dp\left [ i \right ]=\sum_{j=1}^{i-1}dp\left [ j \right ] \ \ \ \left  ( f\left [ j \right ]+1=f\left [ i \right ] ,w\left [ j \right ]<w\left [ i \right ]\right )</script><p>同时去重</p><script type="math/tex; mode=display">dp\left [ j \right ]=0 \ \ \left ( j< i,f\left [ i \right ] = f\left [ j \right ],w\left [ i \right ] = w\left [ j \right ]\right )</script><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">5050</span>;</span><br><span class="line"><span class="keyword">int</span> n,w[N],dp[N],f[N],maxs,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;w[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) dp[i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;j++)</span><br><span class="line">            <span class="keyword">if</span> (w[j]&gt;w[i]) dp[i]=max(dp[i],dp[j]+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) maxs=max(dp[i],maxs);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d "</span>,maxs);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">        <span class="keyword">if</span> (dp[i]==<span class="number">1</span>) f[i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (dp[j]+<span class="number">1</span>==dp[i]&amp;&amp;w[i]&lt;w[j]) f[i]+=f[j];</span><br><span class="line">            <span class="keyword">if</span> (dp[i]==dp[j]&amp;&amp;w[i]==w[j]) f[j]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span> (dp[i]==maxs) ans+=f[i];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;dp&lt;/em&gt; 数组记录方案数，&lt;em&gt;f&lt;/em&gt; 数组记录购买次数&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [ i \right ]=\sum_{j=1}^{i-1}dp\left [ j \right ] \ \ \ \left  ( f\left [ j \right ]+1=f\left [ i \right ] ,w\left [ j \right ]&lt;w\left [ i \right ]\right )&lt;/script&gt;&lt;p&gt;同时去重&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
dp\left [ j \right ]=0 \ \ \left ( j&lt; i,f\left [ i \right ] = f\left [ j \right ],w\left [ i \right ] = w\left [ j \right ]\right )&lt;/script&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="动态规划" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>[TJOI2015]线性代数</title>
    <link href="http://yoursite.com/2018/07/13/TJOI2015-%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
    <id>http://yoursite.com/2018/07/13/TJOI2015-线性代数/</id>
    <published>2018-07-13T12:25:32.000Z</published>
    <updated>2018-07-13T12:58:32.517Z</updated>
    
    <content type="html"><![CDATA[<p><del>首先要看得懂题目</del><br>同时取<em>A</em> 中的<em>i,j</em> 两点可获得<script type="math/tex">b\left [ i \right ]\left [j \right ]+b\left [ j \right ]\left [i \right ]</script>，但要减去<script type="math/tex">c\left [ i \right ]+c\left [ j \right ]</script><br>记<script type="math/tex">edge\left \{ u,v,capacity,cost \right \}</script>为一条从<em>u</em> 到<em>v</em> 的，流量为<em>cap</em> 的，费用为<em>cost</em> 的弧与反弧<br>转化成最小割<br>对于<em>B</em> 中每个二元组<script type="math/tex">\left ( i,j \right )</script>，连边<script type="math/tex">edge\left \{ S,\left ( i,j \right ), b\left [ i \right ]\left [j \right ]+b\left [ j \right ]\left [i \right ]\right \}</script>，<script type="math/tex">edge\left \{ \left ( i,j \right ),i, INF\right \}</script>和<script type="math/tex">edge\left \{ \left ( i,j \right ),j, INF\right \}</script><br><em>i= j</em> 的情况需要特殊处理<br>对于<em>C</em> 中的第<em>k</em> 个元素，连边<script type="math/tex">edge\left \{ k,T, c\left [ k \right ]\right \}</script></p><p>关于网络流，应该在这里就要暂告一段落了<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M=<span class="number">500050</span>,N=<span class="number">1005</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">25</span>;</span><br><span class="line"><span class="keyword">int</span> n,sum=<span class="number">0</span>,st,ed,w[N][N],c[N];</span><br><span class="line"><span class="keyword">int</span> head[N*N],cnt=<span class="number">0</span>,d[N*N],cur[N*N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span><span class="keyword">int</span> to,next,flow,cap;&#125; e[M&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">F</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;<span class="keyword">return</span> (x<span class="number">-1</span>)*n+y;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> cap)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[cnt].next=head[u];</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">    e[cnt].to=v;</span><br><span class="line">    e[cnt++].cap=cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty()) Q.pop();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*n+n+<span class="number">2</span>;i++) d[i]=<span class="number">0</span>;</span><br><span class="line">    d[s]=<span class="number">1</span>,Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty()&amp;&amp;!d[t])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();Q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];~i;i=e[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">            <span class="keyword">if</span> (e[i].flow&lt;e[i].cap&amp;&amp;!d[to])</span><br><span class="line">            &#123;</span><br><span class="line">                d[to]=d[x]+<span class="number">1</span>;</span><br><span class="line">                Q.push(to);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> d[t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> t,<span class="keyword">int</span> flow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!flow||x==t) <span class="keyword">return</span> flow;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>,new_flow;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> &amp;i=cur[x];~i&amp;&amp;flow;i=e[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">        <span class="keyword">if</span> (d[x]+<span class="number">1</span>==d[to])</span><br><span class="line">        &#123;</span><br><span class="line">            new_flow=dfs(to,t,min(flow,e[i].cap-e[i].flow));</span><br><span class="line">            e[i].flow+=new_flow;</span><br><span class="line">            e[i^<span class="number">1</span>].flow-=new_flow;</span><br><span class="line">            ret+=new_flow;</span><br><span class="line">            flow-=new_flow;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Dinic</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (bfs(s,t))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*n+n+<span class="number">2</span>;i++) cur[i]=head[i];</span><br><span class="line">        ret+=dfs(s,t,INF);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) </span><br><span class="line">            sum+=w[i][j]=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) c[i]=read();</span><br><span class="line">    st=n*n+n+<span class="number">1</span>,ed=st+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*n+n+<span class="number">2</span>;i++) head[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            add(st,F(i,j),w[i][j]+w[j][i]);</span><br><span class="line">            add(F(i,j),st,<span class="number">0</span>);</span><br><span class="line">            add(F(i,j),n*n+i,INF);</span><br><span class="line">            add(n*n+i,F(i,j),<span class="number">0</span>);</span><br><span class="line">            add(F(i,j),n*n+j,INF);</span><br><span class="line">            add(n*n+j,F(i,j),<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        add(st,F(i,i),w[i][i]);</span><br><span class="line">        add(F(i,i),st,<span class="number">0</span>);</span><br><span class="line">        add(F(i,i),n*n+i,INF);</span><br><span class="line">        add(n*n+i,F(i,i),<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        add(n*n+i,ed,c[i]);</span><br><span class="line">        add(ed,n*n+i,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum-Dinic(st,ed));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;首先要看得懂题目&lt;/del&gt;&lt;br&gt;同时取&lt;em&gt;A&lt;/em&gt; 中的&lt;em&gt;i,j&lt;/em&gt; 两点可获得&lt;script type=&quot;math/tex&quot;&gt;b\left [ i \right ]\left [j \right ]+b\left [ j \right ]\left [i \right ]&lt;/script&gt;，但要减去&lt;script type=&quot;math/tex&quot;&gt;c\left [ i \right ]+c\left [ j \right ]&lt;/script&gt;&lt;br&gt;记&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ u,v,capacity,cost \right \}&lt;/script&gt;为一条从&lt;em&gt;u&lt;/em&gt; 到&lt;em&gt;v&lt;/em&gt; 的，流量为&lt;em&gt;cap&lt;/em&gt; 的，费用为&lt;em&gt;cost&lt;/em&gt; 的弧与反弧&lt;br&gt;转化成最小割&lt;br&gt;对于&lt;em&gt;B&lt;/em&gt; 中每个二元组&lt;script type=&quot;math/tex&quot;&gt;\left ( i,j \right )&lt;/script&gt;，连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ S,\left ( i,j \right ), b\left [ i \right ]\left [j \right ]+b\left [ j \right ]\left [i \right ]\right \}&lt;/script&gt;，&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ \left ( i,j \right ),i, INF\right \}&lt;/script&gt;和&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ \left ( i,j \right ),j, INF\right \}&lt;/script&gt;&lt;br&gt;&lt;em&gt;i= j&lt;/em&gt; 的情况需要特殊处理&lt;br&gt;对于&lt;em&gt;C&lt;/em&gt; 中的第&lt;em&gt;k&lt;/em&gt; 个元素，连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ k,T, c\left [ k \right ]\right \}&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;关于网络流，应该在这里就要暂告一段落了&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="最小割" scheme="http://yoursite.com/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P3355 骑士共存问题</title>
    <link href="http://yoursite.com/2018/07/13/%E6%B4%9B%E8%B0%B7P3355-%E9%AA%91%E5%A3%AB%E5%85%B1%E5%AD%98%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/07/13/洛谷P3355-骑士共存问题/</id>
    <published>2018-07-13T12:16:17.000Z</published>
    <updated>2018-07-13T12:24:58.743Z</updated>
    
    <content type="html"><![CDATA[<p>和上一题一样的套路<br>最多骑士数=总骑士数-最少拿走的骑士数<br>二染色之后构图<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">205</span>,M=<span class="number">800000</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">25</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dx[]=&#123;<span class="number">-2</span>,<span class="number">-2</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dy[]=&#123;<span class="number">1</span>,<span class="number">-1</span>,<span class="number">2</span>,<span class="number">-2</span>,<span class="number">2</span>,<span class="number">-2</span>,<span class="number">1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n,m,st,ed,used[N][N],head[N*N],cnt=<span class="number">0</span>,cur[N*N],d[N*N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span><span class="keyword">int</span> to,next,cap,flow;&#125; e[M];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">F</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;<span class="keyword">return</span> n*(x<span class="number">-1</span>)+y;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> cap)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[cnt].next=head[u];</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">    e[cnt].to=v;</span><br><span class="line">    e[cnt++].cap=cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty()) Q.pop();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*n+<span class="number">2</span>;i++) d[i]=<span class="number">0</span>;</span><br><span class="line">    d[s]=<span class="number">1</span>,Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty()&amp;&amp;!d[t])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();Q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];~i;i=e[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">            <span class="keyword">if</span> (e[i].flow&lt;e[i].cap&amp;&amp;!d[to])</span><br><span class="line">            &#123;</span><br><span class="line">                d[to]=d[x]+<span class="number">1</span>;</span><br><span class="line">                Q.push(to);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> d[t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> t,<span class="keyword">int</span> flow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!flow||x==t) <span class="keyword">return</span> flow;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>,new_flow;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span>&amp; i=cur[x];~i&amp;&amp;flow;i=e[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">        <span class="keyword">if</span> (d[x]+<span class="number">1</span>==d[to])</span><br><span class="line">        &#123;</span><br><span class="line">            new_flow=dfs(to,t,min(flow,e[i].cap-e[i].flow));</span><br><span class="line">            e[i].flow+=new_flow;</span><br><span class="line">            e[i^<span class="number">1</span>].flow-=new_flow;</span><br><span class="line">            ret+=new_flow;</span><br><span class="line">            flow-=new_flow;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Dinic</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (bfs(s,t))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*n+<span class="number">2</span>;i++) cur[i]=head[i];</span><br><span class="line">        ret+=dfs(s,t,INF);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=read(),y=read();</span><br><span class="line">        used[x][y]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    st=n*n+<span class="number">1</span>,ed=n*n+<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*n+<span class="number">2</span>;i++) head[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) <span class="keyword">if</span> (!used[i][j])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> idx=F(i,j);</span><br><span class="line">            <span class="keyword">if</span> ((i+j)&amp;<span class="number">1</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                add(st,idx,<span class="number">1</span>),add(idx,st,<span class="number">0</span>);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">8</span>;k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> x=i+dx[k],y=j+dy[k];</span><br><span class="line">                    <span class="keyword">if</span> (<span class="number">0</span>&lt;x&amp;&amp;x&lt;=n&amp;&amp;<span class="number">0</span>&lt;y&amp;&amp;y&lt;=n)</span><br><span class="line">                        <span class="keyword">if</span> (!used[x][y])</span><br><span class="line">                        &#123;</span><br><span class="line">                            add(idx,F(x,y),INF);</span><br><span class="line">                            add(F(x,y),idx,<span class="number">0</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> add(idx,ed,<span class="number">1</span>),add(ed,idx,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,n*n-m-Dinic(st,ed));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;和上一题一样的套路&lt;br&gt;最多骑士数=总骑士数-最少拿走的骑士数&lt;br&gt;二染色之后构图&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="最小割" scheme="http://yoursite.com/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P2774 方格取数问题</title>
    <link href="http://yoursite.com/2018/07/13/%E6%B4%9B%E8%B0%B7P2774-%E6%96%B9%E6%A0%BC%E5%8F%96%E6%95%B0%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/07/13/洛谷P2774-方格取数问题/</id>
    <published>2018-07-13T12:10:05.000Z</published>
    <updated>2018-07-13T12:04:08.140Z</updated>
    
    <content type="html"><![CDATA[<p>最大和=全局和-舍弃和，而舍弃和=最小割=最大流<br>记<script type="math/tex">edge\left \{ u,v,capacity,cost \right \}​</script>为一条从<em>u</em> 到<em>v</em> 的，流量为<em>cap</em> 的，费用为<em>cost</em> 的弧与反弧<br>将图二染色<br>对于每个黑点<em>u</em> ，连边 <script type="math/tex">edge\left \{ S,u,w\left [ u \right ] \right \}</script><br>对于每个白点<em>v</em> ，连边<script type="math/tex">edge\left \{ v,T,w\left [ v \right ] \right \}</script><br>对于每个黑点<em>u</em> ，像周围白点<em>v</em> 连边<script type="math/tex">edge\left \{ u,v,INF \right \}</script><br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">105</span>,M=<span class="number">100000</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">30</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dx[]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dy[]=&#123;<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n,m,st,ed,sum=<span class="number">0</span>,w[N][N];</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>,head[N*N],d[N*N],cur[N*N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span><span class="keyword">int</span> to,next,flow,cap;&#125; e[M&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">F</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;<span class="keyword">return</span> m*(x<span class="number">-1</span>)+y;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> cap)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[cnt].next=head[u];</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">    e[cnt].to=v;</span><br><span class="line">    e[cnt++].cap=cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty()) Q.pop();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*m+<span class="number">2</span>;i++) d[i]=<span class="number">0</span>;</span><br><span class="line">    d[s]=<span class="number">1</span>,Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();Q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];~i;i=e[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">            <span class="keyword">if</span> (e[i].flow&lt;e[i].cap&amp;&amp;!d[to])</span><br><span class="line">            &#123;</span><br><span class="line">                d[to]=d[x]+<span class="number">1</span>;</span><br><span class="line">                Q.push(to);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> d[t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> t,<span class="keyword">int</span> flow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!flow||x==t) <span class="keyword">return</span> flow;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>,new_flow;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> &amp;i=cur[x];~i&amp;&amp;flow;i=e[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> to=e[i].to;</span><br><span class="line">        <span class="keyword">if</span> (d[x]+<span class="number">1</span>==d[to])</span><br><span class="line">        &#123;</span><br><span class="line">            new_flow=dfs(to,t,min(flow,e[i].cap-e[i].flow));</span><br><span class="line">            e[i].flow+=new_flow;</span><br><span class="line">            e[i^<span class="number">1</span>].flow-=new_flow;</span><br><span class="line">            ret+=new_flow;</span><br><span class="line">            flow-=new_flow;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Dinic</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (bfs(s,t))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*m+<span class="number">2</span>;i++) cur[i]=head[i];</span><br><span class="line">        ret+=dfs(s,t,INF);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++) </span><br><span class="line">            sum+=w[i][j]=read();</span><br><span class="line">    st=n*m+<span class="number">1</span>,ed=st+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*m+<span class="number">2</span>;i++) head[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="keyword">if</span> ((i+j)&amp;<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                add(st,F(i,j),w[i][j]);</span><br><span class="line">                add(F(i,j),st,<span class="number">0</span>);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">4</span>;k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> x=i+dx[k],y=j+dy[k];</span><br><span class="line">                    <span class="keyword">if</span> (<span class="number">0</span>&lt;x&amp;&amp;x&lt;=n&amp;&amp;<span class="number">0</span>&lt;y&amp;&amp;y&lt;=m)</span><br><span class="line">                    &#123;</span><br><span class="line">                        add(F(i,j),F(x,y),INF);</span><br><span class="line">                        add(F(x,y),F(i,j),<span class="number">0</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                add(F(i,j),ed,w[i][j]);</span><br><span class="line">                add(ed,F(i,j),<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum-Dinic(st,ed));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最大和=全局和-舍弃和，而舍弃和=最小割=最大流&lt;br&gt;记&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ u,v,capacity,cost \right \}​&lt;/script&gt;为一条从&lt;em&gt;u&lt;/em&gt; 到&lt;em&gt;v&lt;/em&gt; 的，流量为&lt;em&gt;cap&lt;/em&gt; 的，费用为&lt;em&gt;cost&lt;/em&gt; 的弧与反弧&lt;br&gt;将图二染色&lt;br&gt;对于每个黑点&lt;em&gt;u&lt;/em&gt; ，连边 &lt;script type=&quot;math/tex&quot;&gt;edge\left \{ S,u,w\left [ u \right ] \right \}&lt;/script&gt;&lt;br&gt;对于每个白点&lt;em&gt;v&lt;/em&gt; ，连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ v,T,w\left [ v \right ] \right \}&lt;/script&gt;&lt;br&gt;对于每个黑点&lt;em&gt;u&lt;/em&gt; ，像周围白点&lt;em&gt;v&lt;/em&gt; 连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ u,v,INF \right \}&lt;/script&gt;&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="最小割" scheme="http://yoursite.com/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P4014 分配问题</title>
    <link href="http://yoursite.com/2018/07/13/%E6%B4%9B%E8%B0%B7P4014-%E5%88%86%E9%85%8D%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/07/13/洛谷P4014-分配问题/</id>
    <published>2018-07-13T12:03:53.000Z</published>
    <updated>2018-07-13T12:26:53.865Z</updated>
    
    <content type="html"><![CDATA[<p>记<script type="math/tex">edge\left \{ u,v,capacity,cost \right \}</script>为一条从<em>u</em> 到<em>v</em> 的，流量为<em>cap</em> 的，费用为<em>cost</em> 的弧与反弧<br>源点向每件工作连边<script type="math/tex">edge\left \{ S,x,1,0 \right \}</script><br><del>按惯例人当做两个用</del>，第<em>k</em> 个人连边<script type="math/tex">edge\left \{ k,k+n,1,0 \right \}</script>，<script type="math/tex">edge\left \{ k+n,T,INF,0 \right \}</script><br>每件工作<em>x</em> 向第<em>k</em> 个人连边<script type="math/tex">edge\left \{ x,k,1,c\left [ x \right ]\left [ k \right ] \right \}</script><br>跑一遍MCMF，边权取反再跑一遍<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">505</span>,M=<span class="number">100000</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">30</span>;</span><br><span class="line"><span class="keyword">int</span> n,st,ed,w[N][N],cost;</span><br><span class="line"><span class="keyword">int</span> head[N],pre[N],c[N],cnt=<span class="number">0</span>,d[N],inq[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span><span class="keyword">int</span> to,next,cap,flow,cost;&#125; e[M&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> cap,<span class="keyword">int</span> cost)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[cnt].next=head[u];</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">    e[cnt].to=v;</span><br><span class="line">    e[cnt].cost=cost;</span><br><span class="line">    e[cnt++].cap=cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*<span class="number">3</span>+<span class="number">2</span>;i++) d[i]=INF,c[i]=<span class="number">0</span>;</span><br><span class="line">    d[s]=<span class="number">0</span>,c[s]=INF,Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();</span><br><span class="line">        Q.pop(),inq[x]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];~i;i=e[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[i].to,cost=e[i].cost;</span><br><span class="line">            <span class="keyword">if</span> (e[i].flow&lt;e[i].cap&amp;&amp;d[x]+cost&lt;d[to])</span><br><span class="line">            &#123;</span><br><span class="line">                d[to]=d[x]+cost;</span><br><span class="line">                c[to]=min(c[x],e[i].cap-e[i].flow);</span><br><span class="line">                pre[to]=i;</span><br><span class="line">                <span class="keyword">if</span> (!inq[to]) Q.push(to),inq[to]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c[t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> to,<span class="keyword">int</span> flow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x;i!=to;i=e[pre[i]^<span class="number">1</span>].to)</span><br><span class="line">    &#123;</span><br><span class="line">        e[pre[i]].flow+=flow;</span><br><span class="line">        e[pre[i]^<span class="number">1</span>].flow-=flow;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MCMF</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cost=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>,new_flow;</span><br><span class="line">    <span class="keyword">while</span> (new_flow=SPFA(s,t))</span><br><span class="line">    &#123;</span><br><span class="line">        ret+=new_flow;</span><br><span class="line">        cost+=new_flow*d[t];</span><br><span class="line">        update(t,s,new_flow);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) w[i][j]=read();</span><br><span class="line">    st=n*<span class="number">3</span>+<span class="number">1</span>,ed=st+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*<span class="number">3</span>+<span class="number">2</span>;i++) head[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) add(st,i,<span class="number">1</span>,<span class="number">0</span>),add(i,st,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            add(j,i+n,<span class="number">1</span>,w[i][j]);</span><br><span class="line">            add(i+n,j,<span class="number">0</span>,-w[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n+<span class="number">1</span>;i&lt;=n*<span class="number">2</span>;i++) add(i,i+n,<span class="number">1</span>,<span class="number">0</span>),add(i+n,i,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n*<span class="number">2</span>+<span class="number">1</span>;i&lt;=n*<span class="number">3</span>;i++) add(i,ed,INF,<span class="number">0</span>),add(ed,i,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    MCMF(st,ed);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,cost);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*<span class="number">3</span>+<span class="number">2</span>;i++) head[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) add(st,i,<span class="number">1</span>,<span class="number">0</span>),add(i,st,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            add(j,i+n,<span class="number">1</span>,-w[i][j]);</span><br><span class="line">            add(i+n,j,<span class="number">0</span>,w[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n+<span class="number">1</span>;i&lt;=n*<span class="number">2</span>;i++) add(i,i+n,<span class="number">1</span>,<span class="number">0</span>),add(i+n,i,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n*<span class="number">2</span>+<span class="number">1</span>;i&lt;=n*<span class="number">3</span>;i++) add(i,ed,INF,<span class="number">0</span>),add(ed,i,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    MCMF(st,ed);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,-cost);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ u,v,capacity,cost \right \}&lt;/script&gt;为一条从&lt;em&gt;u&lt;/em&gt; 到&lt;em&gt;v&lt;/em&gt; 的，流量为&lt;em&gt;cap&lt;/em&gt; 的，费用为&lt;em&gt;cost&lt;/em&gt; 的弧与反弧&lt;br&gt;源点向每件工作连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ S,x,1,0 \right \}&lt;/script&gt;&lt;br&gt;&lt;del&gt;按惯例人当做两个用&lt;/del&gt;，第&lt;em&gt;k&lt;/em&gt; 个人连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ k,k+n,1,0 \right \}&lt;/script&gt;，&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ k+n,T,INF,0 \right \}&lt;/script&gt;&lt;br&gt;每件工作&lt;em&gt;x&lt;/em&gt; 向第&lt;em&gt;k&lt;/em&gt; 个人连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ x,k,1,c\left [ x \right ]\left [ k \right ] \right \}&lt;/script&gt;&lt;br&gt;跑一遍MCMF，边权取反再跑一遍&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="费用流" scheme="http://yoursite.com/tags/%E8%B4%B9%E7%94%A8%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P1175 表达式的转换</title>
    <link href="http://yoursite.com/2018/07/13/%E6%B4%9B%E8%B0%B7P1175-%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E8%BD%AC%E6%8D%A2/"/>
    <id>http://yoursite.com/2018/07/13/洛谷P1175-表达式的转换/</id>
    <published>2018-07-13T11:46:47.000Z</published>
    <updated>2018-07-13T12:04:15.499Z</updated>
    
    <content type="html"><![CDATA[<p>优化了一下之前的代码<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">200</span>;</span><br><span class="line"><span class="keyword">char</span> str[N],expr[N];</span><br><span class="line"><span class="keyword">int</span> n,len,idx[N],cnt=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">char</span>&gt; opt;</span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt; num;</span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt;::iterator it;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    idx[<span class="string">'+'</span>]=idx[<span class="string">'-'</span>]=<span class="number">1</span>;</span><br><span class="line">    idx[<span class="string">'*'</span>]=idx[<span class="string">'/'</span>]=<span class="number">2</span>;</span><br><span class="line">    idx[<span class="string">'^'</span>]=<span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">trans</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'0'</span>&lt;=str[i]&amp;&amp;str[i]&lt;=<span class="string">'9'</span>)</span><br><span class="line">            expr[++cnt]=str[i];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!idx[str[i]])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (str[i]==<span class="string">'('</span>) opt.push(str[i]);</span><br><span class="line">                <span class="keyword">if</span> (str[i]==<span class="string">')'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">while</span> (opt.top()!=<span class="string">'('</span>)</span><br><span class="line">                        expr[++cnt]=opt.top(),opt.pop();</span><br><span class="line">                    opt.pop();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">while</span> (!opt.empty()&amp;&amp;idx[opt.top()]&gt;=idx[str[i]]) </span><br><span class="line">                    expr[++cnt]=opt.top(),opt.pop();</span><br><span class="line">                opt.push(str[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (!opt.empty()) expr[++cnt]=opt.top(),opt.pop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(it=num.begin();it!=num.end();it++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d%c"</span>,*it,k&gt;cnt?<span class="string">'\n'</span>:<span class="string">' '</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=k;i&lt;=cnt;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c%c"</span>,expr[i],i==cnt?<span class="string">'\n'</span>:<span class="string">' '</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pow</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (b&amp;<span class="number">1</span>) ret*=a;</span><br><span class="line">        a*=a,b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,str+<span class="number">1</span>);</span><br><span class="line">    len=<span class="built_in">strlen</span>(str+<span class="number">1</span>);</span><br><span class="line">    trans();</span><br><span class="line">    print(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'0'</span>&lt;=expr[i]&amp;&amp;expr[i]&lt;=<span class="string">'9'</span>)</span><br><span class="line">            num.push_back(expr[i]-<span class="string">'0'</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> b=num.back();num.pop_back();</span><br><span class="line">            <span class="keyword">int</span> a=num.back();num.pop_back();</span><br><span class="line">            <span class="keyword">switch</span> (expr[i])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'+'</span>:num.push_back(a+b);<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'-'</span>:num.push_back(a-b);<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'*'</span>:num.push_back(a*b);<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'/'</span>:num.push_back(a/b);<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:num.push_back(<span class="built_in">pow</span>(a,b));</span><br><span class="line">            &#125;</span><br><span class="line">            print(i+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;优化了一下之前的代码&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="栈" scheme="http://yoursite.com/tags/%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P4015 运输问题</title>
    <link href="http://yoursite.com/2018/07/10/%E6%B4%9B%E8%B0%B7P4015-%E8%BF%90%E8%BE%93%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/07/10/洛谷P4015-运输问题/</id>
    <published>2018-07-10T12:28:44.000Z</published>
    <updated>2018-07-13T10:26:06.779Z</updated>
    
    <content type="html"><![CDATA[<p>记<script type="math/tex">edge\left \{ u,v,capacity,cost \right \}</script>为一条从<em>u</em> 到<em>v</em> 的，流量为<em>cap</em> 的，费用为<em>cost</em> 的弧与反弧<br>对于每个仓库连边<script type="math/tex">edge\left \{ S,x,u\left [ x \right ],0 \right \}</script><br>对于每个零售店连边<script type="math/tex">edge\left \{ x+n,T,v\left [ x \right ],0 \right \}</script><br>仓库<em>i</em> 向零售店<em>j</em> 连边<script type="math/tex">edge\left \{ i,j+n,INF,c\left [ i \right ]\left [ j \right ] \right \}</script><br>跑一边<em>S</em> 到<em>T</em> 的MCMF，cost为最小运输费用<br>边权取负，再跑一边<em>S</em> 到<em>T</em> 的MCMF，-cost为最大运输费用<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M=<span class="number">10000</span>,N=<span class="number">205</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">30</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,st,ed,u[N],v[N],val[N][N];</span><br><span class="line"><span class="keyword">int</span> head[N],cnt=<span class="number">0</span>,pre[N],d[N],c[N],cost=<span class="number">0</span>,inq[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span><span class="keyword">int</span> to,next,flow,cap,cost;&#125; e[M&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> cap,<span class="keyword">int</span> cost)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[cnt].next=head[u];</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">    e[cnt].to=v;</span><br><span class="line">    e[cnt].cost=cost;</span><br><span class="line">    e[cnt++].cap=cap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> to,<span class="keyword">int</span> flow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x;i!=to;i=e[pre[i]^<span class="number">1</span>].to)</span><br><span class="line">    &#123;</span><br><span class="line">        e[pre[i]].flow+=flow;</span><br><span class="line">        e[pre[i]^<span class="number">1</span>].flow-=flow;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n+m+<span class="number">2</span>;i++) d[i]=INF,c[i]=<span class="number">0</span>;</span><br><span class="line">    d[s]=<span class="number">0</span>,c[s]=INF,Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front();</span><br><span class="line">        Q.pop(),inq[x]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];~i;i=e[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> to=e[i].to,cost=e[i].cost;</span><br><span class="line">            <span class="keyword">if</span> (e[i].flow&lt;e[i].cap&amp;&amp;d[x]+cost&lt;d[to])</span><br><span class="line">            &#123;</span><br><span class="line">            d[to]=d[x]+cost;</span><br><span class="line">                pre[to]=i;</span><br><span class="line">                c[to]=min(c[x],e[i].cap-e[i].flow);</span><br><span class="line">                <span class="keyword">if</span> (!inq[to]) Q.push(to),inq[to]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c[t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MCMF</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cost=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>,new_flow;</span><br><span class="line">    <span class="keyword">while</span> (new_flow=SPFA(s,t))</span><br><span class="line">    &#123;</span><br><span class="line">        ret+=new_flow;</span><br><span class="line">        cost+=new_flow*d[t];</span><br><span class="line">        update(t,s,new_flow);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    st=n+m+<span class="number">1</span>,ed=st+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n+m+<span class="number">2</span>;i++) head[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    u[i]=read();</span><br><span class="line">    add(st,i,u[i],<span class="number">0</span>);</span><br><span class="line">    add(i,st,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v[i]=read();</span><br><span class="line">        add(i+n,ed,v[i],<span class="number">0</span>);</span><br><span class="line">        add(ed,i+n,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            val[i][j]=read();</span><br><span class="line">            add(i,j+n,INF,val[i][j]);</span><br><span class="line">            add(j+n,i,<span class="number">0</span>,-val[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    MCMF(st,ed);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,cost);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n+m+<span class="number">2</span>;i++) head[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    add(st,i,u[i],<span class="number">0</span>);</span><br><span class="line">    add(i,st,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        add(i+n,ed,v[i],<span class="number">0</span>);</span><br><span class="line">        add(ed,i+n,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            add(i,j+n,INF,-val[i][j]);</span><br><span class="line">            add(j+n,i,<span class="number">0</span>,val[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    MCMF(st,ed);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,-cost);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ u,v,capacity,cost \right \}&lt;/script&gt;为一条从&lt;em&gt;u&lt;/em&gt; 到&lt;em&gt;v&lt;/em&gt; 的，流量为&lt;em&gt;cap&lt;/em&gt; 的，费用为&lt;em&gt;cost&lt;/em&gt; 的弧与反弧&lt;br&gt;对于每个仓库连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ S,x,u\left [ x \right ],0 \right \}&lt;/script&gt;&lt;br&gt;对于每个零售店连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ x+n,T,v\left [ x \right ],0 \right \}&lt;/script&gt;&lt;br&gt;仓库&lt;em&gt;i&lt;/em&gt; 向零售店&lt;em&gt;j&lt;/em&gt; 连边&lt;script type=&quot;math/tex&quot;&gt;edge\left \{ i,j+n,INF,c\left [ i \right ]\left [ j \right ] \right \}&lt;/script&gt;&lt;br&gt;跑一边&lt;em&gt;S&lt;/em&gt; 到&lt;em&gt;T&lt;/em&gt; 的MCMF，cost为最小运输费用&lt;br&gt;边权取负，再跑一边&lt;em&gt;S&lt;/em&gt; 到&lt;em&gt;T&lt;/em&gt; 的MCMF，-cost为最大运输费用&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="网络流" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
  </entry>
  
</feed>
