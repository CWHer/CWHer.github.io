<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>魍魉的小窝</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-07-06T00:20:36.133Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>CWHer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>洛谷P3941 入阵曲</title>
    <link href="http://yoursite.com/2018/07/06/%E6%B4%9B%E8%B0%B7P3941-%E5%85%A5%E9%98%B5%E6%9B%B2/"/>
    <id>http://yoursite.com/2018/07/06/洛谷P3941-入阵曲/</id>
    <published>2018-07-05T23:49:27.000Z</published>
    <updated>2018-07-06T00:20:36.133Z</updated>
    
    <content type="html"><![CDATA[<p>用<script type="math/tex">sum\left [ i \right ]\left [ j \right ]</script>，记录第<em>i</em>行，前<em>j</em>个的和<br>枚举<em>i</em>,<em>j</em>两列<script type="math/tex">\left ( i<j \right )</script>，用数组<script type="math/tex">c\left [ k \right ]</script>记录<script type="math/tex">sum\left [ k \right ]\left [j  \right ]-sum\left [ k \right ]\left [ i-1 \right ]</script><br>对于<em>c</em>求一遍前缀和记为<em>s</em>，用<script type="math/tex">cnt\left [ p \right ]</script>记录<script type="math/tex">s\equiv p\left ( mod \ M \right )</script>的个数，从左往右扫一遍<br>要注意的是<script type="math/tex">cnt\left [ 0 \right ]=1</script><br>但是以上操作没有考虑仅一列的情况，枚举每一列再重复一遍以上操作<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">405</span>,M=<span class="number">1000050</span>;</span><br><span class="line"><span class="keyword">int</span> w[N][N],cnt[M],c[N],n,m,mod,sum[N][N];</span><br><span class="line">LL ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read(),mod=read(),cnt[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++) w[i][j]=read()%mod;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++) </span><br><span class="line">            sum[i][j]=(sum[i][j<span class="number">-1</span>]+w[i][j])%mod;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)</span><br><span class="line">                c[k]=(sum[k][j]-sum[k][i<span class="number">-1</span>]+mod)%mod;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                c[k]=(c[k<span class="number">-1</span>]+c[k])%mod;</span><br><span class="line">                ans+=cnt[c[k]],cnt[c[k]]++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++) cnt[c[k]]--;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++) c[k]=w[k][i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)</span><br><span class="line">        &#123;</span><br><span class="line">            c[k]=(c[k<span class="number">-1</span>]+c[k])%mod;</span><br><span class="line">            ans+=cnt[c[k]],cnt[c[k]]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++) cnt[c[k]]--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用&lt;script type=&quot;math/tex&quot;&gt;sum\left [ i \right ]\left [ j \right ]&lt;/script&gt;，记录第&lt;em&gt;i&lt;/em&gt;行，前&lt;em&gt;j&lt;/em&gt;个的和&lt;br&gt;枚举&lt;em&gt;i&lt;/em&gt;,&lt;em&gt;j&lt;/em&gt;两列&lt;script type=&quot;math/tex&quot;&gt;\left ( i&lt;j \right )&lt;/script&gt;，用数组&lt;script type=&quot;math/tex&quot;&gt;c\left [ k \right ]&lt;/script&gt;记录&lt;script type=&quot;math/tex&quot;&gt;sum\left [ k \right ]\left [j  \right ]-sum\left [ k \right ]\left [ i-1 \right ]&lt;/script&gt;&lt;br&gt;对于&lt;em&gt;c&lt;/em&gt;求一遍前缀和记为&lt;em&gt;s&lt;/em&gt;，用&lt;script type=&quot;math/tex&quot;&gt;cnt\left [ p \right ]&lt;/script&gt;记录&lt;script type=&quot;math/tex&quot;&gt;s\equiv p\left ( mod \ M \right )&lt;/script&gt;的个数，从左往右扫一遍&lt;br&gt;要注意的是&lt;script type=&quot;math/tex&quot;&gt;cnt\left [ 0 \right ]=1&lt;/script&gt;&lt;br&gt;但是以上操作没有考虑仅一列的情况，枚举每一列再重复一遍以上操作&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="前缀和" scheme="http://yoursite.com/tags/%E5%89%8D%E7%BC%80%E5%92%8C/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P2568 GCD</title>
    <link href="http://yoursite.com/2018/07/06/%E6%B4%9B%E8%B0%B7P2568-GCD/"/>
    <id>http://yoursite.com/2018/07/06/洛谷P2568-GCD/</id>
    <published>2018-07-05T23:41:03.000Z</published>
    <updated>2018-07-05T23:46:09.128Z</updated>
    
    <content type="html"><![CDATA[<p>对于一组<script type="math/tex">gcd(x,y)=1</script>，若有一个质数<em>p</em>，则<script type="math/tex">gcd(xp,yp)=p</script><br>枚举所有的<em>p</em>，求所有<script type="math/tex">xp<=n</script>，<script type="math/tex">yp<=n</script>的解，用欧拉函数即可<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">10000050</span>;</span><br><span class="line"><span class="keyword">bool</span> used[N];</span><br><span class="line"><span class="keyword">int</span> n,phi[N],prime[N&gt;&gt;<span class="number">3</span>],cnt=<span class="number">0</span>;</span><br><span class="line">LL ans=<span class="number">0</span>,sum[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    phi[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!used[i]) prime[++cnt]=i,phi[i]=i<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (prime[j]*i&gt;n) <span class="keyword">break</span>;</span><br><span class="line">            used[i*prime[j]]=<span class="number">1</span>;</span><br><span class="line">            phi[i*prime[j]]=phi[i]*(prime[j]<span class="number">-1</span>);</span><br><span class="line">            <span class="keyword">if</span> (i%prime[j]==<span class="number">0</span>) &#123;phi[i*prime[j]]+=phi[i];<span class="keyword">break</span>;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    work();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">        sum[i]=sum[i<span class="number">-1</span>]+phi[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">        ans=ans+sum[n/prime[i]]*<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于一组&lt;script type=&quot;math/tex&quot;&gt;gcd(x,y)=1&lt;/script&gt;，若有一个质数&lt;em&gt;p&lt;/em&gt;，则&lt;script type=&quot;math/tex&quot;&gt;gcd(xp,yp)=p&lt;/script&gt;&lt;br&gt;枚举所有的&lt;em&gt;p&lt;/em&gt;，求所有&lt;script type=&quot;math/tex&quot;&gt;xp&lt;=n&lt;/script&gt;，&lt;script type=&quot;math/tex&quot;&gt;yp&lt;=n&lt;/script&gt;的解，用欧拉函数即可&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="数论" scheme="http://yoursite.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>[ZJOI2005]九数码游戏</title>
    <link href="http://yoursite.com/2018/07/06/ZJOI2005-%E4%B9%9D%E6%95%B0%E7%A0%81%E6%B8%B8%E6%88%8F/"/>
    <id>http://yoursite.com/2018/07/06/ZJOI2005-九数码游戏/</id>
    <published>2018-07-05T23:32:48.000Z</published>
    <updated>2018-07-05T23:39:21.233Z</updated>
    
    <content type="html"><![CDATA[<p>直接搜索加剪枝<br>剪枝可以考虑Cantor展开，也可以直接用map<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">5</span>,ed=<span class="number">12345678</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span>LL s;<span class="keyword">int</span> k;&#125;;</span><br><span class="line"><span class="built_in">map</span>&lt;LL,LL&gt; M;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">-1</span>,w[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="built_in">queue</span>&lt;node&gt; Q;</span><br><span class="line"><span class="function">LL <span class="title">modify</span><span class="params">(LL s,<span class="keyword">int</span> f)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">9</span>;i&gt;<span class="number">0</span>;i--) w[i]=s%<span class="number">10</span>,s/=<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">if</span> (f)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> num=w[<span class="number">6</span>];LL ret=<span class="number">0</span>;</span><br><span class="line">        w[<span class="number">6</span>]=w[<span class="number">5</span>],w[<span class="number">5</span>]=w[<span class="number">4</span>],w[<span class="number">4</span>]=num;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++) ret=ret*<span class="number">10</span>+w[i];</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> num=w[<span class="number">1</span>];LL ret=<span class="number">0</span>;</span><br><span class="line">        w[<span class="number">1</span>]=w[<span class="number">4</span>],w[<span class="number">4</span>]=w[<span class="number">7</span>],w[<span class="number">7</span>]=w[<span class="number">8</span>];</span><br><span class="line">        w[<span class="number">8</span>]=w[<span class="number">9</span>],w[<span class="number">9</span>]=w[<span class="number">6</span>],w[<span class="number">6</span>]=w[<span class="number">3</span>];</span><br><span class="line">        w[<span class="number">3</span>]=w[<span class="number">2</span>],w[<span class="number">2</span>]=num;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++) ret=ret*<span class="number">10</span>+w[i];</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">(LL st)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    M[st]=<span class="number">0</span>,Q.push((node)&#123;st,<span class="number">0</span>&#125;);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        node x=Q.front();Q.pop();</span><br><span class="line">        <span class="keyword">if</span> (x.s==ed) &#123;ans=x.k;<span class="keyword">return</span>;&#125;</span><br><span class="line">        LL nxt=modify(x.s,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (M.find(nxt)==M.end())</span><br><span class="line">        &#123;</span><br><span class="line">            M[nxt]=x.s;</span><br><span class="line">            Q.push((node)&#123;nxt,x.k+<span class="number">1</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        nxt=modify(x.s,<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (M.find(nxt)==M.end())</span><br><span class="line">        &#123;</span><br><span class="line">            M[nxt]=x.s;</span><br><span class="line">            Q.push((node)&#123;nxt,x.k+<span class="number">1</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(LL s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!s) <span class="keyword">return</span>;</span><br><span class="line">    dfs(M[s]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">9</span>;i&gt;<span class="number">0</span>;i--) w[i]=s%<span class="number">10</span>,s/=<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++) <span class="built_in">printf</span>(<span class="string">"%d%c"</span>,w[i],i%<span class="number">3</span>?<span class="string">' '</span>:<span class="string">'\n'</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">        num=num*<span class="number">10</span>+x;</span><br><span class="line">    &#125;</span><br><span class="line">    bfs(num);</span><br><span class="line">    <span class="keyword">if</span> (ans==<span class="number">-1</span>) &#123;<span class="built_in">puts</span>(<span class="string">"UNSOLVABLE"</span>);<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans),dfs(ed);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;直接搜索加剪枝&lt;br&gt;剪枝可以考虑Cantor展开，也可以直接用map&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="搜索" scheme="http://yoursite.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P1484 种树</title>
    <link href="http://yoursite.com/2018/07/06/%E6%B4%9B%E8%B0%B7P1484-%E7%A7%8D%E6%A0%91/"/>
    <id>http://yoursite.com/2018/07/06/洛谷P1484-种树/</id>
    <published>2018-07-05T23:23:41.000Z</published>
    <updated>2018-07-05T23:30:47.193Z</updated>
    
    <content type="html"><![CDATA[<p>神奇的贪心<br>对于<script type="math/tex">a_{i}</script>，若最终答案不包含<script type="math/tex">a_{i}</script>，则一定包含<script type="math/tex">a_{i-1}+a_{i+1}</script><br>因此每次取<script type="math/tex">a_{i}</script>时，加入<script type="math/tex">a_{i-1}+a_{i+1}-a_{i}</script>，允许撤销操作<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">500050</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,w[N],L[N],R[N],used[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span>LL val;<span class="keyword">int</span> id;&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cmp</span> &#123;</span><span class="function"><span class="keyword">bool</span> <span class="title">operator</span> <span class="params">()</span><span class="params">(node a,node b)</span> </span>&#123;<span class="keyword">return</span> a.val&lt;b.val;&#125;&#125;;</span><br><span class="line">priority_queue&lt;node,<span class="built_in">vector</span>&lt;node&gt;,cmp&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) w[i]=read(),Q.push((node)&#123;w[i],i&#125;);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) L[i]=i<span class="number">-1</span>,R[i]=i+<span class="number">1</span>;</span><br><span class="line">    R[<span class="number">0</span>]=<span class="number">1</span>,L[n+<span class="number">1</span>]=n;LL ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (m--)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">while</span> (used[Q.top().id]) Q.pop();</span><br><span class="line">    <span class="keyword">int</span> k=Q.top().id;</span><br><span class="line">    used[L[k]]=used[R[k]]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (Q.top().val&lt;=<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">    ans=ans+Q.top().val,Q.pop();</span><br><span class="line">    Q.push((node)&#123;w[k]=w[L[k]]+w[R[k]]-w[k],k&#125;);</span><br><span class="line">    L[k]=L[L[k]],R[L[k]]=k;</span><br><span class="line">    R[k]=R[R[k]],L[R[k]]=k;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;神奇的贪心&lt;br&gt;对于&lt;script type=&quot;math/tex&quot;&gt;a_{i}&lt;/script&gt;，若最终答案不包含&lt;script type=&quot;math/tex&quot;&gt;a_{i}&lt;/script&gt;，则一定包含&lt;script type=&quot;math/tex&quot;&gt;a_{i-1}+a_{i+1}&lt;/script&gt;&lt;br&gt;因此每次取&lt;script type=&quot;math/tex&quot;&gt;a_{i}&lt;/script&gt;时，加入&lt;script type=&quot;math/tex&quot;&gt;a_{i-1}+a_{i+1}-a_{i}&lt;/script&gt;，允许撤销操作&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="堆" scheme="http://yoursite.com/tags/%E5%A0%86/"/>
    
      <category term="贪心" scheme="http://yoursite.com/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>Nim游戏</title>
    <link href="http://yoursite.com/2018/07/06/NIM%E6%B8%B8%E6%88%8F/"/>
    <id>http://yoursite.com/2018/07/06/NIM游戏/</id>
    <published>2018-07-05T23:11:38.000Z</published>
    <updated>2018-07-05T23:23:48.266Z</updated>
    
    <content type="html"><![CDATA[<p>当且仅当<script type="math/tex">\left (  a_{1} \right ) xor\left (  a_{2}\right ) ...\left ( a_{n} \right )=0</script>为一个P</p><ol><li>最终状态为0</li><li>对于一个<script type="math/tex">\left (  a_{1} \right ) xor\left (  a_{2}\right ) ...\left ( a_{n} \right )=k\left ( k>0 \right )</script> 的状态，必存在一个<script type="math/tex">a_{i}>k</script>，使得下一步<script type="math/tex">\left (  a_{1} \right ) xor\left (  a_{2}\right ) ...\left ( a_{n} \right )=0</script></li><li>对于一个<script type="math/tex">\left (  a_{1} \right ) xor\left (  a_{2}\right ) ...\left ( a_{n} \right )=0</script>，不存在一种方案使得下一步<script type="math/tex">\left (  a_{1} \right ) xor\left (  a_{2}\right ) ...\left ( a_{n} \right )=k\left ( k>0 \right )</script></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;当且仅当&lt;script type=&quot;math/tex&quot;&gt;\left (  a_{1} \right ) xor\left (  a_{2}\right ) ...\left ( a_{n} \right )=0&lt;/script&gt;为一个P&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;最终状态为
      
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="博弈" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%BC%88/"/>
    
  </entry>
  
  <entry>
    <title>[BZOJ2719]银河之星</title>
    <link href="http://yoursite.com/2018/07/05/BZOJ2719-%E9%93%B6%E6%B2%B3%E4%B9%8B%E6%98%9F/"/>
    <id>http://yoursite.com/2018/07/05/BZOJ2719-银河之星/</id>
    <published>2018-07-05T12:52:32.000Z</published>
    <updated>2018-07-05T12:58:09.285Z</updated>
    
    <content type="html"><![CDATA[<p>通过观察可以发现点在%3意义下相同<br>直接暴力搜索加剪枝<br>但是要注意棋盘大小，棋盘小有些点跳不过去。<br>代码没有考虑棋盘大小，有部分点会WA<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">15</span>;</span><br><span class="line"><span class="keyword">int</span> K,n,m,xx,yy,x[N],y[N],used[N],f,w[N],cnt=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">set</span>&lt;LL&gt; S;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">F</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;<span class="keyword">return</span> x*<span class="number">3</span>+y+<span class="number">1</span>;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (f) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span> (k==<span class="number">1</span>) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=K;i++)</span><br><span class="line"><span class="keyword">if</span> (!used[i]) </span><br><span class="line">f=xx==x[i]&amp;&amp;yy==y[i];</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">cnt=<span class="number">0</span>;LL num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=K;i++)</span><br><span class="line"><span class="keyword">if</span> (!used[i]) w[++cnt]=F(x[i],y[i]);</span><br><span class="line">sort(w+<span class="number">1</span>,w+cnt+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">num=num*<span class="number">10</span>+w[i];</span><br><span class="line"><span class="keyword">if</span> (!S.empty()&amp;&amp;S.find(num)!=S.end()) <span class="keyword">return</span>;</span><br><span class="line">S.insert(num);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=K;i++) <span class="keyword">if</span> (!used[i])</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=K;j++) <span class="keyword">if</span> (!used[j]&amp;&amp;i!=j)</span><br><span class="line"><span class="keyword">if</span> (!(xx==x[i]&amp;&amp;yy==y[i]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=x[i],v=y[i];</span><br><span class="line">used[j]=<span class="number">1</span>;</span><br><span class="line">x[i]=x[i]==x[j]?x[i]:<span class="number">3</span>-x[i]-x[j];</span><br><span class="line">y[i]=y[i]==y[j]?y[i]:<span class="number">3</span>-y[i]-y[j];</span><br><span class="line">dfs(k<span class="number">-1</span>);</span><br><span class="line">used[j]=<span class="number">0</span>;</span><br><span class="line">x[i]=u,y[i]=v;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d%d%d%d"</span>,&amp;K,&amp;n,&amp;m,&amp;xx,&amp;yy)!=EOF)</span><br><span class="line">&#123;</span><br><span class="line">xx%=<span class="number">3</span>,yy%=<span class="number">3</span>;S.clear();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=K;i++) <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x[i],&amp;y[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=K;i++) x[i]%=<span class="number">3</span>,y[i]%=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=K;i++) used[i]=<span class="number">0</span>;</span><br><span class="line">f=<span class="number">0</span>,dfs(K);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>,f?<span class="string">"Yes"</span>:<span class="string">"No"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过观察可以发现点在%3意义下相同&lt;br&gt;直接暴力搜索加剪枝&lt;br&gt;但是要注意棋盘大小，棋盘小有些点跳不过去。&lt;br&gt;代码没有考虑棋盘大小，有部分点会WA&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="搜索" scheme="http://yoursite.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>藏妹子之处</title>
    <link href="http://yoursite.com/2018/07/05/%E8%97%8F%E5%A6%B9%E5%AD%90%E4%B9%8B%E5%A4%84/"/>
    <id>http://yoursite.com/2018/07/05/藏妹子之处/</id>
    <published>2018-07-05T12:38:57.000Z</published>
    <updated>2018-07-05T12:50:57.973Z</updated>
    
    <content type="html"><![CDATA[<p><del>首先要有个妹子</del><br><a id="more"></a><br><strong>问题描述：</strong><br>今天CZY又找到了三个妹子，有着收藏爱好的他想要找三个地方将妹子们藏起来，将一片空地抽象成一个R行C列的表格，CZY要选出3个单元格。但要满足如下的两个条件：<br>（1）任意两个单元格都不在同一行。<br>（2）任意两个单元格都不在同一列。<br>选取格子存在一个花费，而这个花费是三个格子两两之间曼哈顿距离的和（如(x1,y1)和(x,y2)的曼哈顿距离为|x1-x2|+|y1-y2|）。狗狗想知道的是，花费在minT到maxT之间的方案数有多少。<br>答案模1000000007。所谓的两种不同方案是指：只要它选中的单元格有一个不同，就认为是不同的方案。</p><p>通过观察，<del>不难</del>发现在一个<script type="math/tex">R*C</script>的矩阵中，所有最大的三个单元格曼哈顿距离相等，均为<script type="math/tex">2(R+C)-4</script><br>通过<del>简单地</del>分析可以得出，在<script type="math/tex">R*C</script>的矩阵中，共有<script type="math/tex">6（R-2)(C-2)</script>组最大的三个单元格<br>代码就很简单了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">int</span> r,c,mins,maxs;</span><br><span class="line">LL ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;r,&amp;c,&amp;mins,&amp;maxs);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;r;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;j&lt;c;j++) </span><br><span class="line"><span class="keyword">if</span> (i*<span class="number">2</span>+j*<span class="number">2</span>&lt;=maxs&amp;&amp;i*<span class="number">2</span>+j*<span class="number">2</span>&gt;=mins)</span><br><span class="line">ans=(ans+<span class="number">6L</span>L*(r-i)*(c-j)*(i<span class="number">-1</span>)*(j<span class="number">-1</span>))%mod;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>临山依水 景看旧 而你美胜 山水万筹</em></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;首先要有个妹子&lt;/del&gt;&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="组合数学" scheme="http://yoursite.com/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>[SCOI2005]互不侵犯</title>
    <link href="http://yoursite.com/2018/07/05/SCOI2005-%E4%BA%92%E4%B8%8D%E4%BE%B5%E7%8A%AF/"/>
    <id>http://yoursite.com/2018/07/05/SCOI2005-互不侵犯/</id>
    <published>2018-07-05T12:31:56.000Z</published>
    <updated>2018-07-06T00:18:18.043Z</updated>
    
    <content type="html"><![CDATA[<p>预处理一行所有可能的情况<br>用<script type="math/tex">dp\left [d  \right ]\left [  i\right ]\left [ k \right ]</script>数组记录第d行，当前状态为<script type="math/tex">s\left [ i \right ]</script>，总共放置k个的方案数<br>复杂度<script type="math/tex">O\left ( nk4^{n} \right )</script><br><a id="more"></a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,s[<span class="number">1</span>&lt;&lt;N],w[<span class="number">1</span>&lt;&lt;N],c[<span class="number">1</span>&lt;&lt;N][<span class="number">1</span>&lt;&lt;N],cnt=<span class="number">0</span>;</span><br><span class="line">LL dp[N][N&lt;&lt;<span class="number">2</span>][<span class="number">1</span>&lt;&lt;N],ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;n);i++)</span><br><span class="line">        <span class="keyword">if</span> (!(i&amp;(i&lt;&lt;<span class="number">1</span>))&amp;&amp;!(i&amp;(i&gt;&gt;<span class="number">1</span>))) s[++cnt]=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)</span><br><span class="line">            <span class="keyword">if</span> (s[i]&amp;(<span class="number">1</span>&lt;&lt;(k<span class="number">-1</span>))) w[i]++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt;j++) <span class="keyword">if</span> (!(s[i]&amp;s[j]))</span><br><span class="line">            <span class="keyword">if</span> (!(s[i]&amp;(s[j]&lt;&lt;<span class="number">1</span>))&amp;&amp;!(s[i]&amp;(s[j]&gt;&gt;<span class="number">1</span>))) c[i][j]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++) dp[<span class="number">1</span>][w[i]][i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> d=<span class="number">2</span>;d&lt;=n;d++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt;j++) <span class="keyword">if</span> (c[i][j])</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=w[i];k&lt;=m-w[j];k++)</span><br><span class="line">                    dp[d][k+w[j]][j]+=dp[d<span class="number">-1</span>][k][i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++) ans+=dp[n][m][i];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;预处理一行所有可能的情况&lt;br&gt;用&lt;script type=&quot;math/tex&quot;&gt;dp\left [d  \right ]\left [  i\right ]\left [ k \right ]&lt;/script&gt;数组记录第d行，当前状态为&lt;script type=&quot;math/tex&quot;&gt;s\left [ i \right ]&lt;/script&gt;，总共放置k个的方案数&lt;br&gt;复杂度&lt;script type=&quot;math/tex&quot;&gt;O\left ( nk4^{n} \right )&lt;/script&gt;&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="动态规划" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="状态压缩" scheme="http://yoursite.com/tags/%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P1429 平面最近点对</title>
    <link href="http://yoursite.com/2018/07/05/%E6%B4%9B%E8%B0%B7P1429-%E5%B9%B3%E9%9D%A2%E6%9C%80%E8%BF%91%E7%82%B9%E5%AF%B9/"/>
    <id>http://yoursite.com/2018/07/05/洛谷P1429-平面最近点对/</id>
    <published>2018-07-05T12:25:00.000Z</published>
    <updated>2018-07-05T12:30:33.045Z</updated>
    
    <content type="html"><![CDATA[<p>裸的二分，复杂度<script type="math/tex">O\left ( nlog^{2}n \right )</script><br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">200050</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">30</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">dot</span> &#123;</span><span class="keyword">double</span> x,y;&#125; t[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; w;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(dot a,dot b)</span> </span>&#123;<span class="keyword">return</span> a.x==b.x?a.y&lt;b.y:a.x&lt;b.x;&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> </span>&#123;<span class="keyword">return</span> t[a].y&lt;t[b].y;&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">sqr</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123;<span class="keyword">return</span> x*x;&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dist</span><span class="params">(dot a,dot b)</span> </span>&#123;<span class="keyword">return</span> <span class="built_in">sqrt</span>(sqr(a.x-b.x)+sqr(a.y-b.y));&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> ret=INF;</span><br><span class="line">    <span class="keyword">if</span> (l==r) <span class="keyword">return</span> ret;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    ret=min(ret,min(calc(l,mid),calc(mid+<span class="number">1</span>,r)));</span><br><span class="line">    w.clear();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">fabs</span>(t[i].x-t[mid].x)&lt;ret) w.push_back(i);</span><br><span class="line">    sort(w.begin(),w.end(),check);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;w.size();i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;w.size()&amp;&amp;<span class="built_in">fabs</span>(t[w[i]].y-t[w[j]].y)&lt;ret;j++)</span><br><span class="line">            ret=min(ret,dist(t[w[i]],t[w[j]]));</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;t[i].x,&amp;t[i].y);</span><br><span class="line">    sort(t+<span class="number">1</span>,t+n+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.4lf"</span>,calc(<span class="number">1</span>,n));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;裸的二分，复杂度&lt;script type=&quot;math/tex&quot;&gt;O\left ( nlog^{2}n \right )&lt;/script&gt;&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="二分" scheme="http://yoursite.com/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P3933 Chtholly Nota Seniorious</title>
    <link href="http://yoursite.com/2018/07/05/%E6%B4%9B%E8%B0%B7P3933-Chtholly-Nota-Seniorious/"/>
    <id>http://yoursite.com/2018/07/05/洛谷P3933-Chtholly-Nota-Seniorious/</id>
    <published>2018-07-05T12:13:49.000Z</published>
    <updated>2018-07-05T12:21:08.172Z</updated>
    
    <content type="html"><![CDATA[<p>神奇的二分答案题<br><a id="more"></a><br>根据题目奇奇怪怪的限制，不难发现选择的行和列要连续<br>为了方便计算，将矩阵转置四次，每次只需考虑行要连续<br>二分一下ans进行检验<br>对于矩阵中的mins和maxs，显然二者不能分在一起<br>根据mins，maxs和二分出来的ans，贪心地确定每个值所在的分组，若不连续则不合法<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">2050</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">30</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,now,w[<span class="number">2</span>][N][N],ans,mins=INF,maxs=-INF;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            w[now^<span class="number">1</span>][j][n-i+<span class="number">1</span>]=w[now][i][j];</span><br><span class="line">    swap(n,m),now^=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="keyword">if</span> (maxs-w[now][i][j]&gt;k)</span><br><span class="line">                num=max(num,j);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=num;j++)</span><br><span class="line">            <span class="keyword">if</span> (w[now][i][j]-mins&gt;k) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> L=<span class="number">0</span>,R=ans;</span><br><span class="line">    <span class="keyword">while</span> (L&lt;R)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(L+R)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (check(mid))</span><br><span class="line">            R=mid;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            L=mid+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ans=R;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read(),m=read(),now=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            w[<span class="number">0</span>][i][j]=read();</span><br><span class="line">            maxs=max(maxs,w[<span class="number">0</span>][i][j]);</span><br><span class="line">            mins=min(mins,w[<span class="number">0</span>][i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    ans=maxs-mins;</span><br><span class="line">    rotate(),solve();</span><br><span class="line">    rotate(),solve();</span><br><span class="line">    rotate(),solve();</span><br><span class="line">    rotate(),solve();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;神奇的二分答案题&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="二分答案" scheme="http://yoursite.com/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>最大化平均值</title>
    <link href="http://yoursite.com/2018/07/05/max-ave/"/>
    <id>http://yoursite.com/2018/07/05/max-ave/</id>
    <published>2018-07-05T12:00:55.000Z</published>
    <updated>2018-07-05T13:08:22.563Z</updated>
    
    <content type="html"><![CDATA[<p><strong>问题描述：</strong><br>有n个物品的重量和价值分别是 wi 和 vi。从中选出k个物品使得单位重量的价值最大。<br><a id="more"></a><br>根据定义</p><script type="math/tex; mode=display">\sum_{i=1}^{k}v_{i}=x\sum_{i=1}^{k}w_{i}</script><p>即</p><script type="math/tex; mode=display">\sum_{i=1}^{k}\left (v _{i}-xw_{i} \right )=0</script><p>二分一下x，每次在<script type="math/tex">\left (v _{i}-xw_{i} \right )</script>贪心地找前k大的<br>复杂度<script type="math/tex">O\left ( nlog^{2}n \right )</script><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">10050</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps=<span class="number">1e-5</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,w[N],v[N];</span><br><span class="line"><span class="keyword">double</span> c[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">double</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) c[i]=v[i]-k*w[i];</span><br><span class="line">sort(c+<span class="number">1</span>,c+n+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">double</span> ret=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;n-m;i--) ret+=c[i];</span><br><span class="line"><span class="keyword">return</span> ret&gt;-eps;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read(),m=read();</span><br><span class="line"><span class="keyword">double</span> L=<span class="number">0</span>,R;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) w[i]=read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">v[i]=read(),R=max((<span class="keyword">double</span>)v[i],R);</span><br><span class="line"><span class="keyword">while</span> (R-L&gt;eps)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">double</span> mid=(L+R)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (check(mid))</span><br><span class="line">L=mid;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">R=mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.2lf"</span>,R);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;问题描述：&lt;/strong&gt;&lt;br&gt;有n个物品的重量和价值分别是 wi 和 vi。从中选出k个物品使得单位重量的价值最大。&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="二分答案" scheme="http://yoursite.com/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>[NOIP2017]列队</title>
    <link href="http://yoursite.com/2018/06/28/NOIP2017-%E5%88%97%E9%98%9F/"/>
    <id>http://yoursite.com/2018/06/28/NOIP2017-列队/</id>
    <published>2018-06-28T10:01:31.000Z</published>
    <updated>2018-06-28T10:20:10.841Z</updated>
    
    <content type="html"><![CDATA[<p>感觉是至今为止做到的最难的数据结构题<br>什么分块，嵌套，可持久化都没有这题给人的第一感觉难<br>这题每个数据开一个点都开不下。<br>考场上见到这题基本上一脸懵逼，想了很久写了个<script type="math/tex">O\left ( q^{2}\right )</script>但是不能优化的算法，结果没开LL只有30分<br><a id="more"></a><br>用线段树维护每一行和最后一列，支持单点rank和insert两种操作<br>最大长度为<script type="math/tex">max\left ( n,m \right )+q</script><br>动态开点减少内存，空间复杂度<script type="math/tex">O\left ( 4qlog\left (  max\left ( n,m \right )+q\right ) \right )</script><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">300050</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span><span class="keyword">int</span> l,r,sz,id;<span class="keyword">bool</span> f;&#125; t[N*<span class="number">60</span>];</span><br><span class="line"><span class="keyword">int</span> n,m,T,cnt=<span class="number">0</span>,idx=<span class="number">0</span>,rt[N],sz[N],pos,u,v;</span><br><span class="line">LL w[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'-'</span>&amp;&amp;(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) t=<span class="number">-1</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> &amp;o,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> f)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">o=++cnt;</span><br><span class="line"><span class="keyword">if</span> (l==r)</span><br><span class="line">&#123;</span><br><span class="line">t[o].sz=(!f&amp;&amp;r&lt;m)||(f&amp;&amp;r&lt;=n);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">build(t[o].l,l,mid,f);</span><br><span class="line">build(t[o].r,mid+<span class="number">1</span>,r,f);</span><br><span class="line">t[o].sz=t[t[o].l].sz+t[t[o].r].sz;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">ask</span><span class="params">(<span class="keyword">int</span> &amp;o,<span class="keyword">int</span> pre,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> f)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!t[o].f) o=++cnt,t[o]=t[pre],t[o].f=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (l==r) </span><br><span class="line">&#123;</span><br><span class="line">t[o].sz=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (!f&amp;&amp;r&lt;m) <span class="keyword">return</span> (LL)(u<span class="number">-1</span>)*m+l;</span><br><span class="line"><span class="keyword">if</span> (f&amp;&amp;r&lt;=n) <span class="keyword">return</span> (LL)r*m;</span><br><span class="line"><span class="keyword">return</span> w[t[o].id];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> num=t[t[o].l].sz,mid=(l+r)&gt;&gt;<span class="number">1</span>;LL ret;</span><br><span class="line"><span class="keyword">if</span> (pos&lt;=num)</span><br><span class="line">ret=ask(t[o].l,t[pre].l,l,mid,f);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">pos-=num,ret=ask(t[o].r,t[pre].r,mid+<span class="number">1</span>,r,f);</span><br><span class="line">t[o].sz=t[t[o].l].sz+t[t[o].r].sz;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> &amp;o,<span class="keyword">int</span> pre,<span class="keyword">int</span> l,<span class="keyword">int</span> r,LL x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!t[o].f) o=++cnt,t[o]=t[pre],t[o].f=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (l==r) </span><br><span class="line">&#123;</span><br><span class="line">w[++idx]=x;</span><br><span class="line">t[o].id=idx,t[o].sz=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (pos&lt;=mid)</span><br><span class="line">insert(t[o].l,t[pre].l,l,mid,x);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">insert(t[o].r,t[pre].r,mid+<span class="number">1</span>,r,x);</span><br><span class="line">t[o].sz=t[t[o].l].sz+t[t[o].r].sz;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read(),m=read(),T=read();</span><br><span class="line"><span class="keyword">int</span> maxs=max(n,m)+T;</span><br><span class="line">build(rt[<span class="number">0</span>],<span class="number">1</span>,maxs,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) rt[i]=++cnt,t[cnt]=t[rt[<span class="number">0</span>]],t[cnt].f=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) sz[i]=m<span class="number">-1</span>;sz[n+<span class="number">1</span>]=n;</span><br><span class="line">build(rt[n+<span class="number">1</span>],<span class="number">1</span>,maxs,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span> (T--)</span><br><span class="line">&#123;</span><br><span class="line">u=read(),v=read();</span><br><span class="line"><span class="keyword">if</span> (v==m)</span><br><span class="line">&#123;</span><br><span class="line">LL x;</span><br><span class="line">pos=u,x=ask(rt[n+<span class="number">1</span>],rt[n+<span class="number">1</span>],<span class="number">1</span>,maxs,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,x);</span><br><span class="line">pos=++sz[n+<span class="number">1</span>],insert(rt[n+<span class="number">1</span>],rt[n+<span class="number">1</span>],<span class="number">1</span>,maxs,x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">LL x,w;</span><br><span class="line">pos=v,x=ask(rt[u],rt[u],<span class="number">1</span>,maxs,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,x);</span><br><span class="line">pos=u,w=ask(rt[n+<span class="number">1</span>],rt[n+<span class="number">1</span>],<span class="number">1</span>,maxs,<span class="number">1</span>);</span><br><span class="line">pos=++sz[u],insert(rt[u],rt[u],<span class="number">1</span>,maxs,w);</span><br><span class="line">pos=++sz[n+<span class="number">1</span>],insert(rt[n+<span class="number">1</span>],rt[n+<span class="number">1</span>],<span class="number">1</span>,maxs,x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;感觉是至今为止做到的最难的数据结构题&lt;br&gt;什么分块，嵌套，可持久化都没有这题给人的第一感觉难&lt;br&gt;这题每个数据开一个点都开不下。&lt;br&gt;考场上见到这题基本上一脸懵逼，想了很久写了个&lt;script type=&quot;math/tex&quot;&gt;O\left ( q^{2}\right )&lt;/script&gt;但是不能优化的算法，结果没开LL只有30分&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="线段树" scheme="http://yoursite.com/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>[NOIP2017]宝藏</title>
    <link href="http://yoursite.com/2018/06/22/NOIP2017-%E5%AE%9D%E8%97%8F/"/>
    <id>http://yoursite.com/2018/06/22/NOIP2017-宝藏/</id>
    <published>2018-06-22T13:16:35.000Z</published>
    <updated>2018-06-24T12:31:33.782Z</updated>
    
    <content type="html"><![CDATA[<p>一道状压dp的题<br>当初考场上没有想到如何保存状态，写了个<script type="math/tex">O\left ( 2^{n} n!\right )</script>的，拿了70分<br>dp数组记录最大深度d，和已选点状态s<br>对于每个s，枚举补集进行更新<br>枚举补集复杂度为<script type="math/tex">O\left ( 3^{n}\right )</script>，总复杂度<script type="math/tex">O\left ( n3^{n} \right )</script><br><a id="more"></a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">14</span>,INF=<span class="number">1</span>&lt;&lt;<span class="number">30</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,dp[N][<span class="number">1</span>&lt;&lt;N],w[<span class="number">1</span>&lt;&lt;N],idx[<span class="number">1</span>&lt;&lt;N],pos[<span class="number">1</span>&lt;&lt;N],c[N],f[N][N],val[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) f[i][j]=INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> d=<span class="number">0</span>;d&lt;=n;d++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;n);i++) dp[d][i]=INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u,v,val;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;val);</span><br><span class="line">        f[u][v]=f[v][u]=min(val,f[u][v]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            <span class="keyword">if</span> (f[i][j]!=INF) e[i].push_back(j);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) dp[<span class="number">0</span>][<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>)]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> d=<span class="number">0</span>;d&lt;=n;d++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>,cnt=<span class="number">0</span>;s&lt;(<span class="number">1</span>&lt;&lt;n);s++,cnt=<span class="number">0</span>) <span class="keyword">if</span> (dp[d][s]!=INF)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">                <span class="keyword">if</span> (!(s&gt;&gt;(i<span class="number">-1</span>)&amp;<span class="number">1</span>)) pos[<span class="number">1</span>&lt;&lt;cnt]=i,val[i]=INF,c[cnt++]=i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;(<span class="number">1</span>&lt;&lt;cnt);k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;cnt;i++)</span><br><span class="line">                    <span class="keyword">if</span> ((k&gt;&gt;i)&amp;<span class="number">1</span>) x|=<span class="number">1</span>&lt;&lt;(c[i]<span class="number">-1</span>);</span><br><span class="line">                idx[k]=x,w[x]=INF;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="keyword">if</span> ((s&gt;&gt;(i<span class="number">-1</span>))&amp;<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;e[i].size();j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> to=e[i][j];</span><br><span class="line">                    <span class="keyword">if</span> (!((s&gt;&gt;(to<span class="number">-1</span>))&amp;<span class="number">1</span>)) val[to]=min(f[i][to],val[to]);</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;(<span class="number">1</span>&lt;&lt;cnt);k++) </span><br><span class="line">                <span class="keyword">if</span> (w[idx[k-(k&amp;-k)]]!=INF&amp;&amp;val[pos[k&amp;-k]]!=INF)</span><br><span class="line">                w[idx[k]]=w[idx[k-(k&amp;-k)]]+(d+<span class="number">1</span>)*val[pos[k&amp;-k]];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;(<span class="number">1</span>&lt;&lt;cnt);k++)</span><br><span class="line">                <span class="keyword">if</span> (!(s&amp;idx[k])&amp;&amp;w[idx[k]]!=INF)</span><br><span class="line">                dp[d+<span class="number">1</span>][s|idx[k]]=min(dp[d+<span class="number">1</span>][s|idx[k]],dp[d][s]+w[idx[k]]);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        ans=min(ans,dp[i][(<span class="number">1</span>&lt;&lt;n)<span class="number">-1</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一道状压dp的题&lt;br&gt;当初考场上没有想到如何保存状态，写了个&lt;script type=&quot;math/tex&quot;&gt;O\left ( 2^{n} n!\right )&lt;/script&gt;的，拿了70分&lt;br&gt;dp数组记录最大深度d，和已选点状态s&lt;br&gt;对于每个s，枚举补集进行更新&lt;br&gt;枚举补集复杂度为&lt;script type=&quot;math/tex&quot;&gt;O\left ( 3^{n}\right )&lt;/script&gt;，总复杂度&lt;script type=&quot;math/tex&quot;&gt;O\left ( n3^{n} \right )&lt;/script&gt;&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="动态规划" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="状态压缩" scheme="http://yoursite.com/tags/%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9/"/>
    
  </entry>
  
  <entry>
    <title>[HNOI2009]梦幻布丁</title>
    <link href="http://yoursite.com/2018/06/20/HNOI2009-%E6%A2%A6%E5%B9%BB%E5%B8%83%E4%B8%81/"/>
    <id>http://yoursite.com/2018/06/20/HNOI2009-梦幻布丁/</id>
    <published>2018-06-20T08:51:24.000Z</published>
    <updated>2018-06-24T12:15:02.184Z</updated>
    
    <content type="html"><![CDATA[<p>用并查集维护<br>在代表元素中保存当前段的颜色（<script type="math/tex">w[]</script>），和左右端点（<script type="math/tex">s[]，t[]</script>）<br>再用一个桶维护每种颜色的所有段<br>当且仅当要合并两段颜色相同时进行合并，并更新左右端点<br>对于每个桶用list维护，再进行启发式合并，这里偷懒直接用了vector<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100050</span>;</span><br><span class="line"><span class="keyword">int</span> fa[N],w[N],cnt,s[N],t[N],n,m;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; f[N*<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> ((ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&amp;&amp;ch!=<span class="string">'-'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) &#123;t=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) &#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;<span class="keyword">return</span> fa[x]==x?x:fa[x]=find(fa[x]);&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">unite</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!u||!v) <span class="keyword">return</span>;</span><br><span class="line">u=find(u),v=find(v);</span><br><span class="line"><span class="keyword">if</span> (w[u]!=w[v]) <span class="keyword">return</span>;<span class="keyword">else</span> cnt--;</span><br><span class="line">fa[v]=u,s[u]=min(s[u],s[v]),t[u]=max(t[u],t[v]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u=read(),v=read();</span><br><span class="line"><span class="keyword">if</span> (u==v) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">while</span> (!f[u].empty())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x=f[u].back();f[u].pop_back();</span><br><span class="line"><span class="keyword">if</span> (find(x)!=x) <span class="keyword">continue</span>;<span class="keyword">else</span> w[x]=v;</span><br><span class="line"><span class="keyword">int</span> st=s[x],ed=t[x];</span><br><span class="line"><span class="keyword">if</span> (st&gt;<span class="number">1</span>) unite(st<span class="number">-1</span>,st);</span><br><span class="line"><span class="keyword">if</span> (ed&lt;n) unite(ed,ed+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (find(x)==x) f[v].push_back(x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=cnt=read(),m=read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) w[i]=read(),fa[i]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) s[i]=t[i]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++) unite(i,i+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">if</span> (i==find(i)) </span><br><span class="line">f[w[i]].push_back(i);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> opt=read();</span><br><span class="line"><span class="keyword">if</span> (opt==<span class="number">1</span>) update();</span><br><span class="line"><span class="keyword">if</span> (opt==<span class="number">2</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,cnt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用并查集维护&lt;br&gt;在代表元素中保存当前段的颜色（&lt;script type=&quot;math/tex&quot;&gt;w[]&lt;/script&gt;），和左右端点（&lt;script type=&quot;math/tex&quot;&gt;s[]，t[]&lt;/script&gt;）&lt;br&gt;再用一个桶维护每种颜色的所有段&lt;br&gt;当且仅当要合并两段颜色相同时进行合并，并更新左右端点&lt;br&gt;对于每个桶用list维护，再进行启发式合并，这里偷懒直接用了vector&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="并查集" scheme="http://yoursite.com/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="链表" scheme="http://yoursite.com/tags/%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>洛谷P1471 方差</title>
    <link href="http://yoursite.com/2018/06/15/%E6%B4%9B%E8%B0%B7P1471-%E6%96%B9%E5%B7%AE/"/>
    <id>http://yoursite.com/2018/06/15/洛谷P1471-方差/</id>
    <published>2018-06-15T12:25:08.000Z</published>
    <updated>2018-07-05T12:13:28.121Z</updated>
    
    <content type="html"><![CDATA[<p>区间修改，区间查询，基本可以用线段树维护，主要是方差比较难维护<br><a id="more"></a><br>将方差的计算展开</p><script type="math/tex; mode=display">\frac{\sum_{i=1}^{n} \left ( a_{i}-\bar{a} \right )^{2}}{n}= \frac{\sum_{i=1}^{n} a_{i}^{2}-2\bar{a}\sum_{i=1}^{n}a_{i}+n\bar{a}^{2}}{n}= -\bar{a}^{2}+\frac{\sum_{i=1}^{n}a_{i}^{2}}{n}</script><p>对于区间加法</p><script type="math/tex; mode=display">\sum_{i=l}^{r}\left ( a_{i}+x \right )^{2}= \sum_{i=l}^{r}a_{i}^{2}+2x\sum_{i=l}^{r}a_{i}+\left ( r-l+1 \right )*x^{2}</script><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100050</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps=<span class="number">1e-8</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,ql,qr;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span><span class="keyword">double</span> val,sum,c;&#125; t[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">sqr</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123;<span class="keyword">return</span> x*x;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l==r) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;t[o].val);</span><br><span class="line">        t[o].sum=sqr(t[o].val);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    build(o&lt;&lt;<span class="number">1</span>,l,mid);</span><br><span class="line">    build(o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">    t[o].val=t[o&lt;&lt;<span class="number">1</span>].val+t[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].val;</span><br><span class="line">    t[o].sum=t[o&lt;&lt;<span class="number">1</span>].sum+t[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> x=t[o].c;t[o].c=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>; </span><br><span class="line">    t[o&lt;&lt;<span class="number">1</span>].sum+=(mid-l+<span class="number">1</span>)*sqr(x)+<span class="number">2</span>*x*t[o&lt;&lt;<span class="number">1</span>].val;</span><br><span class="line">    t[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].sum+=(r-mid)*sqr(x)+<span class="number">2</span>*x*t[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].val;</span><br><span class="line">    t[o&lt;&lt;<span class="number">1</span>].val+=(mid-l+<span class="number">1</span>)*x;</span><br><span class="line">    t[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].val+=(r-mid)*x;</span><br><span class="line">    t[o&lt;&lt;<span class="number">1</span>].c+=x,t[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].c+=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ql&lt;=l&amp;&amp;r&lt;=qr) </span><br><span class="line">    &#123;</span><br><span class="line">        t[o].sum+=sqr(x)*(r-l+<span class="number">1</span>)+<span class="number">2</span>*x*t[o].val;</span><br><span class="line">        t[o].val+=(r-l+<span class="number">1</span>)*x;t[o].c+=x;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">fabs</span>(t[o].c)&gt;eps) pushdown(o,l,r);</span><br><span class="line">    <span class="keyword">if</span> (ql&lt;=mid) update(o&lt;&lt;<span class="number">1</span>,l,mid,x);</span><br><span class="line">    <span class="keyword">if</span> (qr&gt;mid) update(o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x);</span><br><span class="line">    t[o].val=t[o&lt;&lt;<span class="number">1</span>].val+t[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].val;</span><br><span class="line">    t[o].sum=t[o&lt;&lt;<span class="number">1</span>].sum+t[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ask</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ql&lt;=l&amp;&amp;r&lt;=qr) <span class="keyword">return</span> t[o].val;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;<span class="keyword">double</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">fabs</span>(t[o].c)&gt;eps) pushdown(o,l,r);</span><br><span class="line">    <span class="keyword">if</span> (ql&lt;=mid) ret+=ask(o&lt;&lt;<span class="number">1</span>,l,mid);</span><br><span class="line">    <span class="keyword">if</span> (qr&gt;mid) ret+=ask(o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ql&lt;=l&amp;&amp;r&lt;=qr) <span class="keyword">return</span> t[o].sum;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;<span class="keyword">double</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">fabs</span>(t[o].c)&gt;eps) pushdown(o,l,r);</span><br><span class="line">    <span class="keyword">if</span> (ql&lt;=mid) ret+=query(o&lt;&lt;<span class="number">1</span>,l,mid);</span><br><span class="line">    <span class="keyword">if</span> (qr&gt;mid) ret+=query(o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    build(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> opt;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;opt,&amp;ql,&amp;qr);</span><br><span class="line">        <span class="keyword">if</span> (opt==<span class="number">1</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">double</span> x;<span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;x);</span><br><span class="line">            update(<span class="number">1</span>,<span class="number">1</span>,n,x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (opt==<span class="number">2</span>) <span class="built_in">printf</span>(<span class="string">"%.4lf\n"</span>,ask(<span class="number">1</span>,<span class="number">1</span>,n)/(qr-ql+<span class="number">1</span>));</span><br><span class="line">        <span class="keyword">if</span> (opt==<span class="number">3</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">double</span> x=ask(<span class="number">1</span>,<span class="number">1</span>,n)/(qr-ql+<span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%.4lf\n"</span>,-sqr(x)+query(<span class="number">1</span>,<span class="number">1</span>,n)/(qr-ql+<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;区间修改，区间查询，基本可以用线段树维护，主要是方差比较难维护&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="线段树" scheme="http://yoursite.com/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>[ZJOI2006]书架</title>
    <link href="http://yoursite.com/2018/06/13/ZJOI2006-%E4%B9%A6%E6%9E%B6/"/>
    <id>http://yoursite.com/2018/06/13/ZJOI2006-书架/</id>
    <published>2018-06-13T14:32:28.000Z</published>
    <updated>2018-06-24T12:21:44.145Z</updated>
    
    <content type="html"><![CDATA[<p>一看题目就有一种平衡树的气息。<br>给每本书一个val来维护相对位置<br>再用一个<script type="math/tex">pos[]</script>数组记录下编号为x的位置<script type="math/tex">pos[x]</script><br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">1</span>&lt;&lt;<span class="number">30</span>,N=<span class="number">200050</span>;</span><br><span class="line"><span class="keyword">int</span> rt=<span class="number">0</span>,cnt=<span class="number">0</span>,n,m,pos[N],w[N],L,R;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> ((ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&amp;&amp;ch!=<span class="string">'-'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) &#123;t=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) &#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span><span class="keyword">int</span> ch[<span class="number">2</span>],fa,rec,val,sz;&#125;t[N];</span><br><span class="line"><span class="keyword">namespace</span> Splay</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> o)</span> </span>&#123;t[o].sz=t[t[o].ch[<span class="number">0</span>]].sz+t[t[o].ch[<span class="number">1</span>]].sz+<span class="number">1</span>;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">maintain</span><span class="params">(<span class="keyword">int</span> o)</span> </span>&#123;pos[t[o].rec]=o;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> y=t[x].fa,z=t[y].fa,k=t[y].ch[<span class="number">1</span>]==x;</span><br><span class="line">        t[z].ch[t[z].ch[<span class="number">1</span>]==y]=x,t[x].fa=z;</span><br><span class="line">        t[y].ch[k]=t[x].ch[k^<span class="number">1</span>],t[t[x].ch[k^<span class="number">1</span>]].fa=y;</span><br><span class="line">        t[x].ch[k^<span class="number">1</span>]=y,t[y].fa=x;</span><br><span class="line">        calc(y),calc(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> to)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (t[x].fa!=to)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> y=t[x].fa,z=t[y].fa;</span><br><span class="line">            <span class="keyword">if</span> (z!=to) (t[y].ch[<span class="number">0</span>]==x)^(t[z].ch[<span class="number">0</span>]==y)?rotate(x):rotate(y);</span><br><span class="line">            rotate(x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!to) rt=x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> &amp;o,<span class="keyword">int</span> fa,<span class="keyword">int</span> x,<span class="keyword">int</span> idx)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!o)</span><br><span class="line">        &#123;</span><br><span class="line">            o=++cnt; </span><br><span class="line">            t[o].val=x,t[o].fa=fa;</span><br><span class="line">            t[o].sz=<span class="number">1</span>;</span><br><span class="line">            t[o].rec=idx;</span><br><span class="line">            pos[idx]=o;</span><br><span class="line">            splay(o,<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        t[o].sz++;</span><br><span class="line">        ins(t[o].ch[x&gt;t[o].val],o,x,idx);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> o=rt;</span><br><span class="line">        <span class="keyword">while</span> (t[o].ch[x&gt;t[o].val]&amp;&amp;x!=t[o].val) o=t[o].ch[x&gt;t[o].val];</span><br><span class="line">        splay(o,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">next</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> opt)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        find(x);</span><br><span class="line">        <span class="keyword">if</span> ((t[rt].val&gt;x&amp;&amp;opt)||(t[rt].val&lt;x&amp;&amp;!opt)) <span class="keyword">return</span> rt;</span><br><span class="line">        <span class="keyword">int</span> o=t[rt].ch[opt];</span><br><span class="line">        <span class="keyword">while</span> (t[o].ch[opt^<span class="number">1</span>]) o=t[o].ch[opt^<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">return</span> o;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> pre=next(x,<span class="number">0</span>),nxt=next(x,<span class="number">1</span>);</span><br><span class="line">        splay(pre,<span class="number">0</span>),splay(nxt,pre);</span><br><span class="line">        <span class="keyword">int</span> o=t[nxt].ch[<span class="number">0</span>];</span><br><span class="line">    t[nxt].ch[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    calc(nxt);calc(pre);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">K_th</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!o) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (k&lt;=t[t[o].ch[<span class="number">0</span>]].sz)</span><br><span class="line">            <span class="keyword">return</span> K_th(t[o].ch[<span class="number">0</span>],k);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (k&gt;t[t[o].ch[<span class="number">0</span>]].sz+<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> K_th(t[o].ch[<span class="number">1</span>],k-t[t[o].ch[<span class="number">0</span>]].sz<span class="number">-1</span>);</span><br><span class="line">        splay(o,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> t[o].rec;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Splay;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> f)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!f) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (f&lt;<span class="number">0</span>) f++;</span><br><span class="line">    <span class="keyword">int</span> nxt=next(t[pos[x]].val,f);</span><br><span class="line">    swap(t[nxt].rec,t[pos[x]].rec);</span><br><span class="line">    maintain(pos[x]),maintain(nxt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L=<span class="number">1</span>,R=n=read(),m=read();</span><br><span class="line">    ins(rt,<span class="number">0</span>,INF,<span class="number">0</span>),ins(rt,<span class="number">0</span>,-INF,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) ins(rt,<span class="number">0</span>,i,read());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> str[<span class="number">20</span>];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,str);</span><br><span class="line">        <span class="keyword">int</span> x=read();</span><br><span class="line">        <span class="keyword">if</span> (str[<span class="number">0</span>]==<span class="string">'T'</span>) del(t[pos[x]].val),ins(rt,<span class="number">0</span>,--L,x);</span><br><span class="line">        <span class="keyword">if</span> (str[<span class="number">0</span>]==<span class="string">'B'</span>) del(t[pos[x]].val),ins(rt,<span class="number">0</span>,++R,x);</span><br><span class="line">        <span class="keyword">if</span> (str[<span class="number">0</span>]==<span class="string">'I'</span>) insert(x,read());</span><br><span class="line">        <span class="keyword">if</span> (str[<span class="number">0</span>]==<span class="string">'A'</span>) find(t[pos[x]].val),<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,t[t[rt].ch[<span class="number">0</span>]].sz<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">if</span> (str[<span class="number">0</span>]==<span class="string">'Q'</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,K_th(rt,x+<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一看题目就有一种平衡树的气息。&lt;br&gt;给每本书一个val来维护相对位置&lt;br&gt;再用一个&lt;script type=&quot;math/tex&quot;&gt;pos[]&lt;/script&gt;数组记录下编号为x的位置&lt;script type=&quot;math/tex&quot;&gt;pos[x]&lt;/script&gt;&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="平衡树" scheme="http://yoursite.com/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>[POI2011]ROT-Tree Rotations</title>
    <link href="http://yoursite.com/2018/06/13/POI2011-ROT-Tree-Rotations/"/>
    <id>http://yoursite.com/2018/06/13/POI2011-ROT-Tree-Rotations/</id>
    <published>2018-06-13T14:31:51.000Z</published>
    <updated>2018-06-22T13:17:21.748Z</updated>
    
    <content type="html"><![CDATA[<p>对于每个节点分别求左-右，右-左的逆序对，将较小的加入答案<br>原来思路：枚举个数较少的节点的每个数，二分求答案<br>看完题解发现可以用线段树合并。新技能get<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">400050</span>;</span><br><span class="line"><span class="keyword">int</span> cnt,st,ch[N][<span class="number">2</span>],w[N],rt[N],n;</span><br><span class="line"><span class="keyword">int</span> idx,ls[N*<span class="number">20</span>],rs[N*<span class="number">20</span>],sum[N*<span class="number">20</span>];</span><br><span class="line">LL ans,f,g;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> &amp;o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    o=++cnt;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;w[o]);</span><br><span class="line">    <span class="keyword">if</span> (!w[o]) dfs(ch[o][<span class="number">0</span>]),dfs(ch[o][<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> &amp;o,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    o=++idx;</span><br><span class="line">    <span class="keyword">if</span> (l==r) &#123;sum[o]=<span class="number">1</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    k&lt;=mid?build(ls[o],l,mid,k):build(rs[o],mid+<span class="number">1</span>,r,k);</span><br><span class="line">    sum[o]=sum[ls[o]]+sum[rs[o]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!u||!v) <span class="keyword">return</span> v+u;</span><br><span class="line">    f+=(LL)sum[rs[u]]*sum[ls[v]];</span><br><span class="line">    g+=(LL)sum[ls[u]]*sum[rs[v]];</span><br><span class="line">    <span class="keyword">int</span> o=++idx;</span><br><span class="line">    ls[o]=merge(ls[u],ls[v]);</span><br><span class="line">    rs[o]=merge(rs[u],rs[v]);</span><br><span class="line">    sum[o]=sum[ls[o]]+sum[rs[o]];</span><br><span class="line">    <span class="keyword">return</span> o;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!o) <span class="keyword">return</span>;</span><br><span class="line">    calc(ch[o][<span class="number">0</span>]),calc(ch[o][<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span> (!w[o]) </span><br><span class="line">    &#123;</span><br><span class="line">        f=g=<span class="number">0</span>;</span><br><span class="line">        rt[o]=merge(rt[ch[o][<span class="number">0</span>]],rt[ch[o][<span class="number">1</span>]]);</span><br><span class="line">        ans+=min(f,g);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    dfs(st);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">        <span class="keyword">if</span> (w[i]) build(rt[i],<span class="number">1</span>,n,w[i]);</span><br><span class="line">    calc(st);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于每个节点分别求左-右，右-左的逆序对，将较小的加入答案&lt;br&gt;原来思路：枚举个数较少的节点的每个数，二分求答案&lt;br&gt;看完题解发现可以用线段树合并。新技能get&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="线段树" scheme="http://yoursite.com/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>[ZJOI2006]皇帝的烦恼</title>
    <link href="http://yoursite.com/2018/06/13/ZJOI2006-%E7%9A%87%E5%B8%9D%E7%9A%84%E7%83%A6%E6%81%BC/"/>
    <id>http://yoursite.com/2018/06/13/ZJOI2006-皇帝的烦恼/</id>
    <published>2018-06-13T14:29:57.000Z</published>
    <updated>2018-06-22T13:17:32.005Z</updated>
    
    <content type="html"><![CDATA[<p>二分+dp<br>dp不是很好想<br>f记录与第一个位置相同个数的最大值<br>g记录与第一个位置相同个数的最小值<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">20050</span>;</span><br><span class="line"><span class="keyword">int</span> n,maxs,sum=<span class="number">0</span>,w[N],f[N],g[N];<span class="comment">//f&gt;&gt;max g&gt;&gt;min</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    f[<span class="number">1</span>]=g[<span class="number">1</span>]=w[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        f[i]=min(w[<span class="number">1</span>]-g[i<span class="number">-1</span>],w[i]);  </span><br><span class="line">        g[i]=max(<span class="number">0</span>,w[i]-(k-w[i<span class="number">-1</span>]-w[<span class="number">1</span>]+f[i<span class="number">-1</span>]));  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> !g[n];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;w[i]),sum+=w[i];</span><br><span class="line">    maxs=w[<span class="number">1</span>]+w[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++) maxs=max(maxs,w[i]+w[i+<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span> (!(n&amp;<span class="number">1</span>)) &#123;<span class="built_in">printf</span>(<span class="string">"%d"</span>,maxs);<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">    <span class="keyword">int</span> L=maxs,R=sum;</span><br><span class="line">    <span class="keyword">while</span> (L&lt;R)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(L+R)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (check(mid))</span><br><span class="line">            R=mid;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            L=mid+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,L);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;二分+dp&lt;br&gt;dp不是很好想&lt;br&gt;f记录与第一个位置相同个数的最大值&lt;br&gt;g记录与第一个位置相同个数的最小值&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="动态规划" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="二分答案" scheme="http://yoursite.com/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>Splay模板</title>
    <link href="http://yoursite.com/2018/06/11/Splay/"/>
    <id>http://yoursite.com/2018/06/11/Splay/</id>
    <published>2018-06-11T07:57:52.000Z</published>
    <updated>2018-06-22T13:17:46.808Z</updated>
    
    <content type="html"><![CDATA[<p>优化了一下之前Splay<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">1</span>&lt;&lt;<span class="number">30</span>,N=<span class="number">100050</span>;</span><br><span class="line"><span class="keyword">int</span> rt=<span class="number">0</span>,cnt=<span class="number">0</span>,n;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> x=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> ((ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&amp;&amp;ch!=<span class="string">'-'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (ch==<span class="string">'-'</span>) &#123;t=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) &#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span><span class="keyword">int</span> ch[<span class="number">2</span>],fa,rec,val,sz;&#125;t[N];</span><br><span class="line"><span class="keyword">namespace</span> Splay</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> o)</span> </span>&#123;t[o].sz=t[t[o].ch[<span class="number">0</span>]].sz+t[t[o].ch[<span class="number">1</span>]].sz+t[o].rec;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> y=t[x].fa,z=t[y].fa,k=t[y].ch[<span class="number">1</span>]==x;</span><br><span class="line">t[z].ch[t[z].ch[<span class="number">1</span>]==y]=x,t[x].fa=z;</span><br><span class="line">t[y].ch[k]=t[x].ch[k^<span class="number">1</span>],t[t[x].ch[k^<span class="number">1</span>]].fa=y;</span><br><span class="line">t[x].ch[k^<span class="number">1</span>]=y,t[y].fa=x;</span><br><span class="line">calc(y),calc(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> to)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (t[x].fa!=to)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y=t[x].fa,z=t[y].fa;</span><br><span class="line"><span class="keyword">if</span> (z!=to) (t[y].ch[<span class="number">0</span>]==x)^(t[z].ch[<span class="number">0</span>]==y)?rotate(x):rotate(y);</span><br><span class="line">rotate(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!to) rt=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> &amp;o,<span class="keyword">int</span> fa,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!o)</span><br><span class="line">&#123;</span><br><span class="line">o=++cnt; </span><br><span class="line">t[o].val=x,t[o].fa=fa;</span><br><span class="line">t[o].sz=t[o].rec=<span class="number">1</span>;</span><br><span class="line">splay(o,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">t[o].sz++;</span><br><span class="line"><span class="keyword">if</span> (x==t[o].val) &#123;t[o].rec++;<span class="keyword">return</span>;&#125;</span><br><span class="line">ins(t[o].ch[x&gt;t[o].val],o,x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> o=rt;</span><br><span class="line"><span class="keyword">while</span> (t[o].ch[x&gt;t[o].val]&amp;&amp;x!=t[o].val) o=t[o].ch[x&gt;t[o].val];</span><br><span class="line">splay(o,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">next</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> opt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">find(x);</span><br><span class="line"><span class="keyword">if</span> ((t[rt].val&gt;x&amp;&amp;opt)||(t[rt].val&lt;x&amp;&amp;!opt)) <span class="keyword">return</span> rt;</span><br><span class="line"><span class="keyword">int</span> o=t[rt].ch[opt];</span><br><span class="line"><span class="keyword">while</span> (t[o].ch[opt^<span class="number">1</span>]) o=t[o].ch[opt^<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> o;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> pre=next(x,<span class="number">0</span>),nxt=next(x,<span class="number">1</span>);</span><br><span class="line">splay(pre,<span class="number">0</span>),splay(nxt,pre);</span><br><span class="line"><span class="keyword">int</span> o=t[nxt].ch[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span> (t[o].rec&gt;<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">t[o].rec--;</span><br><span class="line">splay(o,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> t[nxt].ch[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">K_th</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!o) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (k&lt;=t[t[o].ch[<span class="number">0</span>]].sz)</span><br><span class="line">    <span class="keyword">return</span> K_th(t[o].ch[<span class="number">0</span>],k);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (k&gt;t[t[o].ch[<span class="number">0</span>]].sz+t[o].rec)</span><br><span class="line">    <span class="keyword">return</span> K_th(t[o].ch[<span class="number">1</span>],k-t[t[o].ch[<span class="number">0</span>]].sz-t[o].rec);</span><br><span class="line">splay(o,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> t[o].val;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Splay;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">ins(rt,<span class="number">0</span>,INF),ins(rt,<span class="number">0</span>,-INF);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> opt=read(),x=read();</span><br><span class="line"><span class="keyword">if</span> (opt==<span class="number">1</span>) ins(rt,<span class="number">0</span>,x);</span><br><span class="line"><span class="keyword">if</span> (opt==<span class="number">2</span>) del(x);</span><br><span class="line"><span class="keyword">if</span> (opt==<span class="number">3</span>) find(x),<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,t[t[rt].ch[<span class="number">0</span>]].sz);</span><br><span class="line"><span class="keyword">if</span> (opt==<span class="number">4</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,K_th(rt,x+<span class="number">1</span>));</span><br><span class="line"><span class="keyword">if</span> (opt==<span class="number">5</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,t[next(x,<span class="number">0</span>)].val);</span><br><span class="line"><span class="keyword">if</span> (opt==<span class="number">6</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,t[next(x,<span class="number">1</span>)].val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;优化了一下之前Splay&lt;br&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yoursite.com/categories/OI/"/>
    
    
      <category term="平衡树" scheme="http://yoursite.com/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
</feed>
